{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./Device.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"x8dA+Oqh1iivvx03WEHujA7b658=","exportNames":["*"],"imports":1}},{"name":"./ExpoDevice","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":38,"index":140}}],"key":"0fzk2E6Nr6o2GHNufKcTmV29N+Y=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"DeviceType\", {\n    enumerable: true,\n    get: function () {\n      return _DeviceTypes.DeviceType;\n    }\n  });\n  Object.defineProperty(exports, \"isDevice\", {\n    enumerable: true,\n    get: function () {\n      return isDevice;\n    }\n  });\n  Object.defineProperty(exports, \"brand\", {\n    enumerable: true,\n    get: function () {\n      return brand;\n    }\n  });\n  Object.defineProperty(exports, \"manufacturer\", {\n    enumerable: true,\n    get: function () {\n      return manufacturer;\n    }\n  });\n  Object.defineProperty(exports, \"modelId\", {\n    enumerable: true,\n    get: function () {\n      return modelId;\n    }\n  });\n  Object.defineProperty(exports, \"modelName\", {\n    enumerable: true,\n    get: function () {\n      return modelName;\n    }\n  });\n  Object.defineProperty(exports, \"designName\", {\n    enumerable: true,\n    get: function () {\n      return designName;\n    }\n  });\n  Object.defineProperty(exports, \"productName\", {\n    enumerable: true,\n    get: function () {\n      return productName;\n    }\n  });\n  Object.defineProperty(exports, \"deviceType\", {\n    enumerable: true,\n    get: function () {\n      return deviceType;\n    }\n  });\n  Object.defineProperty(exports, \"deviceYearClass\", {\n    enumerable: true,\n    get: function () {\n      return deviceYearClass;\n    }\n  });\n  Object.defineProperty(exports, \"totalMemory\", {\n    enumerable: true,\n    get: function () {\n      return totalMemory;\n    }\n  });\n  Object.defineProperty(exports, \"supportedCpuArchitectures\", {\n    enumerable: true,\n    get: function () {\n      return supportedCpuArchitectures;\n    }\n  });\n  Object.defineProperty(exports, \"osName\", {\n    enumerable: true,\n    get: function () {\n      return osName;\n    }\n  });\n  Object.defineProperty(exports, \"osVersion\", {\n    enumerable: true,\n    get: function () {\n      return osVersion;\n    }\n  });\n  Object.defineProperty(exports, \"osBuildId\", {\n    enumerable: true,\n    get: function () {\n      return osBuildId;\n    }\n  });\n  Object.defineProperty(exports, \"osInternalBuildId\", {\n    enumerable: true,\n    get: function () {\n      return osInternalBuildId;\n    }\n  });\n  Object.defineProperty(exports, \"osBuildFingerprint\", {\n    enumerable: true,\n    get: function () {\n      return osBuildFingerprint;\n    }\n  });\n  Object.defineProperty(exports, \"platformApiLevel\", {\n    enumerable: true,\n    get: function () {\n      return platformApiLevel;\n    }\n  });\n  Object.defineProperty(exports, \"deviceName\", {\n    enumerable: true,\n    get: function () {\n      return deviceName;\n    }\n  });\n  exports.getDeviceTypeAsync = getDeviceTypeAsync;\n  exports.getUptimeAsync = getUptimeAsync;\n  exports.getMaxMemoryAsync = getMaxMemoryAsync;\n  exports.isRootedExperimentalAsync = isRootedExperimentalAsync;\n  exports.isSideLoadingEnabledAsync = isSideLoadingEnabledAsync;\n  exports.getPlatformFeaturesAsync = getPlatformFeaturesAsync;\n  exports.hasPlatformFeatureAsync = hasPlatformFeatureAsync;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _DeviceTypes = require(_dependencyMap[2], \"./Device.types\");\n  var _ExpoDevice = require(_dependencyMap[3], \"./ExpoDevice\");\n  var ExpoDevice = _interopDefault(_ExpoDevice);\n  /**\n   * `true` if the app is running on a real device and `false` if running in a simulator or emulator.\n   * On web, this is always set to `true`.\n   */\n  var isDevice = ExpoDevice.default ? ExpoDevice.default.isDevice : true;\n  /**\n   * The device brand. The consumer-visible brand of the product/hardware. On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.brand; // Android: \"google\", \"xiaomi\"; iOS: \"Apple\"; web: null\n   * ```\n   * @platform android\n   * @platform ios\n   */\n  var brand = ExpoDevice.default ? ExpoDevice.default.brand : null;\n  /**\n   * The actual device manufacturer of the product or hardware. This value of this field may be `null` if it cannot be determined.\n   *\n   * To view difference between `brand` and `manufacturer` on Android see [official documentation](https://developer.android.com/reference/android/os/Build).\n   *\n   * @example\n   * ```js\n   * Device.manufacturer; // Android: \"Google\", \"xiaomi\"; iOS: \"Apple\"; web: \"Google\", null\n   * ```\n   */\n  var manufacturer = ExpoDevice.default ? ExpoDevice.default.manufacturer : null;\n  /**\n   * The internal model ID of the device. This is useful for programmatically identifying the type of device and is not a human-friendly string.\n   * On web and Android, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.modelId; // iOS: \"iPhone7,2\"; Android: null; web: null\n   * ```\n   * @platform ios\n   */\n  var modelId = ExpoDevice.default ? ExpoDevice.default.modelId || null : null;\n  /**\n   * The human-friendly name of the device model. This is the name that people would typically use to refer to the device rather than a programmatic model identifier.\n   * This value of this field may be `null` if it cannot be determined.\n   *\n   * @example\n   * ```js\n   * Device.modelName; // Android: \"Pixel 2\"; iOS: \"iPhone XS Max\"; web: \"iPhone\", null\n   * ```\n   */\n  var modelName = ExpoDevice.default ? ExpoDevice.default.modelName : null;\n  /**\n   * The specific configuration or name of the industrial design. It represents the device's name when it was designed during manufacturing into mass production.\n   * On Android, it corresponds to [`Build.DEVICE`](https://developer.android.com/reference/android/os/Build#DEVICE). On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.designName; // Android: \"kminilte\"; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  var designName = ExpoDevice.default ? ExpoDevice.default.designName || null : null;\n  /**\n   * The device's overall product name chosen by the device implementer containing the development name or code name of the device.\n   * Corresponds to [`Build.PRODUCT`](https://developer.android.com/reference/android/os/Build#PRODUCT). On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.productName; // Android: \"kminiltexx\"; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  var productName = ExpoDevice.default ? ExpoDevice.default.productName || null : null;\n  /**\n   * The type of the device as a [`DeviceType`](#devicetype) enum value.\n   *\n   * On Android, for devices other than TVs, the device type is determined by the screen resolution (screen diagonal size), so the result may not be completely accurate.\n   * If the screen diagonal length is between 3\" and 6.9\", the method returns `DeviceType.PHONE`. For lengths between 7\" and 18\", the method returns `DeviceType.TABLET`.\n   * Otherwise, the method returns `DeviceType.UNKNOWN`.\n   *\n   * @example\n   * ```js\n   * Device.deviceType; // UNKNOWN, PHONE, TABLET, TV, DESKTOP\n   * ```\n   */\n  var deviceType = ExpoDevice.default ? ExpoDevice.default.deviceType : null;\n  /**\n   * The [device year class](https://github.com/facebook/device-year-class) of this device. On web, this value is always `null`.\n   */\n  var deviceYearClass = ExpoDevice.default ? ExpoDevice.default.deviceYearClass : null;\n  /**\n   * The device's total memory, in bytes. This is the total memory accessible to the kernel, but not necessarily to a single app.\n   * This is basically the amount of RAM the device has, not including below-kernel fixed allocations like DMA buffers, RAM for the baseband CPU, etcâ€¦\n   * On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.totalMemory; // 17179869184\n   * ```\n   */\n  var totalMemory = ExpoDevice.default ? ExpoDevice.default.totalMemory : null;\n  /**\n   * A list of supported processor architecture versions. The device expects the binaries it runs to be compiled for one of these architectures.\n   * This value is `null` if the supported architectures could not be determined, particularly on web.\n   *\n   * @example\n   * ```js\n   * Device.supportedCpuArchitectures; // ['arm64 v8', 'Intel x86-64h Haswell', 'arm64-v8a', 'armeabi-v7a\", 'armeabi']\n   * ```\n   */\n  var supportedCpuArchitectures = ExpoDevice.default ? ExpoDevice.default.supportedCpuArchitectures : null;\n  /**\n   * The name of the OS running on the device.\n   *\n   * @example\n   * ```js\n   * Device.osName; // Android: \"Android\"; iOS: \"iOS\" or \"iPadOS\"; web: \"iOS\", \"Android\", \"Windows\"\n   * ```\n   */\n  var osName = ExpoDevice.default ? ExpoDevice.default.osName : null;\n  /**\n   * The human-readable OS version string. Note that the version string may not always contain three numbers separated by dots.\n   *\n   * @example\n   * ```js\n   * Device.osVersion; // Android: \"4.0.3\"; iOS: \"12.3.1\"; web: \"11.0\", \"8.1.0\"\n   * ```\n   */\n  var osVersion = ExpoDevice.default ? ExpoDevice.default.osVersion : null;\n  /**\n   * The build ID of the OS that more precisely identifies the version of the OS. On Android, this corresponds to `Build.DISPLAY` (not `Build.ID`)\n   * and currently is a string as described [here](https://source.android.com/setup/start/build-numbers). On iOS, this corresponds to `kern.osversion`\n   * and is the detailed OS version sometimes displayed next to the more human-readable version. On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osBuildId; // Android: \"PSR1.180720.075\"; iOS: \"16F203\"; web: null\n   * ```\n   */\n  var osBuildId = ExpoDevice.default ? ExpoDevice.default.osBuildId : null;\n  /**\n   * The internal build ID of the OS running on the device. On Android, this corresponds to `Build.ID`.\n   * On iOS, this is the same value as [`Device.osBuildId`](#deviceosbuildid). On web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osInternalBuildId; // Android: \"MMB29K\"; iOS: \"16F203\"; web: null,\n   * ```\n   */\n  var osInternalBuildId = ExpoDevice.default ? ExpoDevice.default.osInternalBuildId : null;\n  /**\n   * A string that uniquely identifies the build of the currently running system OS. On Android, it follows this template:\n   * - `$(BRAND)/$(PRODUCT)/$(DEVICE)/$(BOARD):$(VERSION.RELEASE)/$(ID)/$(VERSION.INCREMENTAL):$(TYPE)/\\$(TAGS)`\n   * On web and iOS, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.osBuildFingerprint;\n   * // Android: \"google/sdk_gphone_x86/generic_x86:9/PSR1.180720.075/5124027:user/release-keys\";\n   * // iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  var osBuildFingerprint = ExpoDevice.default ? ExpoDevice.default.osBuildFingerprint || null : null;\n  /**\n   * The Android SDK version of the software currently running on this hardware device. This value never changes while a device is booted,\n   * but it may increase when the hardware manufacturer provides an OS update. See [here](https://developer.android.com/reference/android/os/Build.VERSION_CODES.html)\n   * to see all possible version codes and corresponding versions. On iOS and web, this value is always `null`.\n   *\n   * @example\n   * ```js\n   * Device.platformApiLevel; // Android: 19; iOS: null; web: null\n   * ```\n   * @platform android\n   */\n  var platformApiLevel = ExpoDevice.default ? ExpoDevice.default.platformApiLevel || null : null;\n  /**\n   * The human-readable name of the device, which may be set by the device's user. If the device name is unavailable, particularly on web, this value is `null`.\n   *\n   * > On iOS 16 and newer, this value will be set to generic \"iPhone\" until you add the correct entitlement, see [iOS Capabilities page](/build-reference/ios-capabilities)\n   * > to learn how to add one and check out [Apple documentation](https://developer.apple.com/documentation/uikit/uidevice/1620015-name#discussion)\n   * > for more details on this change.\n   *\n   * @example\n   * ```js\n   * Device.deviceName; // \"Vivian's iPhone XS\"\n   * ```\n   */\n  var deviceName = ExpoDevice.default ? ExpoDevice.default.deviceName : null;\n  /**\n   * Checks the type of the device as a [`DeviceType`](#devicetype) enum value.\n   *\n   * On Android, for devices other than TVs, the device type is determined by the screen resolution (screen diagonal size), so the result may not be completely accurate.\n   * If the screen diagonal length is between 3\" and 6.9\", the method returns `DeviceType.PHONE`. For lengths between 7\" and 18\", the method returns `DeviceType.TABLET`.\n   * Otherwise, the method returns `DeviceType.UNKNOWN`.\n   *\n   * @return Returns a promise that resolves to a [`DeviceType`](#devicetype) enum value.\n   * @example\n   * ```js\n   * await Device.getDeviceTypeAsync();\n   * // DeviceType.PHONE\n   * ```\n   */\n  function getDeviceTypeAsync() {\n    return _getDeviceTypeAsync.apply(this, arguments);\n  }\n  /**\n   * Gets the uptime since the last reboot of the device, in milliseconds. Android devices do not count time spent in deep sleep.\n   * @return Returns a promise that resolves to a `number` that represents the milliseconds since last reboot.\n   * @example\n   * ```js\n   * await Device.getUptimeAsync();\n   * // 4371054\n   * ```\n   * @platform android\n   * @platform ios\n   */\n  function _getDeviceTypeAsync() {\n    _getDeviceTypeAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.getDeviceTypeAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-device', 'getDeviceTypeAsync');\n      }\n      return yield ExpoDevice.default.getDeviceTypeAsync();\n    });\n    return _getDeviceTypeAsync.apply(this, arguments);\n  }\n  function getUptimeAsync() {\n    return _getUptimeAsync.apply(this, arguments);\n  }\n  /**\n   * Returns the maximum amount of memory that the Java VM will attempt to use. If there is no inherent limit then `Number.MAX_SAFE_INTEGER` is returned.\n   * @return Returns a promise that resolves to the maximum available memory that the Java VM will use, in bytes.\n   * @example\n   * ```js\n   * await Device.getMaxMemoryAsync();\n   * // 402653184\n   * ```\n   * @platform android\n   */\n  function _getUptimeAsync() {\n    _getUptimeAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.getUptimeAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-device', 'getUptimeAsync');\n      }\n      return yield ExpoDevice.default.getUptimeAsync();\n    });\n    return _getUptimeAsync.apply(this, arguments);\n  }\n  function getMaxMemoryAsync() {\n    return _getMaxMemoryAsync.apply(this, arguments);\n  }\n  /**\n   * > **warning** This method is experimental and is not completely reliable. See description below.\n   *\n   * Checks whether the device has been rooted (Android) or jailbroken (iOS). This is not completely reliable because there exist solutions to bypass root-detection\n   * on both [iOS](https://www.theiphonewiki.com/wiki/XCon) and [Android](https://tweakerlinks.com/how-to-bypass-apps-root-detection-in-android-device/).\n   * Further, many root-detection checks can be bypassed via reverse engineering.\n   * - On Android, it's implemented in a way to find all possible files paths that contain the `\"su\"` executable but some devices that are not rooted may also have this executable. Therefore, there's no guarantee that this method will always return correctly.\n   * - On iOS, [these jailbreak checks](https://www.theiphonewiki.com/wiki/Bypassing_Jailbreak_Detection) are used to detect if a device is rooted/jailbroken. However, since there are closed-sourced solutions such as [xCon](https://www.theiphonewiki.com/wiki/XCon) that aim to hook every known method and function responsible for informing an application of a jailbroken device, this method may not reliably detect devices that have xCon or similar packages installed.\n   * - On web, this always resolves to `false` even if the device is rooted.\n   * @return Returns a promise that resolves to a `boolean` that specifies whether this device is rooted.\n   * @example\n   * ```js\n   * await Device.isRootedExperimentalAsync();\n   * // true or false\n   * ```\n   */\n  function _getMaxMemoryAsync() {\n    _getMaxMemoryAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.getMaxMemoryAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-device', 'getMaxMemoryAsync');\n      }\n      var maxMemory = yield ExpoDevice.default.getMaxMemoryAsync();\n      if (maxMemory === -1) {\n        maxMemory = Number.MAX_SAFE_INTEGER;\n      }\n      return maxMemory;\n    });\n    return _getMaxMemoryAsync.apply(this, arguments);\n  }\n  function isRootedExperimentalAsync() {\n    return _isRootedExperimentalAsync.apply(this, arguments);\n  }\n  /**\n   * **Using this method requires you to [add the `REQUEST_INSTALL_PACKAGES` permission](./../config/app/#permissions).**\n   * Returns whether applications can be installed for this user via the system's [`ACTION_INSTALL_PACKAGE`](https://developer.android.com/reference/android/content/Intent.html#ACTION_INSTALL_PACKAGE)\n   * mechanism rather than through the OS's default app store, like Google Play.\n   * @return Returns a promise that resolves to a `boolean` that represents whether the calling package is allowed to request package installation.\n   * @example\n   * ```js\n   * await Device.isSideLoadingEnabledAsync();\n   * // true or false\n   * ```\n   * @platform android\n   */\n  function _isRootedExperimentalAsync() {\n    _isRootedExperimentalAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.isRootedExperimentalAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-device', 'isRootedExperimentalAsync');\n      }\n      return yield ExpoDevice.default.isRootedExperimentalAsync();\n    });\n    return _isRootedExperimentalAsync.apply(this, arguments);\n  }\n  function isSideLoadingEnabledAsync() {\n    return _isSideLoadingEnabledAsync.apply(this, arguments);\n  }\n  /**\n   * Gets a list of features that are available on the system. The feature names are platform-specific.\n   * See [Android documentation](<https://developer.android.com/reference/android/content/pm/PackageManager#getSystemAvailableFeatures()>)\n   * to learn more about this implementation.\n   * @return Returns a promise that resolves to an array of strings, each of which is a platform-specific name of a feature available on the current device.\n   * On iOS and web, the promise always resolves to an empty array.\n   * @example\n   * ```js\n   * await Device.getPlatformFeaturesAsync();\n   * // [\n   * //   'android.software.adoptable_storage',\n   * //   'android.software.backup',\n   * //   'android.hardware.sensor.accelerometer',\n   * //   'android.hardware.touchscreen',\n   * // ]\n   * ```\n   * @platform android\n   */\n  function _isSideLoadingEnabledAsync() {\n    _isSideLoadingEnabledAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.isSideLoadingEnabledAsync) {\n        throw new _expoModulesCore.UnavailabilityError('expo-device', 'isSideLoadingEnabledAsync');\n      }\n      return yield ExpoDevice.default.isSideLoadingEnabledAsync();\n    });\n    return _isSideLoadingEnabledAsync.apply(this, arguments);\n  }\n  function getPlatformFeaturesAsync() {\n    return _getPlatformFeaturesAsync.apply(this, arguments);\n  }\n  /**\n   * Tells if the device has a specific system feature.\n   * @param feature The platform-specific name of the feature to check for on the device. You can get all available system features with `Device.getSystemFeatureAsync()`.\n   * See [Android documentation](<https://developer.android.com/reference/android/content/pm/PackageManager#hasSystemFeature(java.lang.String)>) to view acceptable feature strings.\n   * @return Returns a promise that resolves to a boolean value indicating whether the device has the specified system feature.\n   * On iOS and web, the promise always resolves to `false`.\n   * @example\n   * ```js\n   * await Device.hasPlatformFeatureAsync('amazon.hardware.fire_tv');\n   * // true or false\n   * ```\n   * @platform android\n   */\n  function _getPlatformFeaturesAsync() {\n    _getPlatformFeaturesAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!ExpoDevice.default.getPlatformFeaturesAsync) {\n        return [];\n      }\n      return yield ExpoDevice.default.getPlatformFeaturesAsync();\n    });\n    return _getPlatformFeaturesAsync.apply(this, arguments);\n  }\n  function hasPlatformFeatureAsync(_x) {\n    return _hasPlatformFeatureAsync.apply(this, arguments);\n  }\n  function _hasPlatformFeatureAsync() {\n    _hasPlatformFeatureAsync = (0, _asyncToGenerator.default)(function* (feature) {\n      if (!ExpoDevice.default.hasPlatformFeatureAsync) {\n        return false;\n      }\n      return yield ExpoDevice.default.hasPlatformFeatureAsync(feature);\n    });\n    return _hasPlatformFeatureAsync.apply(this, arguments);\n  }\n});","lineCount":507,"map":[[12,2,4,0,"Object"],[12,8,4,0],[12,9,4,0,"defineProperty"],[12,23,4,0],[12,24,4,0,"exports"],[12,31,4,0],[13,4,4,0,"enumerable"],[13,14,4,0],[14,4,4,0,"get"],[14,7,4,0],[14,18,4,0,"get"],[14,19,4,0],[15,6,4,0],[15,13,4,9,"DeviceType"],[15,25,4,19],[15,26,4,19,"DeviceType"],[15,36,4,19],[16,4,4,19],[17,2,4,19],[18,2,9,0,"Object"],[18,8,9,0],[18,9,9,0,"defineProperty"],[18,23,9,0],[18,24,9,0,"exports"],[18,31,9,0],[19,4,9,0,"enumerable"],[19,14,9,0],[20,4,9,0,"get"],[20,7,9,0],[20,18,9,0,"get"],[20,19,9,0],[21,6,9,0],[21,13,9,0,"isDevice"],[21,21,9,0],[22,4,9,0],[23,2,9,0],[24,2,20,0,"Object"],[24,8,20,0],[24,9,20,0,"defineProperty"],[24,23,20,0],[24,24,20,0,"exports"],[24,31,20,0],[25,4,20,0,"enumerable"],[25,14,20,0],[26,4,20,0,"get"],[26,7,20,0],[26,18,20,0,"get"],[26,19,20,0],[27,6,20,0],[27,13,20,0,"brand"],[27,18,20,0],[28,4,20,0],[29,2,20,0],[30,2,31,0,"Object"],[30,8,31,0],[30,9,31,0,"defineProperty"],[30,23,31,0],[30,24,31,0,"exports"],[30,31,31,0],[31,4,31,0,"enumerable"],[31,14,31,0],[32,4,31,0,"get"],[32,7,31,0],[32,18,31,0,"get"],[32,19,31,0],[33,6,31,0],[33,13,31,0,"manufacturer"],[33,25,31,0],[34,4,31,0],[35,2,31,0],[36,2,42,0,"Object"],[36,8,42,0],[36,9,42,0,"defineProperty"],[36,23,42,0],[36,24,42,0,"exports"],[36,31,42,0],[37,4,42,0,"enumerable"],[37,14,42,0],[38,4,42,0,"get"],[38,7,42,0],[38,18,42,0,"get"],[38,19,42,0],[39,6,42,0],[39,13,42,0,"modelId"],[39,20,42,0],[40,4,42,0],[41,2,42,0],[42,2,52,0,"Object"],[42,8,52,0],[42,9,52,0,"defineProperty"],[42,23,52,0],[42,24,52,0,"exports"],[42,31,52,0],[43,4,52,0,"enumerable"],[43,14,52,0],[44,4,52,0,"get"],[44,7,52,0],[44,18,52,0,"get"],[44,19,52,0],[45,6,52,0],[45,13,52,0,"modelName"],[45,22,52,0],[46,4,52,0],[47,2,52,0],[48,2,63,0,"Object"],[48,8,63,0],[48,9,63,0,"defineProperty"],[48,23,63,0],[48,24,63,0,"exports"],[48,31,63,0],[49,4,63,0,"enumerable"],[49,14,63,0],[50,4,63,0,"get"],[50,7,63,0],[50,18,63,0,"get"],[50,19,63,0],[51,6,63,0],[51,13,63,0,"designName"],[51,23,63,0],[52,4,63,0],[53,2,63,0],[54,2,74,0,"Object"],[54,8,74,0],[54,9,74,0,"defineProperty"],[54,23,74,0],[54,24,74,0,"exports"],[54,31,74,0],[55,4,74,0,"enumerable"],[55,14,74,0],[56,4,74,0,"get"],[56,7,74,0],[56,18,74,0,"get"],[56,19,74,0],[57,6,74,0],[57,13,74,0,"productName"],[57,24,74,0],[58,4,74,0],[59,2,74,0],[60,2,87,0,"Object"],[60,8,87,0],[60,9,87,0,"defineProperty"],[60,23,87,0],[60,24,87,0,"exports"],[60,31,87,0],[61,4,87,0,"enumerable"],[61,14,87,0],[62,4,87,0,"get"],[62,7,87,0],[62,18,87,0,"get"],[62,19,87,0],[63,6,87,0],[63,13,87,0,"deviceType"],[63,23,87,0],[64,4,87,0],[65,2,87,0],[66,2,91,0,"Object"],[66,8,91,0],[66,9,91,0,"defineProperty"],[66,23,91,0],[66,24,91,0,"exports"],[66,31,91,0],[67,4,91,0,"enumerable"],[67,14,91,0],[68,4,91,0,"get"],[68,7,91,0],[68,18,91,0,"get"],[68,19,91,0],[69,6,91,0],[69,13,91,0,"deviceYearClass"],[69,28,91,0],[70,4,91,0],[71,2,91,0],[72,2,102,0,"Object"],[72,8,102,0],[72,9,102,0,"defineProperty"],[72,23,102,0],[72,24,102,0,"exports"],[72,31,102,0],[73,4,102,0,"enumerable"],[73,14,102,0],[74,4,102,0,"get"],[74,7,102,0],[74,18,102,0,"get"],[74,19,102,0],[75,6,102,0],[75,13,102,0,"totalMemory"],[75,24,102,0],[76,4,102,0],[77,2,102,0],[78,2,112,0,"Object"],[78,8,112,0],[78,9,112,0,"defineProperty"],[78,23,112,0],[78,24,112,0,"exports"],[78,31,112,0],[79,4,112,0,"enumerable"],[79,14,112,0],[80,4,112,0,"get"],[80,7,112,0],[80,18,112,0,"get"],[80,19,112,0],[81,6,112,0],[81,13,112,0,"supportedCpuArchitectures"],[81,38,112,0],[82,4,112,0],[83,2,112,0],[84,2,123,0,"Object"],[84,8,123,0],[84,9,123,0,"defineProperty"],[84,23,123,0],[84,24,123,0,"exports"],[84,31,123,0],[85,4,123,0,"enumerable"],[85,14,123,0],[86,4,123,0,"get"],[86,7,123,0],[86,18,123,0,"get"],[86,19,123,0],[87,6,123,0],[87,13,123,0,"osName"],[87,19,123,0],[88,4,123,0],[89,2,123,0],[90,2,132,0,"Object"],[90,8,132,0],[90,9,132,0,"defineProperty"],[90,23,132,0],[90,24,132,0,"exports"],[90,31,132,0],[91,4,132,0,"enumerable"],[91,14,132,0],[92,4,132,0,"get"],[92,7,132,0],[92,18,132,0,"get"],[92,19,132,0],[93,6,132,0],[93,13,132,0,"osVersion"],[93,22,132,0],[94,4,132,0],[95,2,132,0],[96,2,143,0,"Object"],[96,8,143,0],[96,9,143,0,"defineProperty"],[96,23,143,0],[96,24,143,0,"exports"],[96,31,143,0],[97,4,143,0,"enumerable"],[97,14,143,0],[98,4,143,0,"get"],[98,7,143,0],[98,18,143,0,"get"],[98,19,143,0],[99,6,143,0],[99,13,143,0,"osBuildId"],[99,22,143,0],[100,4,143,0],[101,2,143,0],[102,2,153,0,"Object"],[102,8,153,0],[102,9,153,0,"defineProperty"],[102,23,153,0],[102,24,153,0,"exports"],[102,31,153,0],[103,4,153,0,"enumerable"],[103,14,153,0],[104,4,153,0,"get"],[104,7,153,0],[104,18,153,0,"get"],[104,19,153,0],[105,6,153,0],[105,13,153,0,"osInternalBuildId"],[105,30,153,0],[106,4,153,0],[107,2,153,0],[108,2,167,0,"Object"],[108,8,167,0],[108,9,167,0,"defineProperty"],[108,23,167,0],[108,24,167,0,"exports"],[108,31,167,0],[109,4,167,0,"enumerable"],[109,14,167,0],[110,4,167,0,"get"],[110,7,167,0],[110,18,167,0,"get"],[110,19,167,0],[111,6,167,0],[111,13,167,0,"osBuildFingerprint"],[111,31,167,0],[112,4,167,0],[113,2,167,0],[114,2,181,0,"Object"],[114,8,181,0],[114,9,181,0,"defineProperty"],[114,23,181,0],[114,24,181,0,"exports"],[114,31,181,0],[115,4,181,0,"enumerable"],[115,14,181,0],[116,4,181,0,"get"],[116,7,181,0],[116,18,181,0,"get"],[116,19,181,0],[117,6,181,0],[117,13,181,0,"platformApiLevel"],[117,29,181,0],[118,4,181,0],[119,2,181,0],[120,2,196,0,"Object"],[120,8,196,0],[120,9,196,0,"defineProperty"],[120,23,196,0],[120,24,196,0,"exports"],[120,31,196,0],[121,4,196,0,"enumerable"],[121,14,196,0],[122,4,196,0,"get"],[122,7,196,0],[122,18,196,0,"get"],[122,19,196,0],[123,6,196,0],[123,13,196,0,"deviceName"],[123,23,196,0],[124,4,196,0],[125,2,196,0],[126,2,211,0,"exports"],[126,9,211,0],[126,10,211,0,"getDeviceTypeAsync"],[126,28,211,0],[126,31,211,0,"getDeviceTypeAsync"],[126,49,211,0],[127,2,228,0,"exports"],[127,9,228,0],[127,10,228,0,"getUptimeAsync"],[127,24,228,0],[127,27,228,0,"getUptimeAsync"],[127,41,228,0],[128,2,244,0,"exports"],[128,9,244,0],[128,10,244,0,"getMaxMemoryAsync"],[128,27,244,0],[128,30,244,0,"getMaxMemoryAsync"],[128,47,244,0],[129,2,270,0,"exports"],[129,9,270,0],[129,10,270,0,"isRootedExperimentalAsync"],[129,35,270,0],[129,38,270,0,"isRootedExperimentalAsync"],[129,63,270,0],[130,2,288,0,"exports"],[130,9,288,0],[130,10,288,0,"isSideLoadingEnabledAsync"],[130,35,288,0],[130,38,288,0,"isSideLoadingEnabledAsync"],[130,63,288,0],[131,2,312,0,"exports"],[131,9,312,0],[131,10,312,0,"getPlatformFeaturesAsync"],[131,34,312,0],[131,37,312,0,"getPlatformFeaturesAsync"],[131,61,312,0],[132,2,331,0,"exports"],[132,9,331,0],[132,10,331,0,"hasPlatformFeatureAsync"],[132,33,331,0],[132,36,331,0,"hasPlatformFeatureAsync"],[132,59,331,0],[133,2,336,1],[133,6,336,1,"_babelRuntimeHelpersAsyncToGenerator"],[133,42,336,1],[133,45,336,1,"require"],[133,52,336,1],[133,53,336,1,"_dependencyMap"],[133,67,336,1],[134,2,336,1],[134,6,336,1,"_asyncToGenerator"],[134,23,336,1],[134,26,336,1,"_interopDefault"],[134,41,336,1],[134,42,336,1,"_babelRuntimeHelpersAsyncToGenerator"],[134,78,336,1],[135,2,1,0],[135,6,1,0,"_expoModulesCore"],[135,22,1,0],[135,25,1,0,"require"],[135,32,1,0],[135,33,1,0,"_dependencyMap"],[135,47,1,0],[136,2,2,0],[136,6,2,0,"_DeviceTypes"],[136,18,2,0],[136,21,2,0,"require"],[136,28,2,0],[136,29,2,0,"_dependencyMap"],[136,43,2,0],[137,2,3,0],[137,6,3,0,"_ExpoDevice"],[137,17,3,0],[137,20,3,0,"require"],[137,27,3,0],[137,28,3,0,"_dependencyMap"],[137,42,3,0],[138,2,3,0],[138,6,3,0,"ExpoDevice"],[138,16,3,0],[138,19,3,0,"_interopDefault"],[138,34,3,0],[138,35,3,0,"_ExpoDevice"],[138,46,3,0],[139,2,5,0],[140,0,6,0],[141,0,7,0],[142,0,8,0],[143,2,9,7],[143,6,9,13,"isDevice"],[143,14,9,21],[143,17,9,24,"ExpoDevice"],[143,27,9,34],[143,28,9,34,"default"],[143,35,9,34],[143,38,9,37,"ExpoDevice"],[143,48,9,47],[143,49,9,47,"default"],[143,56,9,47],[143,57,9,48,"isDevice"],[143,65,9,56],[143,68,9,59],[143,72,9,63],[144,2,10,0],[145,0,11,0],[146,0,12,0],[147,0,13,0],[148,0,14,0],[149,0,15,0],[150,0,16,0],[151,0,17,0],[152,0,18,0],[153,0,19,0],[154,2,20,7],[154,6,20,13,"brand"],[154,11,20,18],[154,14,20,21,"ExpoDevice"],[154,24,20,31],[154,25,20,31,"default"],[154,32,20,31],[154,35,20,34,"ExpoDevice"],[154,45,20,44],[154,46,20,44,"default"],[154,53,20,44],[154,54,20,45,"brand"],[154,59,20,50],[154,62,20,53],[154,66,20,57],[155,2,21,0],[156,0,22,0],[157,0,23,0],[158,0,24,0],[159,0,25,0],[160,0,26,0],[161,0,27,0],[162,0,28,0],[163,0,29,0],[164,0,30,0],[165,2,31,7],[165,6,31,13,"manufacturer"],[165,18,31,25],[165,21,31,28,"ExpoDevice"],[165,31,31,38],[165,32,31,38,"default"],[165,39,31,38],[165,42,31,41,"ExpoDevice"],[165,52,31,51],[165,53,31,51,"default"],[165,60,31,51],[165,61,31,52,"manufacturer"],[165,73,31,64],[165,76,31,67],[165,80,31,71],[166,2,32,0],[167,0,33,0],[168,0,34,0],[169,0,35,0],[170,0,36,0],[171,0,37,0],[172,0,38,0],[173,0,39,0],[174,0,40,0],[175,0,41,0],[176,2,42,7],[176,6,42,13,"modelId"],[176,13,42,20],[176,16,42,23,"ExpoDevice"],[176,26,42,33],[176,27,42,33,"default"],[176,34,42,33],[176,37,42,36,"ExpoDevice"],[176,47,42,46],[176,48,42,46,"default"],[176,55,42,46],[176,56,42,47,"modelId"],[176,63,42,54],[176,67,42,58],[176,71,42,62],[176,74,42,65],[176,78,42,69],[177,2,43,0],[178,0,44,0],[179,0,45,0],[180,0,46,0],[181,0,47,0],[182,0,48,0],[183,0,49,0],[184,0,50,0],[185,0,51,0],[186,2,52,7],[186,6,52,13,"modelName"],[186,15,52,22],[186,18,52,25,"ExpoDevice"],[186,28,52,35],[186,29,52,35,"default"],[186,36,52,35],[186,39,52,38,"ExpoDevice"],[186,49,52,48],[186,50,52,48,"default"],[186,57,52,48],[186,58,52,49,"modelName"],[186,67,52,58],[186,70,52,61],[186,74,52,65],[187,2,53,0],[188,0,54,0],[189,0,55,0],[190,0,56,0],[191,0,57,0],[192,0,58,0],[193,0,59,0],[194,0,60,0],[195,0,61,0],[196,0,62,0],[197,2,63,7],[197,6,63,13,"designName"],[197,16,63,23],[197,19,63,26,"ExpoDevice"],[197,29,63,36],[197,30,63,36,"default"],[197,37,63,36],[197,40,63,39,"ExpoDevice"],[197,50,63,49],[197,51,63,49,"default"],[197,58,63,49],[197,59,63,50,"designName"],[197,69,63,60],[197,73,63,64],[197,77,63,68],[197,80,63,71],[197,84,63,75],[198,2,64,0],[199,0,65,0],[200,0,66,0],[201,0,67,0],[202,0,68,0],[203,0,69,0],[204,0,70,0],[205,0,71,0],[206,0,72,0],[207,0,73,0],[208,2,74,7],[208,6,74,13,"productName"],[208,17,74,24],[208,20,74,27,"ExpoDevice"],[208,30,74,37],[208,31,74,37,"default"],[208,38,74,37],[208,41,74,40,"ExpoDevice"],[208,51,74,50],[208,52,74,50,"default"],[208,59,74,50],[208,60,74,51,"productName"],[208,71,74,62],[208,75,74,66],[208,79,74,70],[208,82,74,73],[208,86,74,77],[209,2,75,0],[210,0,76,0],[211,0,77,0],[212,0,78,0],[213,0,79,0],[214,0,80,0],[215,0,81,0],[216,0,82,0],[217,0,83,0],[218,0,84,0],[219,0,85,0],[220,0,86,0],[221,2,87,7],[221,6,87,13,"deviceType"],[221,16,87,23],[221,19,87,26,"ExpoDevice"],[221,29,87,36],[221,30,87,36,"default"],[221,37,87,36],[221,40,87,39,"ExpoDevice"],[221,50,87,49],[221,51,87,49,"default"],[221,58,87,49],[221,59,87,50,"deviceType"],[221,69,87,60],[221,72,87,63],[221,76,87,67],[222,2,88,0],[223,0,89,0],[224,0,90,0],[225,2,91,7],[225,6,91,13,"deviceYearClass"],[225,21,91,28],[225,24,91,31,"ExpoDevice"],[225,34,91,41],[225,35,91,41,"default"],[225,42,91,41],[225,45,91,44,"ExpoDevice"],[225,55,91,54],[225,56,91,54,"default"],[225,63,91,54],[225,64,91,55,"deviceYearClass"],[225,79,91,70],[225,82,91,73],[225,86,91,77],[226,2,92,0],[227,0,93,0],[228,0,94,0],[229,0,95,0],[230,0,96,0],[231,0,97,0],[232,0,98,0],[233,0,99,0],[234,0,100,0],[235,0,101,0],[236,2,102,7],[236,6,102,13,"totalMemory"],[236,17,102,24],[236,20,102,27,"ExpoDevice"],[236,30,102,37],[236,31,102,37,"default"],[236,38,102,37],[236,41,102,40,"ExpoDevice"],[236,51,102,50],[236,52,102,50,"default"],[236,59,102,50],[236,60,102,51,"totalMemory"],[236,71,102,62],[236,74,102,65],[236,78,102,69],[237,2,103,0],[238,0,104,0],[239,0,105,0],[240,0,106,0],[241,0,107,0],[242,0,108,0],[243,0,109,0],[244,0,110,0],[245,0,111,0],[246,2,112,7],[246,6,112,13,"supportedCpuArchitectures"],[246,31,112,38],[246,34,112,41,"ExpoDevice"],[246,44,112,51],[246,45,112,51,"default"],[246,52,112,51],[246,55,113,6,"ExpoDevice"],[246,65,113,16],[246,66,113,16,"default"],[246,73,113,16],[246,74,113,17,"supportedCpuArchitectures"],[246,99,113,42],[246,102,114,6],[246,106,114,10],[247,2,115,0],[248,0,116,0],[249,0,117,0],[250,0,118,0],[251,0,119,0],[252,0,120,0],[253,0,121,0],[254,0,122,0],[255,2,123,7],[255,6,123,13,"osName"],[255,12,123,19],[255,15,123,22,"ExpoDevice"],[255,25,123,32],[255,26,123,32,"default"],[255,33,123,32],[255,36,123,35,"ExpoDevice"],[255,46,123,45],[255,47,123,45,"default"],[255,54,123,45],[255,55,123,46,"osName"],[255,61,123,52],[255,64,123,55],[255,68,123,59],[256,2,124,0],[257,0,125,0],[258,0,126,0],[259,0,127,0],[260,0,128,0],[261,0,129,0],[262,0,130,0],[263,0,131,0],[264,2,132,7],[264,6,132,13,"osVersion"],[264,15,132,22],[264,18,132,25,"ExpoDevice"],[264,28,132,35],[264,29,132,35,"default"],[264,36,132,35],[264,39,132,38,"ExpoDevice"],[264,49,132,48],[264,50,132,48,"default"],[264,57,132,48],[264,58,132,49,"osVersion"],[264,67,132,58],[264,70,132,61],[264,74,132,65],[265,2,133,0],[266,0,134,0],[267,0,135,0],[268,0,136,0],[269,0,137,0],[270,0,138,0],[271,0,139,0],[272,0,140,0],[273,0,141,0],[274,0,142,0],[275,2,143,7],[275,6,143,13,"osBuildId"],[275,15,143,22],[275,18,143,25,"ExpoDevice"],[275,28,143,35],[275,29,143,35,"default"],[275,36,143,35],[275,39,143,38,"ExpoDevice"],[275,49,143,48],[275,50,143,48,"default"],[275,57,143,48],[275,58,143,49,"osBuildId"],[275,67,143,58],[275,70,143,61],[275,74,143,65],[276,2,144,0],[277,0,145,0],[278,0,146,0],[279,0,147,0],[280,0,148,0],[281,0,149,0],[282,0,150,0],[283,0,151,0],[284,0,152,0],[285,2,153,7],[285,6,153,13,"osInternalBuildId"],[285,23,153,30],[285,26,153,33,"ExpoDevice"],[285,36,153,43],[285,37,153,43,"default"],[285,44,153,43],[285,47,153,46,"ExpoDevice"],[285,57,153,56],[285,58,153,56,"default"],[285,65,153,56],[285,66,153,57,"osInternalBuildId"],[285,83,153,74],[285,86,153,77],[285,90,153,81],[286,2,154,0],[287,0,155,0],[288,0,156,0],[289,0,157,0],[290,0,158,0],[291,0,159,0],[292,0,160,0],[293,0,161,0],[294,0,162,0],[295,0,163,0],[296,0,164,0],[297,0,165,0],[298,0,166,0],[299,2,167,7],[299,6,167,13,"osBuildFingerprint"],[299,24,167,31],[299,27,167,34,"ExpoDevice"],[299,37,167,44],[299,38,167,44,"default"],[299,45,167,44],[299,48,168,6,"ExpoDevice"],[299,58,168,16],[299,59,168,16,"default"],[299,66,168,16],[299,67,168,17,"osBuildFingerprint"],[299,85,168,35],[299,89,168,39],[299,93,168,43],[299,96,169,6],[299,100,169,10],[300,2,170,0],[301,0,171,0],[302,0,172,0],[303,0,173,0],[304,0,174,0],[305,0,175,0],[306,0,176,0],[307,0,177,0],[308,0,178,0],[309,0,179,0],[310,0,180,0],[311,2,181,7],[311,6,181,13,"platformApiLevel"],[311,22,181,29],[311,25,181,32,"ExpoDevice"],[311,35,181,42],[311,36,181,42,"default"],[311,43,181,42],[311,46,182,6,"ExpoDevice"],[311,56,182,16],[311,57,182,16,"default"],[311,64,182,16],[311,65,182,17,"platformApiLevel"],[311,81,182,33],[311,85,182,37],[311,89,182,41],[311,92,183,6],[311,96,183,10],[312,2,184,0],[313,0,185,0],[314,0,186,0],[315,0,187,0],[316,0,188,0],[317,0,189,0],[318,0,190,0],[319,0,191,0],[320,0,192,0],[321,0,193,0],[322,0,194,0],[323,0,195,0],[324,2,196,7],[324,6,196,13,"deviceName"],[324,16,196,23],[324,19,196,26,"ExpoDevice"],[324,29,196,36],[324,30,196,36,"default"],[324,37,196,36],[324,40,196,39,"ExpoDevice"],[324,50,196,49],[324,51,196,49,"default"],[324,58,196,49],[324,59,196,50,"deviceName"],[324,69,196,60],[324,72,196,63],[324,76,196,67],[325,2,197,0],[326,0,198,0],[327,0,199,0],[328,0,200,0],[329,0,201,0],[330,0,202,0],[331,0,203,0],[332,0,204,0],[333,0,205,0],[334,0,206,0],[335,0,207,0],[336,0,208,0],[337,0,209,0],[338,0,210,0],[339,2,197,0],[339,11,211,22,"getDeviceTypeAsync"],[339,29,211,40,"getDeviceTypeAsync"],[339,30,211,40],[340,4,211,40],[340,11,211,40,"_getDeviceTypeAsync"],[340,30,211,40],[340,31,211,40,"apply"],[340,36,211,40],[340,43,211,40,"arguments"],[340,52,211,40],[341,2,211,40],[342,2,217,0],[343,0,218,0],[344,0,219,0],[345,0,220,0],[346,0,221,0],[347,0,222,0],[348,0,223,0],[349,0,224,0],[350,0,225,0],[351,0,226,0],[352,0,227,0],[353,2,217,0],[353,11,217,0,"_getDeviceTypeAsync"],[353,31,217,0],[354,4,217,0,"_getDeviceTypeAsync"],[354,23,217,0],[354,30,217,0,"_asyncToGenerator"],[354,47,217,0],[354,48,217,0,"default"],[354,55,217,0],[354,57,211,7],[354,70,211,43],[355,6,212,4],[355,10,212,8],[355,11,212,9,"ExpoDevice"],[355,21,212,19],[355,22,212,19,"default"],[355,29,212,19],[355,30,212,20,"getDeviceTypeAsync"],[355,48,212,38],[355,50,212,40],[356,8,213,8],[356,14,213,14],[356,18,213,18,"UnavailabilityError"],[356,34,213,37],[356,35,213,37,"UnavailabilityError"],[356,54,213,37],[356,55,213,38],[356,68,213,51],[356,70,213,53],[356,90,213,73],[356,91,213,74],[357,6,214,4],[358,6,215,4],[358,19,215,17,"ExpoDevice"],[358,29,215,27],[358,30,215,27,"default"],[358,37,215,27],[358,38,215,28,"getDeviceTypeAsync"],[358,56,215,46],[358,57,215,47],[358,58,215,48],[359,4,216,0],[359,5,216,1],[360,4,216,1],[360,11,216,1,"_getDeviceTypeAsync"],[360,30,216,1],[360,31,216,1,"apply"],[360,36,216,1],[360,43,216,1,"arguments"],[360,52,216,1],[361,2,216,1],[362,2,216,1],[362,11,228,22,"getUptimeAsync"],[362,25,228,36,"getUptimeAsync"],[362,26,228,36],[363,4,228,36],[363,11,228,36,"_getUptimeAsync"],[363,26,228,36],[363,27,228,36,"apply"],[363,32,228,36],[363,39,228,36,"arguments"],[363,48,228,36],[364,2,228,36],[365,2,234,0],[366,0,235,0],[367,0,236,0],[368,0,237,0],[369,0,238,0],[370,0,239,0],[371,0,240,0],[372,0,241,0],[373,0,242,0],[374,0,243,0],[375,2,234,0],[375,11,234,0,"_getUptimeAsync"],[375,27,234,0],[376,4,234,0,"_getUptimeAsync"],[376,19,234,0],[376,26,234,0,"_asyncToGenerator"],[376,43,234,0],[376,44,234,0,"default"],[376,51,234,0],[376,53,228,7],[376,66,228,39],[377,6,229,4],[377,10,229,8],[377,11,229,9,"ExpoDevice"],[377,21,229,19],[377,22,229,19,"default"],[377,29,229,19],[377,30,229,20,"getUptimeAsync"],[377,44,229,34],[377,46,229,36],[378,8,230,8],[378,14,230,14],[378,18,230,18,"UnavailabilityError"],[378,34,230,37],[378,35,230,37,"UnavailabilityError"],[378,54,230,37],[378,55,230,38],[378,68,230,51],[378,70,230,53],[378,86,230,69],[378,87,230,70],[379,6,231,4],[380,6,232,4],[380,19,232,17,"ExpoDevice"],[380,29,232,27],[380,30,232,27,"default"],[380,37,232,27],[380,38,232,28,"getUptimeAsync"],[380,52,232,42],[380,53,232,43],[380,54,232,44],[381,4,233,0],[381,5,233,1],[382,4,233,1],[382,11,233,1,"_getUptimeAsync"],[382,26,233,1],[382,27,233,1,"apply"],[382,32,233,1],[382,39,233,1,"arguments"],[382,48,233,1],[383,2,233,1],[384,2,233,1],[384,11,244,22,"getMaxMemoryAsync"],[384,28,244,39,"getMaxMemoryAsync"],[384,29,244,39],[385,4,244,39],[385,11,244,39,"_getMaxMemoryAsync"],[385,29,244,39],[385,30,244,39,"apply"],[385,35,244,39],[385,42,244,39,"arguments"],[385,51,244,39],[386,2,244,39],[387,2,254,0],[388,0,255,0],[389,0,256,0],[390,0,257,0],[391,0,258,0],[392,0,259,0],[393,0,260,0],[394,0,261,0],[395,0,262,0],[396,0,263,0],[397,0,264,0],[398,0,265,0],[399,0,266,0],[400,0,267,0],[401,0,268,0],[402,0,269,0],[403,2,254,0],[403,11,254,0,"_getMaxMemoryAsync"],[403,30,254,0],[404,4,254,0,"_getMaxMemoryAsync"],[404,22,254,0],[404,29,254,0,"_asyncToGenerator"],[404,46,254,0],[404,47,254,0,"default"],[404,54,254,0],[404,56,244,7],[404,69,244,42],[405,6,245,4],[405,10,245,8],[405,11,245,9,"ExpoDevice"],[405,21,245,19],[405,22,245,19,"default"],[405,29,245,19],[405,30,245,20,"getMaxMemoryAsync"],[405,47,245,37],[405,49,245,39],[406,8,246,8],[406,14,246,14],[406,18,246,18,"UnavailabilityError"],[406,34,246,37],[406,35,246,37,"UnavailabilityError"],[406,54,246,37],[406,55,246,38],[406,68,246,51],[406,70,246,53],[406,89,246,72],[406,90,246,73],[407,6,247,4],[408,6,248,4],[408,10,248,8,"maxMemory"],[408,19,248,17],[408,28,248,26,"ExpoDevice"],[408,38,248,36],[408,39,248,36,"default"],[408,46,248,36],[408,47,248,37,"getMaxMemoryAsync"],[408,64,248,54],[408,65,248,55],[408,66,248,56],[409,6,249,4],[409,10,249,8,"maxMemory"],[409,19,249,17],[409,24,249,22],[409,25,249,23],[409,26,249,24],[409,28,249,26],[410,8,250,8,"maxMemory"],[410,17,250,17],[410,20,250,20,"Number"],[410,26,250,26],[410,27,250,27,"MAX_SAFE_INTEGER"],[410,43,250,43],[411,6,251,4],[412,6,252,4],[412,13,252,11,"maxMemory"],[412,22,252,20],[413,4,253,0],[413,5,253,1],[414,4,253,1],[414,11,253,1,"_getMaxMemoryAsync"],[414,29,253,1],[414,30,253,1,"apply"],[414,35,253,1],[414,42,253,1,"arguments"],[414,51,253,1],[415,2,253,1],[416,2,253,1],[416,11,270,22,"isRootedExperimentalAsync"],[416,36,270,47,"isRootedExperimentalAsync"],[416,37,270,47],[417,4,270,47],[417,11,270,47,"_isRootedExperimentalAsync"],[417,37,270,47],[417,38,270,47,"apply"],[417,43,270,47],[417,50,270,47,"arguments"],[417,59,270,47],[418,2,270,47],[419,2,276,0],[420,0,277,0],[421,0,278,0],[422,0,279,0],[423,0,280,0],[424,0,281,0],[425,0,282,0],[426,0,283,0],[427,0,284,0],[428,0,285,0],[429,0,286,0],[430,0,287,0],[431,2,276,0],[431,11,276,0,"_isRootedExperimentalAsync"],[431,38,276,0],[432,4,276,0,"_isRootedExperimentalAsync"],[432,30,276,0],[432,37,276,0,"_asyncToGenerator"],[432,54,276,0],[432,55,276,0,"default"],[432,62,276,0],[432,64,270,7],[432,77,270,50],[433,6,271,4],[433,10,271,8],[433,11,271,9,"ExpoDevice"],[433,21,271,19],[433,22,271,19,"default"],[433,29,271,19],[433,30,271,20,"isRootedExperimentalAsync"],[433,55,271,45],[433,57,271,47],[434,8,272,8],[434,14,272,14],[434,18,272,18,"UnavailabilityError"],[434,34,272,37],[434,35,272,37,"UnavailabilityError"],[434,54,272,37],[434,55,272,38],[434,68,272,51],[434,70,272,53],[434,97,272,80],[434,98,272,81],[435,6,273,4],[436,6,274,4],[436,19,274,17,"ExpoDevice"],[436,29,274,27],[436,30,274,27,"default"],[436,37,274,27],[436,38,274,28,"isRootedExperimentalAsync"],[436,63,274,53],[436,64,274,54],[436,65,274,55],[437,4,275,0],[437,5,275,1],[438,4,275,1],[438,11,275,1,"_isRootedExperimentalAsync"],[438,37,275,1],[438,38,275,1,"apply"],[438,43,275,1],[438,50,275,1,"arguments"],[438,59,275,1],[439,2,275,1],[440,2,275,1],[440,11,288,22,"isSideLoadingEnabledAsync"],[440,36,288,47,"isSideLoadingEnabledAsync"],[440,37,288,47],[441,4,288,47],[441,11,288,47,"_isSideLoadingEnabledAsync"],[441,37,288,47],[441,38,288,47,"apply"],[441,43,288,47],[441,50,288,47,"arguments"],[441,59,288,47],[442,2,288,47],[443,2,294,0],[444,0,295,0],[445,0,296,0],[446,0,297,0],[447,0,298,0],[448,0,299,0],[449,0,300,0],[450,0,301,0],[451,0,302,0],[452,0,303,0],[453,0,304,0],[454,0,305,0],[455,0,306,0],[456,0,307,0],[457,0,308,0],[458,0,309,0],[459,0,310,0],[460,0,311,0],[461,2,294,0],[461,11,294,0,"_isSideLoadingEnabledAsync"],[461,38,294,0],[462,4,294,0,"_isSideLoadingEnabledAsync"],[462,30,294,0],[462,37,294,0,"_asyncToGenerator"],[462,54,294,0],[462,55,294,0,"default"],[462,62,294,0],[462,64,288,7],[462,77,288,50],[463,6,289,4],[463,10,289,8],[463,11,289,9,"ExpoDevice"],[463,21,289,19],[463,22,289,19,"default"],[463,29,289,19],[463,30,289,20,"isSideLoadingEnabledAsync"],[463,55,289,45],[463,57,289,47],[464,8,290,8],[464,14,290,14],[464,18,290,18,"UnavailabilityError"],[464,34,290,37],[464,35,290,37,"UnavailabilityError"],[464,54,290,37],[464,55,290,38],[464,68,290,51],[464,70,290,53],[464,97,290,80],[464,98,290,81],[465,6,291,4],[466,6,292,4],[466,19,292,17,"ExpoDevice"],[466,29,292,27],[466,30,292,27,"default"],[466,37,292,27],[466,38,292,28,"isSideLoadingEnabledAsync"],[466,63,292,53],[466,64,292,54],[466,65,292,55],[467,4,293,0],[467,5,293,1],[468,4,293,1],[468,11,293,1,"_isSideLoadingEnabledAsync"],[468,37,293,1],[468,38,293,1,"apply"],[468,43,293,1],[468,50,293,1,"arguments"],[468,59,293,1],[469,2,293,1],[470,2,293,1],[470,11,312,22,"getPlatformFeaturesAsync"],[470,35,312,46,"getPlatformFeaturesAsync"],[470,36,312,46],[471,4,312,46],[471,11,312,46,"_getPlatformFeaturesAsync"],[471,36,312,46],[471,37,312,46,"apply"],[471,42,312,46],[471,49,312,46,"arguments"],[471,58,312,46],[472,2,312,46],[473,2,318,0],[474,0,319,0],[475,0,320,0],[476,0,321,0],[477,0,322,0],[478,0,323,0],[479,0,324,0],[480,0,325,0],[481,0,326,0],[482,0,327,0],[483,0,328,0],[484,0,329,0],[485,0,330,0],[486,2,318,0],[486,11,318,0,"_getPlatformFeaturesAsync"],[486,37,318,0],[487,4,318,0,"_getPlatformFeaturesAsync"],[487,29,318,0],[487,36,318,0,"_asyncToGenerator"],[487,53,318,0],[487,54,318,0,"default"],[487,61,318,0],[487,63,312,7],[487,76,312,49],[488,6,313,4],[488,10,313,8],[488,11,313,9,"ExpoDevice"],[488,21,313,19],[488,22,313,19,"default"],[488,29,313,19],[488,30,313,20,"getPlatformFeaturesAsync"],[488,54,313,44],[488,56,313,46],[489,8,314,8],[489,15,314,15],[489,17,314,17],[490,6,315,4],[491,6,316,4],[491,19,316,17,"ExpoDevice"],[491,29,316,27],[491,30,316,27,"default"],[491,37,316,27],[491,38,316,28,"getPlatformFeaturesAsync"],[491,62,316,52],[491,63,316,53],[491,64,316,54],[492,4,317,0],[492,5,317,1],[493,4,317,1],[493,11,317,1,"_getPlatformFeaturesAsync"],[493,36,317,1],[493,37,317,1,"apply"],[493,42,317,1],[493,49,317,1,"arguments"],[493,58,317,1],[494,2,317,1],[495,2,317,1],[495,11,331,22,"hasPlatformFeatureAsync"],[495,34,331,45,"hasPlatformFeatureAsync"],[495,35,331,45,"_x"],[495,37,331,45],[496,4,331,45],[496,11,331,45,"_hasPlatformFeatureAsync"],[496,35,331,45],[496,36,331,45,"apply"],[496,41,331,45],[496,48,331,45,"arguments"],[496,57,331,45],[497,2,331,45],[498,2,331,45],[498,11,331,45,"_hasPlatformFeatureAsync"],[498,36,331,45],[499,4,331,45,"_hasPlatformFeatureAsync"],[499,28,331,45],[499,35,331,45,"_asyncToGenerator"],[499,52,331,45],[499,53,331,45,"default"],[499,60,331,45],[499,62,331,7],[499,73,331,46,"feature"],[499,80,331,53],[499,82,331,55],[500,6,332,4],[500,10,332,8],[500,11,332,9,"ExpoDevice"],[500,21,332,19],[500,22,332,19,"default"],[500,29,332,19],[500,30,332,20,"hasPlatformFeatureAsync"],[500,53,332,43],[500,55,332,45],[501,8,333,8],[501,15,333,15],[501,20,333,20],[502,6,334,4],[503,6,335,4],[503,19,335,17,"ExpoDevice"],[503,29,335,27],[503,30,335,27,"default"],[503,37,335,27],[503,38,335,28,"hasPlatformFeatureAsync"],[503,61,335,51],[503,62,335,52,"feature"],[503,69,335,59],[503,70,335,60],[504,4,336,0],[504,5,336,1],[505,4,336,1],[505,11,336,1,"_hasPlatformFeatureAsync"],[505,35,336,1],[505,36,336,1,"apply"],[505,41,336,1],[505,48,336,1,"arguments"],[505,57,336,1],[506,2,336,1],[507,0,336,1],[507,3]],"functionMap":{"names":["<global>","getDeviceTypeAsync","getUptimeAsync","getMaxMemoryAsync","isRootedExperimentalAsync","isSideLoadingEnabledAsync","getPlatformFeaturesAsync","hasPlatformFeatureAsync"],"mappings":"AAA;OCkN;CDK;OEY;CFK;OGW;CHS;OIiB;CJK;OKa;CLK;OMmB;CNK;OOc;CPK"},"hasCjsExports":false},"type":"js/module"}]}