{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../browser/index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":21,"index":2100},"end":{"line":43,"column":51,"index":2130}}],"key":"zO6se2LwFeUGh5AhFHYBol+loKM=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":44,"column":27,"index":2159},"end":{"line":44,"column":43,"index":2175}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"../values/index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":45,"column":20,"index":2201},"end":{"line":45,"column":49,"index":2230}}],"key":"rHaD+k87tSPxPLBREq0hR9aQrnI=","exportNames":["*"],"imports":1}},{"name":"./use_queries.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":46,"column":25,"index":2257},"end":{"line":46,"column":52,"index":2284}}],"key":"cm42znEYPYnhhk5SxaBME1WcOWs=","exportNames":["*"],"imports":1}},{"name":"./use_subscription.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":47,"column":30,"index":2316},"end":{"line":47,"column":62,"index":2348}}],"key":"T9g275TLXKRGHe2ixyTGsdc3P8U=","exportNames":["*"],"imports":1}},{"name":"../common/index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":48,"column":20,"index":2370},"end":{"line":48,"column":49,"index":2399}}],"key":"+dMPzOEbG0ps7baSMj3MqJbvg8c=","exportNames":["*"],"imports":1}},{"name":"../server/api.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":49,"column":17,"index":2418},"end":{"line":49,"column":44,"index":2445}}],"key":"9uCDYdba/WXOZ3jXsahDq3geOrk=","exportNames":["*"],"imports":1}},{"name":"../browser/logging.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":50,"column":21,"index":2468},"end":{"line":50,"column":53,"index":2500}}],"key":"V4WXI4ZG9AyMbnBDxUzjRFfST50=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value\n  }) : obj[key] = value;\n  var __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: true\n    });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      var _loop = function (key) {\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var key of __getOwnPropNames(from)) {\n        _loop(key);\n      }\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod));\n  var __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n  var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  var client_exports = {};\n  __export(client_exports, {\n    ConvexProvider: () => ConvexProvider,\n    ConvexReactClient: () => ConvexReactClient,\n    createMutation: () => createMutation,\n    useAction: () => useAction,\n    useConvex: () => useConvex,\n    useConvexConnectionState: () => useConvexConnectionState,\n    useMutation: () => useMutation,\n    useQuery: () => useQuery\n  });\n  module.exports = __toCommonJS(client_exports);\n  var import_browser = require(_dependencyMap[3], \"../browser/index.js\");\n  var import_react = __toESM(require(_dependencyMap[4], \"react\"), 1);\n  var import_values = require(_dependencyMap[5], \"../values/index.js\");\n  var import_use_queries = require(_dependencyMap[6], \"./use_queries.js\");\n  var import_use_subscription = require(_dependencyMap[7], \"./use_subscription.js\");\n  var import_common = require(_dependencyMap[8], \"../common/index.js\");\n  var import_api = require(_dependencyMap[9], \"../server/api.js\");\n  var import_logging = require(_dependencyMap[10], \"../browser/logging.js\");\n  var DEFAULT_EXTEND_SUBSCRIPTION_FOR = 5e3;\n  if (typeof import_react.default === \"undefined\") {\n    throw new Error(\"Required dependency 'react' not found\");\n  }\n  function createMutation(mutationReference, client, update) {\n    function mutation(args) {\n      assertNotAccidentalArgument(args);\n      return client.mutation(mutationReference, args, {\n        optimisticUpdate: update\n      });\n    }\n    mutation.withOptimisticUpdate = function withOptimisticUpdate(optimisticUpdate) {\n      if (update !== void 0) {\n        throw new Error(`Already specified optimistic update for mutation ${(0, import_api.getFunctionName)(mutationReference)}`);\n      }\n      return createMutation(mutationReference, client, optimisticUpdate);\n    };\n    return mutation;\n  }\n  function createAction(actionReference, client) {\n    return function (args) {\n      return client.action(actionReference, args);\n    };\n  }\n  var ConvexReactClient = /*#__PURE__*/function () {\n    /**\n     * @param address - The url of your Convex deployment, often provided\n     * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n     * @param options - See {@link ConvexReactClientOptions} for a full description.\n     */\n    function ConvexReactClient(address, options) {\n      _classCallCheck(this, ConvexReactClient);\n      __publicField(this, \"address\");\n      __publicField(this, \"cachedSync\");\n      __publicField(this, \"listeners\");\n      __publicField(this, \"options\");\n      __publicField(this, \"closed\", false);\n      __publicField(this, \"_logger\");\n      __publicField(this, \"adminAuth\");\n      __publicField(this, \"fakeUserIdentity\");\n      if (address === void 0) {\n        throw new Error(\"No address provided to ConvexReactClient.\\nIf trying to deploy to production, make sure to follow all the instructions found at https://docs.convex.dev/production/hosting/\\nIf running locally, make sure to run `convex dev` and ensure the .env.local file is populated.\");\n      }\n      if (typeof address !== \"string\") {\n        throw new Error(`ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud', received something of type ${typeof address} instead.`);\n      }\n      if (!address.includes(\"://\")) {\n        throw new Error(\"Provided address was not an absolute URL.\");\n      }\n      this.address = address;\n      this.listeners = /* @__PURE__ */new Map();\n      this._logger = options?.logger === false ? (0, import_logging.instantiateNoopLogger)({\n        verbose: options?.verbose ?? false\n      }) : options?.logger !== true && options?.logger ? options.logger : (0, import_logging.instantiateDefaultLogger)({\n        verbose: options?.verbose ?? false\n      });\n      this.options = {\n        ...options,\n        logger: this._logger\n      };\n    }\n    /**\n     * Return the address for this client, useful for creating a new client.\n     *\n     * Not guaranteed to match the address with which this client was constructed:\n     * it may be canonicalized.\n     */\n    return _createClass(ConvexReactClient, [{\n      key: \"url\",\n      get: function () {\n        return this.address;\n      }\n      /**\n       * Lazily instantiate the `BaseConvexClient` so we don't create the WebSocket\n       * when server-side rendering.\n       *\n       * @internal\n       */\n    }, {\n      key: \"sync\",\n      get: function () {\n        if (this.closed) {\n          throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n          return this.cachedSync;\n        }\n        this.cachedSync = new import_browser.BaseConvexClient(this.address, updatedQueries => this.transition(updatedQueries), this.options);\n        if (this.adminAuth) {\n          this.cachedSync.setAdminAuth(this.adminAuth, this.fakeUserIdentity);\n        }\n        return this.cachedSync;\n      }\n      /**\n       * Set the authentication token to be used for subsequent queries and mutations.\n       * `fetchToken` will be called automatically again if a token expires.\n       * `fetchToken` should return `null` if the token cannot be retrieved, for example\n       * when the user's rights were permanently revoked.\n       * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n       * @param onChange - a callback that will be called when the authentication status changes\n       */\n    }, {\n      key: \"setAuth\",\n      value: function setAuth(fetchToken, onChange) {\n        if (typeof fetchToken === \"string\") {\n          throw new Error(\"Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.\");\n        }\n        this.sync.setAuth(fetchToken, onChange ?? (() => {}));\n      }\n      /**\n       * Clear the current authentication token if set.\n       */\n    }, {\n      key: \"clearAuth\",\n      value: function clearAuth() {\n        this.sync.clearAuth();\n      }\n      /**\n       * @internal\n       */\n    }, {\n      key: \"setAdminAuth\",\n      value: function setAdminAuth(token, identity) {\n        this.adminAuth = token;\n        this.fakeUserIdentity = identity;\n        if (this.closed) {\n          throw new Error(\"ConvexReactClient has already been closed.\");\n        }\n        if (this.cachedSync) {\n          this.sync.setAdminAuth(token, identity);\n        }\n      }\n      /**\n       * Construct a new {@link Watch} on a Convex query function.\n       *\n       * **Most application code should not call this method directly. Instead use\n       * the {@link useQuery} hook.**\n       *\n       * @param query - A {@link server.FunctionReference} for the public query to run.\n       * @param args - An arguments object for the query. If this is omitted,\n       * the arguments will be `{}`.\n       * @param options - A {@link WatchQueryOptions} options object for this query.\n       *\n       * @returns The {@link Watch} object.\n       */\n    }, {\n      key: \"watchQuery\",\n      value: function watchQuery(query) {\n        for (var _len = arguments.length, argsAndOptions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          argsAndOptions[_key - 1] = arguments[_key];\n        }\n        var args = argsAndOptions[0],\n          options = argsAndOptions[1];\n        var name = (0, import_api.getFunctionName)(query);\n        return {\n          onUpdate: callback => {\n            var _this$sync$subscribe = this.sync.subscribe(name, args, options),\n              queryToken = _this$sync$subscribe.queryToken,\n              unsubscribe = _this$sync$subscribe.unsubscribe;\n            var currentListeners = this.listeners.get(queryToken);\n            if (currentListeners !== void 0) {\n              currentListeners.add(callback);\n            } else {\n              this.listeners.set(queryToken, /* @__PURE__ */new Set([callback]));\n            }\n            return () => {\n              if (this.closed) {\n                return;\n              }\n              var currentListeners2 = this.listeners.get(queryToken);\n              currentListeners2.delete(callback);\n              if (currentListeners2.size === 0) {\n                this.listeners.delete(queryToken);\n              }\n              unsubscribe();\n            };\n          },\n          localQueryResult: () => {\n            if (this.cachedSync) {\n              return this.cachedSync.localQueryResult(name, args);\n            }\n            return void 0;\n          },\n          localQueryLogs: () => {\n            if (this.cachedSync) {\n              return this.cachedSync.localQueryLogs(name, args);\n            }\n            return void 0;\n          },\n          journal: () => {\n            if (this.cachedSync) {\n              return this.cachedSync.queryJournal(name, args);\n            }\n            return void 0;\n          }\n        };\n      }\n      // Let's try out a queryOptions-style API.\n      // This method is similar to the React Query API `queryClient.prefetchQuery()`.\n      // In the future an ensureQueryData(): Promise<Data> method could exist.\n      /**\n       * Indicates likely future interest in a query subscription.\n       *\n       * The implementation currently immediately subscribes to a query. In the future this method\n       * may prioritize some queries over others, fetch the query result without subscribing, or\n       * do nothing in slow network connections or high load scenarios.\n       *\n       * To use this in a React component, call useQuery() and ignore the return value.\n       *\n       * @param queryOptions - A query (function reference from an api object) and its args, plus\n       * an optional extendSubscriptionFor for how long to subscribe to the query.\n       */\n    }, {\n      key: \"prewarmQuery\",\n      value: function prewarmQuery(queryOptions) {\n        var extendSubscriptionFor = queryOptions.extendSubscriptionFor ?? DEFAULT_EXTEND_SUBSCRIPTION_FOR;\n        var watch = this.watchQuery(queryOptions.query, queryOptions.args || {});\n        var unsubscribe = watch.onUpdate(() => {});\n        setTimeout(unsubscribe, extendSubscriptionFor);\n      }\n      /**\n       * Execute a mutation function.\n       *\n       * @param mutation - A {@link server.FunctionReference} for the public mutation\n       * to run.\n       * @param args - An arguments object for the mutation. If this is omitted,\n       * the arguments will be `{}`.\n       * @param options - A {@link MutationOptions} options object for the mutation.\n       * @returns A promise of the mutation's result.\n       */\n    }, {\n      key: \"mutation\",\n      value: function mutation(_mutation) {\n        for (var _len2 = arguments.length, argsAndOptions = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          argsAndOptions[_key2 - 1] = arguments[_key2];\n        }\n        var args = argsAndOptions[0],\n          options = argsAndOptions[1];\n        var name = (0, import_api.getFunctionName)(_mutation);\n        return this.sync.mutation(name, args, options);\n      }\n      /**\n       * Execute an action function.\n       *\n       * @param action - A {@link server.FunctionReference} for the public action\n       * to run.\n       * @param args - An arguments object for the action. If this is omitted,\n       * the arguments will be `{}`.\n       * @returns A promise of the action's result.\n       */\n    }, {\n      key: \"action\",\n      value: function action(_action) {\n        var name = (0, import_api.getFunctionName)(_action);\n        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n        return this.sync.action(name, ...args);\n      }\n      /**\n       * Fetch a query result once.\n       *\n       * **Most application code should subscribe to queries instead, using\n       * the {@link useQuery} hook.**\n       *\n       * @param query - A {@link server.FunctionReference} for the public query\n       * to run.\n       * @param args - An arguments object for the query. If this is omitted,\n       * the arguments will be `{}`.\n       * @returns A promise of the query's result.\n       */\n    }, {\n      key: \"query\",\n      value: function query(_query) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        var watch = this.watchQuery(_query, ...args);\n        var existingResult = watch.localQueryResult();\n        if (existingResult !== void 0) {\n          return Promise.resolve(existingResult);\n        }\n        return new Promise((resolve, reject) => {\n          var unsubscribe = watch.onUpdate(() => {\n            unsubscribe();\n            try {\n              resolve(watch.localQueryResult());\n            } catch (e) {\n              reject(e);\n            }\n          });\n        });\n      }\n      /**\n       * Get the current {@link ConnectionState} between the client and the Convex\n       * backend.\n       *\n       * @returns The {@link ConnectionState} with the Convex backend.\n       */\n    }, {\n      key: \"connectionState\",\n      value: function connectionState() {\n        return this.sync.connectionState();\n      }\n      /**\n       * Subscribe to the {@link ConnectionState} between the client and the Convex\n       * backend, calling a callback each time it changes.\n       *\n       * Subscribed callbacks will be called when any part of ConnectionState changes.\n       * ConnectionState may grow in future versions (e.g. to provide a array of\n       * inflight requests) in which case callbacks would be called more frequently.\n       * ConnectionState may also *lose* properties in future versions as we figure\n       * out what information is most useful. As such this API is considered unstable.\n       *\n       * @returns An unsubscribe function to stop listening.\n       */\n    }, {\n      key: \"subscribeToConnectionState\",\n      value: function subscribeToConnectionState(cb) {\n        return this.sync.subscribeToConnectionState(cb);\n      }\n      /**\n       * Get the logger for this client.\n       *\n       * @returns The {@link Logger} for this client.\n       */\n    }, {\n      key: \"logger\",\n      get: function () {\n        return this._logger;\n      }\n      /**\n       * Close any network handles associated with this client and stop all subscriptions.\n       *\n       * Call this method when you're done with a {@link ConvexReactClient} to\n       * dispose of its sockets and resources.\n       *\n       * @returns A `Promise` fulfilled when the connection has been completely closed.\n       */\n    }, {\n      key: \"close\",\n      value: (function () {\n        var _close = _asyncToGenerator(function* () {\n          this.closed = true;\n          this.listeners = /* @__PURE__ */new Map();\n          if (this.cachedSync) {\n            var sync = this.cachedSync;\n            this.cachedSync = void 0;\n            yield sync.close();\n          }\n        });\n        function close() {\n          return _close.apply(this, arguments);\n        }\n        return close;\n      }())\n    }, {\n      key: \"transition\",\n      value: function transition(updatedQueries) {\n        for (var queryToken of updatedQueries) {\n          var callbacks = this.listeners.get(queryToken);\n          if (callbacks) {\n            for (var callback of callbacks) {\n              callback();\n            }\n          }\n        }\n      }\n    }]);\n  }();\n  var ConvexContext = import_react.default.createContext(void 0\n  // in the future this will be a mocked client for testing\n  );\n  function useConvex() {\n    return (0, import_react.useContext)(ConvexContext);\n  }\n  var ConvexProvider = _ref => {\n    var client = _ref.client,\n      children = _ref.children;\n    return import_react.default.createElement(ConvexContext.Provider, {\n      value: client\n    }, children);\n  };\n  function useQuery(query) {\n    var skip = (arguments.length <= 1 ? undefined : arguments[1]) === \"skip\";\n    var argsObject = (arguments.length <= 1 ? undefined : arguments[1]) === \"skip\" ? {} : (0, import_common.parseArgs)(arguments.length <= 1 ? undefined : arguments[1]);\n    var queryReference = typeof query === \"string\" ? (0, import_api.makeFunctionReference)(query) : query;\n    var queryName = (0, import_api.getFunctionName)(queryReference);\n    var queries = (0, import_react.useMemo)(() => skip ? {} : {\n      query: {\n        query: queryReference,\n        args: argsObject\n      }\n    },\n    // Stringify args so args that are semantically the same don't trigger a\n    // rerender. Saves developers from adding `useMemo` on every args usage.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify((0, import_values.convexToJson)(argsObject)), queryName, skip]);\n    var results = (0, import_use_queries.useQueries)(queries);\n    var result = results[\"query\"];\n    if (result instanceof Error) {\n      throw result;\n    }\n    return result;\n  }\n  function useMutation(mutation) {\n    var mutationReference = typeof mutation === \"string\" ? (0, import_api.makeFunctionReference)(mutation) : mutation;\n    var convex = (0, import_react.useContext)(ConvexContext);\n    if (convex === void 0) {\n      throw new Error(\"Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0, import_react.useMemo)(() => createMutation(mutationReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0, import_api.getFunctionName)(mutationReference)]);\n  }\n  function useAction(action) {\n    var convex = (0, import_react.useContext)(ConvexContext);\n    var actionReference = typeof action === \"string\" ? (0, import_api.makeFunctionReference)(action) : action;\n    if (convex === void 0) {\n      throw new Error(\"Could not find Convex client! `useAction` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    return (0, import_react.useMemo)(() => createAction(actionReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0, import_api.getFunctionName)(actionReference)]);\n  }\n  function useConvexConnectionState() {\n    var convex = (0, import_react.useContext)(ConvexContext);\n    if (convex === void 0) {\n      throw new Error(\"Could not find Convex client! `useConvexConnectionState` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\");\n    }\n    var getCurrentValue = (0, import_react.useCallback)(() => {\n      return convex.connectionState();\n    }, [convex]);\n    var subscribe = (0, import_react.useCallback)(callback => {\n      return convex.subscribeToConnectionState(() => {\n        callback();\n      });\n    }, [convex]);\n    return (0, import_use_subscription.useSubscription)({\n      getCurrentValue,\n      subscribe\n    });\n  }\n  function assertNotAccidentalArgument(value) {\n    if (typeof value === \"object\" && value !== null && \"bubbles\" in value && \"persist\" in value && \"isDefaultPrevented\" in value) {\n      throw new Error(`Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like \\`const handler = () => myMutation();\\` and using \\`handler\\` in the event handler.`);\n    }\n  }\n});","lineCount":520,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[4,96,1,13,"default"],[4,103,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,2,0],[7,6,2,4,"__create"],[7,14,2,12],[7,17,2,15,"Object"],[7,23,2,21],[7,24,2,22,"create"],[7,30,2,28],[8,2,3,0],[8,6,3,4,"__defProp"],[8,15,3,13],[8,18,3,16,"Object"],[8,24,3,22],[8,25,3,23,"defineProperty"],[8,39,3,37],[9,2,4,0],[9,6,4,4,"__getOwnPropDesc"],[9,22,4,20],[9,25,4,23,"Object"],[9,31,4,29],[9,32,4,30,"getOwnPropertyDescriptor"],[9,56,4,54],[10,2,5,0],[10,6,5,4,"__getOwnPropNames"],[10,23,5,21],[10,26,5,24,"Object"],[10,32,5,30],[10,33,5,31,"getOwnPropertyNames"],[10,52,5,50],[11,2,6,0],[11,6,6,4,"__getProtoOf"],[11,18,6,16],[11,21,6,19,"Object"],[11,27,6,25],[11,28,6,26,"getPrototypeOf"],[11,42,6,40],[12,2,7,0],[12,6,7,4,"__hasOwnProp"],[12,18,7,16],[12,21,7,19,"Object"],[12,27,7,25],[12,28,7,26,"prototype"],[12,37,7,35],[12,38,7,36,"hasOwnProperty"],[12,52,7,50],[13,2,8,0],[13,6,8,4,"__defNormalProp"],[13,21,8,19],[13,24,8,22,"__defNormalProp"],[13,25,8,23,"obj"],[13,28,8,26],[13,30,8,28,"key"],[13,33,8,31],[13,35,8,33,"value"],[13,40,8,38],[13,45,8,43,"key"],[13,48,8,46],[13,52,8,50,"obj"],[13,55,8,53],[13,58,8,56,"__defProp"],[13,67,8,65],[13,68,8,66,"obj"],[13,71,8,69],[13,73,8,71,"key"],[13,76,8,74],[13,78,8,76],[14,4,8,78,"enumerable"],[14,14,8,88],[14,16,8,90],[14,20,8,94],[15,4,8,96,"configurable"],[15,16,8,108],[15,18,8,110],[15,22,8,114],[16,4,8,116,"writable"],[16,12,8,124],[16,14,8,126],[16,18,8,130],[17,4,8,132,"value"],[18,2,8,138],[18,3,8,139],[18,4,8,140],[18,7,8,143,"obj"],[18,10,8,146],[18,11,8,147,"key"],[18,14,8,150],[18,15,8,151],[18,18,8,154,"value"],[18,23,8,159],[19,2,9,0],[19,6,9,4,"__export"],[19,14,9,12],[19,17,9,15,"__export"],[19,18,9,16,"target"],[19,24,9,22],[19,26,9,24,"all"],[19,29,9,27],[19,34,9,32],[20,4,10,2],[20,9,10,7],[20,13,10,11,"name"],[20,17,10,15],[20,21,10,19,"all"],[20,24,10,22],[20,26,11,4,"__defProp"],[20,35,11,13],[20,36,11,14,"target"],[20,42,11,20],[20,44,11,22,"name"],[20,48,11,26],[20,50,11,28],[21,6,11,30,"get"],[21,9,11,33],[21,11,11,35,"all"],[21,14,11,38],[21,15,11,39,"name"],[21,19,11,43],[21,20,11,44],[22,6,11,46,"enumerable"],[22,16,11,56],[22,18,11,58],[23,4,11,63],[23,5,11,64],[23,6,11,65],[24,2,12,0],[24,3,12,1],[25,2,13,0],[25,6,13,4,"__copyProps"],[25,17,13,15],[25,20,13,18,"__copyProps"],[25,21,13,19,"to"],[25,23,13,21],[25,25,13,23,"from"],[25,29,13,27],[25,31,13,29,"except"],[25,37,13,35],[25,39,13,37,"desc"],[25,43,13,41],[25,48,13,46],[26,4,14,2],[26,8,14,6,"from"],[26,12,14,10],[26,16,14,14],[26,23,14,21,"from"],[26,27,14,25],[26,32,14,30],[26,40,14,38],[26,44,14,42],[26,51,14,49,"from"],[26,55,14,53],[26,60,14,58],[26,70,14,68],[26,72,14,70],[27,6,14,70],[27,10,14,70,"_loop"],[27,15,14,70],[27,27,14,70,"_loop"],[27,28,14,70,"key"],[27,31,14,70],[28,8,16,6],[28,12,16,10],[28,13,16,11,"__hasOwnProp"],[28,25,16,23],[28,26,16,24,"call"],[28,30,16,28],[28,31,16,29,"to"],[28,33,16,31],[28,35,16,33,"key"],[28,38,16,36],[28,39,16,37],[28,43,16,41,"key"],[28,46,16,44],[28,51,16,49,"except"],[28,57,16,55],[28,59,17,8,"__defProp"],[28,68,17,17],[28,69,17,18,"to"],[28,71,17,20],[28,73,17,22,"key"],[28,76,17,25],[28,78,17,27],[29,10,17,29,"get"],[29,13,17,32],[29,15,17,34,"get"],[29,16,17,34],[29,21,17,40,"from"],[29,25,17,44],[29,26,17,45,"key"],[29,29,17,48],[29,30,17,49],[30,10,17,51,"enumerable"],[30,20,17,61],[30,22,17,63],[30,24,17,65,"desc"],[30,28,17,69],[30,31,17,72,"__getOwnPropDesc"],[30,47,17,88],[30,48,17,89,"from"],[30,52,17,93],[30,54,17,95,"key"],[30,57,17,98],[30,58,17,99],[30,59,17,100],[30,63,17,104,"desc"],[30,67,17,108],[30,68,17,109,"enumerable"],[31,8,17,120],[31,9,17,121],[31,10,17,122],[32,6,17,123],[33,6,15,4],[33,11,15,9],[33,15,15,13,"key"],[33,18,15,16],[33,22,15,20,"__getOwnPropNames"],[33,39,15,37],[33,40,15,38,"from"],[33,44,15,42],[33,45,15,43],[34,8,15,43,"_loop"],[34,13,15,43],[34,14,15,43,"key"],[34,17,15,43],[35,6,15,43],[36,4,18,2],[37,4,19,2],[37,11,19,9,"to"],[37,13,19,11],[38,2,20,0],[38,3,20,1],[39,2,21,0],[39,6,21,4,"__toESM"],[39,13,21,11],[39,16,21,14,"__toESM"],[39,17,21,15,"mod"],[39,20,21,18],[39,22,21,20,"isNodeMode"],[39,32,21,30],[39,34,21,32,"target"],[39,40,21,38],[39,46,21,44,"target"],[39,52,21,50],[39,55,21,53,"mod"],[39,58,21,56],[39,62,21,60],[39,66,21,64],[39,69,21,67,"__create"],[39,77,21,75],[39,78,21,76,"__getProtoOf"],[39,90,21,88],[39,91,21,89,"mod"],[39,94,21,92],[39,95,21,93],[39,96,21,94],[39,99,21,97],[39,100,21,98],[39,101,21,99],[39,103,21,101,"__copyProps"],[39,114,21,112],[40,2,22,2],[41,2,23,2],[42,2,24,2],[43,2,25,2],[44,2,26,2,"isNodeMode"],[44,12,26,12],[44,16,26,16],[44,17,26,17,"mod"],[44,20,26,20],[44,24,26,24],[44,25,26,25,"mod"],[44,28,26,28],[44,29,26,29,"__esModule"],[44,39,26,39],[44,42,26,42,"__defProp"],[44,51,26,51],[44,52,26,52,"target"],[44,58,26,58],[44,60,26,60],[44,69,26,69],[44,71,26,71],[45,4,26,73,"value"],[45,9,26,78],[45,11,26,80,"mod"],[45,14,26,83],[46,4,26,85,"enumerable"],[46,14,26,95],[46,16,26,97],[47,2,26,102],[47,3,26,103],[47,4,26,104],[47,7,26,107,"target"],[47,13,26,113],[47,15,27,2,"mod"],[47,18,28,0],[47,19,28,1],[47,20,28,2],[48,2,29,0],[48,6,29,4,"__toCommonJS"],[48,18,29,16],[48,21,29,20,"mod"],[48,24,29,23],[48,28,29,28,"__copyProps"],[48,39,29,39],[48,40,29,40,"__defProp"],[48,49,29,49],[48,50,29,50],[48,51,29,51],[48,52,29,52],[48,54,29,54],[48,66,29,66],[48,68,29,68],[49,4,29,70,"value"],[49,9,29,75],[49,11,29,77],[50,2,29,82],[50,3,29,83],[50,4,29,84],[50,6,29,86,"mod"],[50,9,29,89],[50,10,29,90],[51,2,30,0],[51,6,30,4,"__publicField"],[51,19,30,17],[51,22,30,20,"__publicField"],[51,23,30,21,"obj"],[51,26,30,24],[51,28,30,26,"key"],[51,31,30,29],[51,33,30,31,"value"],[51,38,30,36],[51,43,30,41,"__defNormalProp"],[51,58,30,56],[51,59,30,57,"obj"],[51,62,30,60],[51,64,30,62],[51,71,30,69,"key"],[51,74,30,72],[51,79,30,77],[51,87,30,85],[51,90,30,88,"key"],[51,93,30,91],[51,96,30,94],[51,98,30,96],[51,101,30,99,"key"],[51,104,30,102],[51,106,30,104,"value"],[51,111,30,109],[51,112,30,110],[52,2,31,0],[52,6,31,4,"client_exports"],[52,20,31,18],[52,23,31,21],[52,24,31,22],[52,25,31,23],[53,2,32,0,"__export"],[53,10,32,8],[53,11,32,9,"client_exports"],[53,25,32,23],[53,27,32,25],[54,4,33,2,"ConvexProvider"],[54,18,33,16],[54,20,33,18,"ConvexProvider"],[54,21,33,18],[54,26,33,24,"ConvexProvider"],[54,40,33,38],[55,4,34,2,"ConvexReactClient"],[55,21,34,19],[55,23,34,21,"ConvexReactClient"],[55,24,34,21],[55,29,34,27,"ConvexReactClient"],[55,46,34,44],[56,4,35,2,"createMutation"],[56,18,35,16],[56,20,35,18,"createMutation"],[56,21,35,18],[56,26,35,24,"createMutation"],[56,40,35,38],[57,4,36,2,"useAction"],[57,13,36,11],[57,15,36,13,"useAction"],[57,16,36,13],[57,21,36,19,"useAction"],[57,30,36,28],[58,4,37,2,"useConvex"],[58,13,37,11],[58,15,37,13,"useConvex"],[58,16,37,13],[58,21,37,19,"useConvex"],[58,30,37,28],[59,4,38,2,"useConvexConnectionState"],[59,28,38,26],[59,30,38,28,"useConvexConnectionState"],[59,31,38,28],[59,36,38,34,"useConvexConnectionState"],[59,60,38,58],[60,4,39,2,"useMutation"],[60,15,39,13],[60,17,39,15,"useMutation"],[60,18,39,15],[60,23,39,21,"useMutation"],[60,34,39,32],[61,4,40,2,"useQuery"],[61,12,40,10],[61,14,40,12,"useQuery"],[61,15,40,12],[61,20,40,18,"useQuery"],[62,2,41,0],[62,3,41,1],[62,4,41,2],[63,2,42,0,"module"],[63,8,42,6],[63,9,42,7,"exports"],[63,16,42,14],[63,19,42,17,"__toCommonJS"],[63,31,42,29],[63,32,42,30,"client_exports"],[63,46,42,44],[63,47,42,45],[64,2,43,0],[64,6,43,4,"import_browser"],[64,20,43,18],[64,23,43,21,"require"],[64,30,43,28],[64,31,43,28,"_dependencyMap"],[64,45,43,28],[64,71,43,50],[64,72,43,51],[65,2,44,0],[65,6,44,4,"import_react"],[65,18,44,16],[65,21,44,19,"__toESM"],[65,28,44,26],[65,29,44,27,"require"],[65,36,44,34],[65,37,44,34,"_dependencyMap"],[65,51,44,34],[65,63,44,42],[65,64,44,43],[65,66,44,45],[65,67,44,46],[65,68,44,47],[66,2,45,0],[66,6,45,4,"import_values"],[66,19,45,17],[66,22,45,20,"require"],[66,29,45,27],[66,30,45,27,"_dependencyMap"],[66,44,45,27],[66,69,45,48],[66,70,45,49],[67,2,46,0],[67,6,46,4,"import_use_queries"],[67,24,46,22],[67,27,46,25,"require"],[67,34,46,32],[67,35,46,32,"_dependencyMap"],[67,49,46,32],[67,72,46,51],[67,73,46,52],[68,2,47,0],[68,6,47,4,"import_use_subscription"],[68,29,47,27],[68,32,47,30,"require"],[68,39,47,37],[68,40,47,37,"_dependencyMap"],[68,54,47,37],[68,82,47,61],[68,83,47,62],[69,2,48,0],[69,6,48,4,"import_common"],[69,19,48,17],[69,22,48,20,"require"],[69,29,48,27],[69,30,48,27,"_dependencyMap"],[69,44,48,27],[69,69,48,48],[69,70,48,49],[70,2,49,0],[70,6,49,4,"import_api"],[70,16,49,14],[70,19,49,17,"require"],[70,26,49,24],[70,27,49,24,"_dependencyMap"],[70,41,49,24],[70,64,49,43],[70,65,49,44],[71,2,50,0],[71,6,50,4,"import_logging"],[71,20,50,18],[71,23,50,21,"require"],[71,30,50,28],[71,31,50,28,"_dependencyMap"],[71,45,50,28],[71,74,50,52],[71,75,50,53],[72,2,51,0],[72,6,51,6,"DEFAULT_EXTEND_SUBSCRIPTION_FOR"],[72,37,51,37],[72,40,51,40],[72,43,51,43],[73,2,52,0],[73,6,52,4],[73,13,52,11,"import_react"],[73,25,52,23],[73,26,52,24,"default"],[73,33,52,31],[73,38,52,36],[73,49,52,47],[73,51,52,49],[74,4,53,2],[74,10,53,8],[74,14,53,12,"Error"],[74,19,53,17],[74,20,53,18],[74,59,53,57],[74,60,53,58],[75,2,54,0],[76,2,55,0],[76,11,55,9,"createMutation"],[76,25,55,23,"createMutation"],[76,26,55,24,"mutationReference"],[76,43,55,41],[76,45,55,43,"client"],[76,51,55,49],[76,53,55,51,"update"],[76,59,55,57],[76,61,55,59],[77,4,56,2],[77,13,56,11,"mutation"],[77,21,56,19,"mutation"],[77,22,56,20,"args"],[77,26,56,24],[77,28,56,26],[78,6,57,4,"assertNotAccidentalArgument"],[78,33,57,31],[78,34,57,32,"args"],[78,38,57,36],[78,39,57,37],[79,6,58,4],[79,13,58,11,"client"],[79,19,58,17],[79,20,58,18,"mutation"],[79,28,58,26],[79,29,58,27,"mutationReference"],[79,46,58,44],[79,48,58,46,"args"],[79,52,58,50],[79,54,58,52],[80,8,59,6,"optimisticUpdate"],[80,24,59,22],[80,26,59,24,"update"],[81,6,60,4],[81,7,60,5],[81,8,60,6],[82,4,61,2],[83,4,62,2,"mutation"],[83,12,62,10],[83,13,62,11,"withOptimisticUpdate"],[83,33,62,31],[83,36,62,34],[83,45,62,43,"withOptimisticUpdate"],[83,65,62,63,"withOptimisticUpdate"],[83,66,62,64,"optimisticUpdate"],[83,82,62,80],[83,84,62,82],[84,6,63,4],[84,10,63,8,"update"],[84,16,63,14],[84,21,63,19],[84,26,63,24],[84,27,63,25],[84,29,63,27],[85,8,64,6],[85,14,64,12],[85,18,64,16,"Error"],[85,23,64,21],[85,24,65,8],[85,76,65,60],[85,77,65,61],[85,78,65,62],[85,80,65,64,"import_api"],[85,90,65,74],[85,91,65,75,"getFunctionName"],[85,106,65,90],[85,108,66,10,"mutationReference"],[85,125,67,8],[85,126,67,9],[85,128,68,6],[85,129,68,7],[86,6,69,4],[87,6,70,4],[87,13,70,11,"createMutation"],[87,27,70,25],[87,28,70,26,"mutationReference"],[87,45,70,43],[87,47,70,45,"client"],[87,53,70,51],[87,55,70,53,"optimisticUpdate"],[87,71,70,69],[87,72,70,70],[88,4,71,2],[88,5,71,3],[89,4,72,2],[89,11,72,9,"mutation"],[89,19,72,17],[90,2,73,0],[91,2,74,0],[91,11,74,9,"createAction"],[91,23,74,21,"createAction"],[91,24,74,22,"actionReference"],[91,39,74,37],[91,41,74,39,"client"],[91,47,74,45],[91,49,74,47],[92,4,75,2],[92,11,75,9],[92,21,75,18,"args"],[92,25,75,22],[92,27,75,24],[93,6,76,4],[93,13,76,11,"client"],[93,19,76,17],[93,20,76,18,"action"],[93,26,76,24],[93,27,76,25,"actionReference"],[93,42,76,40],[93,44,76,42,"args"],[93,48,76,46],[93,49,76,47],[94,4,77,2],[94,5,77,3],[95,2,78,0],[96,2,78,1],[96,6,79,6,"ConvexReactClient"],[96,23,79,23],[97,4,80,2],[98,0,81,0],[99,0,82,0],[100,0,83,0],[101,0,84,0],[102,4,85,2],[102,13,85,2,"ConvexReactClient"],[102,31,85,14,"address"],[102,38,85,21],[102,40,85,23,"options"],[102,47,85,30],[102,49,85,32],[103,6,85,32,"_classCallCheck"],[103,21,85,32],[103,28,85,32,"ConvexReactClient"],[103,45,85,32],[104,6,86,4,"__publicField"],[104,19,86,17],[104,20,86,18],[104,24,86,22],[104,26,86,24],[104,35,86,33],[104,36,86,34],[105,6,87,4,"__publicField"],[105,19,87,17],[105,20,87,18],[105,24,87,22],[105,26,87,24],[105,38,87,36],[105,39,87,37],[106,6,88,4,"__publicField"],[106,19,88,17],[106,20,88,18],[106,24,88,22],[106,26,88,24],[106,37,88,35],[106,38,88,36],[107,6,89,4,"__publicField"],[107,19,89,17],[107,20,89,18],[107,24,89,22],[107,26,89,24],[107,35,89,33],[107,36,89,34],[108,6,90,4,"__publicField"],[108,19,90,17],[108,20,90,18],[108,24,90,22],[108,26,90,24],[108,34,90,32],[108,36,90,34],[108,41,90,39],[108,42,90,40],[109,6,91,4,"__publicField"],[109,19,91,17],[109,20,91,18],[109,24,91,22],[109,26,91,24],[109,35,91,33],[109,36,91,34],[110,6,92,4,"__publicField"],[110,19,92,17],[110,20,92,18],[110,24,92,22],[110,26,92,24],[110,37,92,35],[110,38,92,36],[111,6,93,4,"__publicField"],[111,19,93,17],[111,20,93,18],[111,24,93,22],[111,26,93,24],[111,44,93,42],[111,45,93,43],[112,6,94,4],[112,10,94,8,"address"],[112,17,94,15],[112,22,94,20],[112,27,94,25],[112,28,94,26],[112,30,94,28],[113,8,95,6],[113,14,95,12],[113,18,95,16,"Error"],[113,23,95,21],[113,24,96,8],[113,293,97,6],[113,294,97,7],[114,6,98,4],[115,6,99,4],[115,10,99,8],[115,17,99,15,"address"],[115,24,99,22],[115,29,99,27],[115,37,99,35],[115,39,99,37],[116,8,100,6],[116,14,100,12],[116,18,100,16,"Error"],[116,23,100,21],[116,24,101,8],[116,132,101,116],[116,139,101,123,"address"],[116,146,101,130],[116,157,102,6],[116,158,102,7],[117,6,103,4],[118,6,104,4],[118,10,104,8],[118,11,104,9,"address"],[118,18,104,16],[118,19,104,17,"includes"],[118,27,104,25],[118,28,104,26],[118,33,104,31],[118,34,104,32],[118,36,104,34],[119,8,105,6],[119,14,105,12],[119,18,105,16,"Error"],[119,23,105,21],[119,24,105,22],[119,67,105,65],[119,68,105,66],[120,6,106,4],[121,6,107,4],[121,10,107,8],[121,11,107,9,"address"],[121,18,107,16],[121,21,107,19,"address"],[121,28,107,26],[122,6,108,4],[122,10,108,8],[122,11,108,9,"listeners"],[122,20,108,18],[122,23,108,21],[122,38,108,37],[122,42,108,41,"Map"],[122,45,108,44],[122,46,108,45],[122,47,108,46],[123,6,109,4],[123,10,109,8],[123,11,109,9,"_logger"],[123,18,109,16],[123,21,109,19,"options"],[123,28,109,26],[123,30,109,28,"logger"],[123,36,109,34],[123,41,109,39],[123,46,109,44],[123,49,109,47],[123,50,109,48],[123,51,109,49],[123,53,109,51,"import_logging"],[123,67,109,65],[123,68,109,66,"instantiateNoopLogger"],[123,89,109,87],[123,91,109,89],[124,8,109,91,"verbose"],[124,15,109,98],[124,17,109,100,"options"],[124,24,109,107],[124,26,109,109,"verbose"],[124,33,109,116],[124,37,109,120],[125,6,109,126],[125,7,109,127],[125,8,109,128],[125,11,109,131,"options"],[125,18,109,138],[125,20,109,140,"logger"],[125,26,109,146],[125,31,109,151],[125,35,109,155],[125,39,109,159,"options"],[125,46,109,166],[125,48,109,168,"logger"],[125,54,109,174],[125,57,109,177,"options"],[125,64,109,184],[125,65,109,185,"logger"],[125,71,109,191],[125,74,109,194],[125,75,109,195],[125,76,109,196],[125,78,109,198,"import_logging"],[125,92,109,212],[125,93,109,213,"instantiateDefaultLogger"],[125,117,109,237],[125,119,109,239],[126,8,109,241,"verbose"],[126,15,109,248],[126,17,109,250,"options"],[126,24,109,257],[126,26,109,259,"verbose"],[126,33,109,266],[126,37,109,270],[127,6,109,276],[127,7,109,277],[127,8,109,278],[128,6,110,4],[128,10,110,8],[128,11,110,9,"options"],[128,18,110,16],[128,21,110,19],[129,8,110,21],[129,11,110,24,"options"],[129,18,110,31],[130,8,110,33,"logger"],[130,14,110,39],[130,16,110,41],[130,20,110,45],[130,21,110,46,"_logger"],[131,6,110,54],[131,7,110,55],[132,4,111,2],[133,4,112,2],[134,0,113,0],[135,0,114,0],[136,0,115,0],[137,0,116,0],[138,0,117,0],[139,4,112,2],[139,11,112,2,"_createClass"],[139,23,112,2],[139,24,112,2,"ConvexReactClient"],[139,41,112,2],[140,6,112,2,"key"],[140,9,112,2],[141,6,112,2,"get"],[141,9,112,2],[141,11,118,2],[141,20,118,2,"get"],[141,21,118,2],[141,23,118,12],[142,8,119,4],[142,15,119,11],[142,19,119,15],[142,20,119,16,"address"],[142,27,119,23],[143,6,120,2],[144,6,121,2],[145,0,122,0],[146,0,123,0],[147,0,124,0],[148,0,125,0],[149,0,126,0],[150,4,121,2],[151,6,121,2,"key"],[151,9,121,2],[152,6,121,2,"get"],[152,9,121,2],[152,11,127,2],[152,20,127,2,"get"],[152,21,127,2],[152,23,127,13],[153,8,128,4],[153,12,128,8],[153,16,128,12],[153,17,128,13,"closed"],[153,23,128,19],[153,25,128,21],[154,10,129,6],[154,16,129,12],[154,20,129,16,"Error"],[154,25,129,21],[154,26,129,22],[154,70,129,66],[154,71,129,67],[155,8,130,4],[156,8,131,4],[156,12,131,8],[156,16,131,12],[156,17,131,13,"cachedSync"],[156,27,131,23],[156,29,131,25],[157,10,132,6],[157,17,132,13],[157,21,132,17],[157,22,132,18,"cachedSync"],[157,32,132,28],[158,8,133,4],[159,8,134,4],[159,12,134,8],[159,13,134,9,"cachedSync"],[159,23,134,19],[159,26,134,22],[159,30,134,26,"import_browser"],[159,44,134,40],[159,45,134,41,"BaseConvexClient"],[159,61,134,57],[159,62,135,6],[159,66,135,10],[159,67,135,11,"address"],[159,74,135,18],[159,76,136,7,"updatedQueries"],[159,90,136,21],[159,94,136,26],[159,98,136,30],[159,99,136,31,"transition"],[159,109,136,41],[159,110,136,42,"updatedQueries"],[159,124,136,56],[159,125,136,57],[159,127,137,6],[159,131,137,10],[159,132,137,11,"options"],[159,139,138,4],[159,140,138,5],[160,8,139,4],[160,12,139,8],[160,16,139,12],[160,17,139,13,"adminAuth"],[160,26,139,22],[160,28,139,24],[161,10,140,6],[161,14,140,10],[161,15,140,11,"cachedSync"],[161,25,140,21],[161,26,140,22,"setAdminAuth"],[161,38,140,34],[161,39,140,35],[161,43,140,39],[161,44,140,40,"adminAuth"],[161,53,140,49],[161,55,140,51],[161,59,140,55],[161,60,140,56,"fakeUserIdentity"],[161,76,140,72],[161,77,140,73],[162,8,141,4],[163,8,142,4],[163,15,142,11],[163,19,142,15],[163,20,142,16,"cachedSync"],[163,30,142,26],[164,6,143,2],[165,6,144,2],[166,0,145,0],[167,0,146,0],[168,0,147,0],[169,0,148,0],[170,0,149,0],[171,0,150,0],[172,0,151,0],[173,4,144,2],[174,6,144,2,"key"],[174,9,144,2],[175,6,144,2,"value"],[175,11,144,2],[175,13,152,2],[175,22,152,2,"setAuth"],[175,29,152,9,"setAuth"],[175,30,152,10,"fetchToken"],[175,40,152,20],[175,42,152,22,"onChange"],[175,50,152,30],[175,52,152,32],[176,8,153,4],[176,12,153,8],[176,19,153,15,"fetchToken"],[176,29,153,25],[176,34,153,30],[176,42,153,38],[176,44,153,40],[177,10,154,6],[177,16,154,12],[177,20,154,16,"Error"],[177,25,154,21],[177,26,155,8],[177,172,156,6],[177,173,156,7],[178,8,157,4],[179,8,158,4],[179,12,158,8],[179,13,158,9,"sync"],[179,17,158,13],[179,18,158,14,"setAuth"],[179,25,158,21],[179,26,159,6,"fetchToken"],[179,36,159,16],[179,38,160,6,"onChange"],[179,46,160,14],[179,51,160,19],[179,57,160,25],[179,58,161,6],[179,59,161,7],[179,60,162,4],[179,61,162,5],[180,6,163,2],[181,6,164,2],[182,0,165,0],[183,0,166,0],[184,4,164,2],[185,6,164,2,"key"],[185,9,164,2],[186,6,164,2,"value"],[186,11,164,2],[186,13,167,2],[186,22,167,2,"clearAuth"],[186,31,167,11,"clearAuth"],[186,32,167,11],[186,34,167,14],[187,8,168,4],[187,12,168,8],[187,13,168,9,"sync"],[187,17,168,13],[187,18,168,14,"clearAuth"],[187,27,168,23],[187,28,168,24],[187,29,168,25],[188,6,169,2],[189,6,170,2],[190,0,171,0],[191,0,172,0],[192,4,170,2],[193,6,170,2,"key"],[193,9,170,2],[194,6,170,2,"value"],[194,11,170,2],[194,13,173,2],[194,22,173,2,"setAdminAuth"],[194,34,173,14,"setAdminAuth"],[194,35,173,15,"token"],[194,40,173,20],[194,42,173,22,"identity"],[194,50,173,30],[194,52,173,32],[195,8,174,4],[195,12,174,8],[195,13,174,9,"adminAuth"],[195,22,174,18],[195,25,174,21,"token"],[195,30,174,26],[196,8,175,4],[196,12,175,8],[196,13,175,9,"fakeUserIdentity"],[196,29,175,25],[196,32,175,28,"identity"],[196,40,175,36],[197,8,176,4],[197,12,176,8],[197,16,176,12],[197,17,176,13,"closed"],[197,23,176,19],[197,25,176,21],[198,10,177,6],[198,16,177,12],[198,20,177,16,"Error"],[198,25,177,21],[198,26,177,22],[198,70,177,66],[198,71,177,67],[199,8,178,4],[200,8,179,4],[200,12,179,8],[200,16,179,12],[200,17,179,13,"cachedSync"],[200,27,179,23],[200,29,179,25],[201,10,180,6],[201,14,180,10],[201,15,180,11,"sync"],[201,19,180,15],[201,20,180,16,"setAdminAuth"],[201,32,180,28],[201,33,180,29,"token"],[201,38,180,34],[201,40,180,36,"identity"],[201,48,180,44],[201,49,180,45],[202,8,181,4],[203,6,182,2],[204,6,183,2],[205,0,184,0],[206,0,185,0],[207,0,186,0],[208,0,187,0],[209,0,188,0],[210,0,189,0],[211,0,190,0],[212,0,191,0],[213,0,192,0],[214,0,193,0],[215,0,194,0],[216,0,195,0],[217,4,183,2],[218,6,183,2,"key"],[218,9,183,2],[219,6,183,2,"value"],[219,11,183,2],[219,13,196,2],[219,22,196,2,"watchQuery"],[219,32,196,12,"watchQuery"],[219,33,196,13,"query"],[219,38,196,18],[219,40,196,39],[220,8,196,39],[220,17,196,39,"_len"],[220,21,196,39],[220,24,196,39,"arguments"],[220,33,196,39],[220,34,196,39,"length"],[220,40,196,39],[220,42,196,23,"argsAndOptions"],[220,56,196,37],[220,63,196,37,"Array"],[220,68,196,37],[220,69,196,37,"_len"],[220,73,196,37],[220,80,196,37,"_len"],[220,84,196,37],[220,95,196,37,"_key"],[220,99,196,37],[220,105,196,37,"_key"],[220,109,196,37],[220,112,196,37,"_len"],[220,116,196,37],[220,118,196,37,"_key"],[220,122,196,37],[221,10,196,23,"argsAndOptions"],[221,24,196,37],[221,25,196,37,"_key"],[221,29,196,37],[221,37,196,37,"arguments"],[221,46,196,37],[221,47,196,37,"_key"],[221,51,196,37],[222,8,196,37],[223,8,197,4],[223,12,197,11,"args"],[223,16,197,15],[223,19,197,28,"argsAndOptions"],[223,33,197,42],[224,10,197,17,"options"],[224,17,197,24],[224,20,197,28,"argsAndOptions"],[224,34,197,42],[225,8,198,4],[225,12,198,10,"name"],[225,16,198,14],[225,19,198,17],[225,20,198,18],[225,21,198,19],[225,23,198,21,"import_api"],[225,33,198,31],[225,34,198,32,"getFunctionName"],[225,49,198,47],[225,51,198,49,"query"],[225,56,198,54],[225,57,198,55],[226,8,199,4],[226,15,199,11],[227,10,200,6,"onUpdate"],[227,18,200,14],[227,20,200,17,"callback"],[227,28,200,25],[227,32,200,30],[228,12,201,8],[228,16,201,8,"_this$sync$subscribe"],[228,36,201,8],[228,39,201,44],[228,43,201,48],[228,44,201,49,"sync"],[228,48,201,53],[228,49,201,54,"subscribe"],[228,58,201,63],[228,59,202,10,"name"],[228,63,202,14],[228,65,203,10,"args"],[228,69,203,14],[228,71,204,10,"options"],[228,78,205,8],[228,79,205,9],[229,14,201,16,"queryToken"],[229,24,201,26],[229,27,201,26,"_this$sync$subscribe"],[229,47,201,26],[229,48,201,16,"queryToken"],[229,58,201,26],[230,14,201,28,"unsubscribe"],[230,25,201,39],[230,28,201,39,"_this$sync$subscribe"],[230,48,201,39],[230,49,201,28,"unsubscribe"],[230,60,201,39],[231,12,206,8],[231,16,206,14,"currentListeners"],[231,32,206,30],[231,35,206,33],[231,39,206,37],[231,40,206,38,"listeners"],[231,49,206,47],[231,50,206,48,"get"],[231,53,206,51],[231,54,206,52,"queryToken"],[231,64,206,62],[231,65,206,63],[232,12,207,8],[232,16,207,12,"currentListeners"],[232,32,207,28],[232,37,207,33],[232,42,207,38],[232,43,207,39],[232,45,207,41],[233,14,208,10,"currentListeners"],[233,30,208,26],[233,31,208,27,"add"],[233,34,208,30],[233,35,208,31,"callback"],[233,43,208,39],[233,44,208,40],[234,12,209,8],[234,13,209,9],[234,19,209,15],[235,14,210,10],[235,18,210,14],[235,19,210,15,"listeners"],[235,28,210,24],[235,29,210,25,"set"],[235,32,210,28],[235,33,210,29,"queryToken"],[235,43,210,39],[235,45,210,41],[235,60,210,57],[235,64,210,61,"Set"],[235,67,210,64],[235,68,210,65],[235,69,210,66,"callback"],[235,77,210,74],[235,78,210,75],[235,79,210,76],[235,80,210,77],[236,12,211,8],[237,12,212,8],[237,19,212,15],[237,25,212,21],[238,14,213,10],[238,18,213,14],[238,22,213,18],[238,23,213,19,"closed"],[238,29,213,25],[238,31,213,27],[239,16,214,12],[240,14,215,10],[241,14,216,10],[241,18,216,16,"currentListeners2"],[241,35,216,33],[241,38,216,36],[241,42,216,40],[241,43,216,41,"listeners"],[241,52,216,50],[241,53,216,51,"get"],[241,56,216,54],[241,57,216,55,"queryToken"],[241,67,216,65],[241,68,216,66],[242,14,217,10,"currentListeners2"],[242,31,217,27],[242,32,217,28,"delete"],[242,38,217,34],[242,39,217,35,"callback"],[242,47,217,43],[242,48,217,44],[243,14,218,10],[243,18,218,14,"currentListeners2"],[243,35,218,31],[243,36,218,32,"size"],[243,40,218,36],[243,45,218,41],[243,46,218,42],[243,48,218,44],[244,16,219,12],[244,20,219,16],[244,21,219,17,"listeners"],[244,30,219,26],[244,31,219,27,"delete"],[244,37,219,33],[244,38,219,34,"queryToken"],[244,48,219,44],[244,49,219,45],[245,14,220,10],[246,14,221,10,"unsubscribe"],[246,25,221,21],[246,26,221,22],[246,27,221,23],[247,12,222,8],[247,13,222,9],[248,10,223,6],[248,11,223,7],[249,10,224,6,"localQueryResult"],[249,26,224,22],[249,28,224,24,"localQueryResult"],[249,29,224,24],[249,34,224,30],[250,12,225,8],[250,16,225,12],[250,20,225,16],[250,21,225,17,"cachedSync"],[250,31,225,27],[250,33,225,29],[251,14,226,10],[251,21,226,17],[251,25,226,21],[251,26,226,22,"cachedSync"],[251,36,226,32],[251,37,226,33,"localQueryResult"],[251,53,226,49],[251,54,226,50,"name"],[251,58,226,54],[251,60,226,56,"args"],[251,64,226,60],[251,65,226,61],[252,12,227,8],[253,12,228,8],[253,19,228,15],[253,24,228,20],[253,25,228,21],[254,10,229,6],[254,11,229,7],[255,10,230,6,"localQueryLogs"],[255,24,230,20],[255,26,230,22,"localQueryLogs"],[255,27,230,22],[255,32,230,28],[256,12,231,8],[256,16,231,12],[256,20,231,16],[256,21,231,17,"cachedSync"],[256,31,231,27],[256,33,231,29],[257,14,232,10],[257,21,232,17],[257,25,232,21],[257,26,232,22,"cachedSync"],[257,36,232,32],[257,37,232,33,"localQueryLogs"],[257,51,232,47],[257,52,232,48,"name"],[257,56,232,52],[257,58,232,54,"args"],[257,62,232,58],[257,63,232,59],[258,12,233,8],[259,12,234,8],[259,19,234,15],[259,24,234,20],[259,25,234,21],[260,10,235,6],[260,11,235,7],[261,10,236,6,"journal"],[261,17,236,13],[261,19,236,15,"journal"],[261,20,236,15],[261,25,236,21],[262,12,237,8],[262,16,237,12],[262,20,237,16],[262,21,237,17,"cachedSync"],[262,31,237,27],[262,33,237,29],[263,14,238,10],[263,21,238,17],[263,25,238,21],[263,26,238,22,"cachedSync"],[263,36,238,32],[263,37,238,33,"queryJournal"],[263,49,238,45],[263,50,238,46,"name"],[263,54,238,50],[263,56,238,52,"args"],[263,60,238,56],[263,61,238,57],[264,12,239,8],[265,12,240,8],[265,19,240,15],[265,24,240,20],[265,25,240,21],[266,10,241,6],[267,8,242,4],[267,9,242,5],[268,6,243,2],[269,6,244,2],[270,6,245,2],[271,6,246,2],[272,6,247,2],[273,0,248,0],[274,0,249,0],[275,0,250,0],[276,0,251,0],[277,0,252,0],[278,0,253,0],[279,0,254,0],[280,0,255,0],[281,0,256,0],[282,0,257,0],[283,0,258,0],[284,4,247,2],[285,6,247,2,"key"],[285,9,247,2],[286,6,247,2,"value"],[286,11,247,2],[286,13,259,2],[286,22,259,2,"prewarmQuery"],[286,34,259,14,"prewarmQuery"],[286,35,259,15,"queryOptions"],[286,47,259,27],[286,49,259,29],[287,8,260,4],[287,12,260,10,"extendSubscriptionFor"],[287,33,260,31],[287,36,260,34,"queryOptions"],[287,48,260,46],[287,49,260,47,"extendSubscriptionFor"],[287,70,260,68],[287,74,260,72,"DEFAULT_EXTEND_SUBSCRIPTION_FOR"],[287,105,260,103],[288,8,261,4],[288,12,261,10,"watch"],[288,17,261,15],[288,20,261,18],[288,24,261,22],[288,25,261,23,"watchQuery"],[288,35,261,33],[288,36,261,34,"queryOptions"],[288,48,261,46],[288,49,261,47,"query"],[288,54,261,52],[288,56,261,54,"queryOptions"],[288,68,261,66],[288,69,261,67,"args"],[288,73,261,71],[288,77,261,75],[288,78,261,76],[288,79,261,77],[288,80,261,78],[289,8,262,4],[289,12,262,10,"unsubscribe"],[289,23,262,21],[289,26,262,24,"watch"],[289,31,262,29],[289,32,262,30,"onUpdate"],[289,40,262,38],[289,41,262,39],[289,47,262,45],[289,48,263,4],[289,49,263,5],[289,50,263,6],[290,8,264,4,"setTimeout"],[290,18,264,14],[290,19,264,15,"unsubscribe"],[290,30,264,26],[290,32,264,28,"extendSubscriptionFor"],[290,53,264,49],[290,54,264,50],[291,6,265,2],[292,6,266,2],[293,0,267,0],[294,0,268,0],[295,0,269,0],[296,0,270,0],[297,0,271,0],[298,0,272,0],[299,0,273,0],[300,0,274,0],[301,0,275,0],[302,4,266,2],[303,6,266,2,"key"],[303,9,266,2],[304,6,266,2,"value"],[304,11,266,2],[304,13,276,2],[304,22,276,2,"mutation"],[304,30,276,10,"mutation"],[304,31,276,11,"mutation"],[304,40,276,19],[304,42,276,40],[305,8,276,40],[305,17,276,40,"_len2"],[305,22,276,40],[305,25,276,40,"arguments"],[305,34,276,40],[305,35,276,40,"length"],[305,41,276,40],[305,43,276,24,"argsAndOptions"],[305,57,276,38],[305,64,276,38,"Array"],[305,69,276,38],[305,70,276,38,"_len2"],[305,75,276,38],[305,82,276,38,"_len2"],[305,87,276,38],[305,98,276,38,"_key2"],[305,103,276,38],[305,109,276,38,"_key2"],[305,114,276,38],[305,117,276,38,"_len2"],[305,122,276,38],[305,124,276,38,"_key2"],[305,129,276,38],[306,10,276,24,"argsAndOptions"],[306,24,276,38],[306,25,276,38,"_key2"],[306,30,276,38],[306,38,276,38,"arguments"],[306,47,276,38],[306,48,276,38,"_key2"],[306,53,276,38],[307,8,276,38],[308,8,277,4],[308,12,277,11,"args"],[308,16,277,15],[308,19,277,28,"argsAndOptions"],[308,33,277,42],[309,10,277,17,"options"],[309,17,277,24],[309,20,277,28,"argsAndOptions"],[309,34,277,42],[310,8,278,4],[310,12,278,10,"name"],[310,16,278,14],[310,19,278,17],[310,20,278,18],[310,21,278,19],[310,23,278,21,"import_api"],[310,33,278,31],[310,34,278,32,"getFunctionName"],[310,49,278,47],[310,51,278,49,"mutation"],[310,60,278,57],[310,61,278,58],[311,8,279,4],[311,15,279,11],[311,19,279,15],[311,20,279,16,"sync"],[311,24,279,20],[311,25,279,21,"mutation"],[311,33,279,29],[311,34,279,30,"name"],[311,38,279,34],[311,40,279,36,"args"],[311,44,279,40],[311,46,279,42,"options"],[311,53,279,49],[311,54,279,50],[312,6,280,2],[313,6,281,2],[314,0,282,0],[315,0,283,0],[316,0,284,0],[317,0,285,0],[318,0,286,0],[319,0,287,0],[320,0,288,0],[321,0,289,0],[322,4,281,2],[323,6,281,2,"key"],[323,9,281,2],[324,6,281,2,"value"],[324,11,281,2],[324,13,290,2],[324,22,290,2,"action"],[324,28,290,8,"action"],[324,29,290,9,"action"],[324,36,290,15],[324,38,290,26],[325,8,291,4],[325,12,291,10,"name"],[325,16,291,14],[325,19,291,17],[325,20,291,18],[325,21,291,19],[325,23,291,21,"import_api"],[325,33,291,31],[325,34,291,32,"getFunctionName"],[325,49,291,47],[325,51,291,49,"action"],[325,58,291,55],[325,59,291,56],[326,8,291,57],[326,17,291,57,"_len3"],[326,22,291,57],[326,25,291,57,"arguments"],[326,34,291,57],[326,35,291,57,"length"],[326,41,291,57],[326,43,290,20,"args"],[326,47,290,24],[326,54,290,24,"Array"],[326,59,290,24],[326,60,290,24,"_len3"],[326,65,290,24],[326,72,290,24,"_len3"],[326,77,290,24],[326,88,290,24,"_key3"],[326,93,290,24],[326,99,290,24,"_key3"],[326,104,290,24],[326,107,290,24,"_len3"],[326,112,290,24],[326,114,290,24,"_key3"],[326,119,290,24],[327,10,290,20,"args"],[327,14,290,24],[327,15,290,24,"_key3"],[327,20,290,24],[327,28,290,24,"arguments"],[327,37,290,24],[327,38,290,24,"_key3"],[327,43,290,24],[328,8,290,24],[329,8,292,4],[329,15,292,11],[329,19,292,15],[329,20,292,16,"sync"],[329,24,292,20],[329,25,292,21,"action"],[329,31,292,27],[329,32,292,28,"name"],[329,36,292,32],[329,38,292,34],[329,41,292,37,"args"],[329,45,292,41],[329,46,292,42],[330,6,293,2],[331,6,294,2],[332,0,295,0],[333,0,296,0],[334,0,297,0],[335,0,298,0],[336,0,299,0],[337,0,300,0],[338,0,301,0],[339,0,302,0],[340,0,303,0],[341,0,304,0],[342,0,305,0],[343,4,294,2],[344,6,294,2,"key"],[344,9,294,2],[345,6,294,2,"value"],[345,11,294,2],[345,13,306,2],[345,22,306,2,"query"],[345,27,306,7,"query"],[345,28,306,8,"query"],[345,34,306,13],[345,36,306,24],[346,8,306,24],[346,17,306,24,"_len4"],[346,22,306,24],[346,25,306,24,"arguments"],[346,34,306,24],[346,35,306,24,"length"],[346,41,306,24],[346,43,306,18,"args"],[346,47,306,22],[346,54,306,22,"Array"],[346,59,306,22],[346,60,306,22,"_len4"],[346,65,306,22],[346,72,306,22,"_len4"],[346,77,306,22],[346,88,306,22,"_key4"],[346,93,306,22],[346,99,306,22,"_key4"],[346,104,306,22],[346,107,306,22,"_len4"],[346,112,306,22],[346,114,306,22,"_key4"],[346,119,306,22],[347,10,306,18,"args"],[347,14,306,22],[347,15,306,22,"_key4"],[347,20,306,22],[347,28,306,22,"arguments"],[347,37,306,22],[347,38,306,22,"_key4"],[347,43,306,22],[348,8,306,22],[349,8,307,4],[349,12,307,10,"watch"],[349,17,307,15],[349,20,307,18],[349,24,307,22],[349,25,307,23,"watchQuery"],[349,35,307,33],[349,36,307,34,"query"],[349,42,307,39],[349,44,307,41],[349,47,307,44,"args"],[349,51,307,48],[349,52,307,49],[350,8,308,4],[350,12,308,10,"existingResult"],[350,26,308,24],[350,29,308,27,"watch"],[350,34,308,32],[350,35,308,33,"localQueryResult"],[350,51,308,49],[350,52,308,50],[350,53,308,51],[351,8,309,4],[351,12,309,8,"existingResult"],[351,26,309,22],[351,31,309,27],[351,36,309,32],[351,37,309,33],[351,39,309,35],[352,10,310,6],[352,17,310,13,"Promise"],[352,24,310,20],[352,25,310,21,"resolve"],[352,32,310,28],[352,33,310,29,"existingResult"],[352,47,310,43],[352,48,310,44],[353,8,311,4],[354,8,312,4],[354,15,312,11],[354,19,312,15,"Promise"],[354,26,312,22],[354,27,312,23],[354,28,312,24,"resolve"],[354,35,312,31],[354,37,312,33,"reject"],[354,43,312,39],[354,48,312,44],[355,10,313,6],[355,14,313,12,"unsubscribe"],[355,25,313,23],[355,28,313,26,"watch"],[355,33,313,31],[355,34,313,32,"onUpdate"],[355,42,313,40],[355,43,313,41],[355,49,313,47],[356,12,314,8,"unsubscribe"],[356,23,314,19],[356,24,314,20],[356,25,314,21],[357,12,315,8],[357,16,315,12],[358,14,316,10,"resolve"],[358,21,316,17],[358,22,316,18,"watch"],[358,27,316,23],[358,28,316,24,"localQueryResult"],[358,44,316,40],[358,45,316,41],[358,46,316,42],[358,47,316,43],[359,12,317,8],[359,13,317,9],[359,14,317,10],[359,21,317,17,"e"],[359,22,317,18],[359,24,317,20],[360,14,318,10,"reject"],[360,20,318,16],[360,21,318,17,"e"],[360,22,318,18],[360,23,318,19],[361,12,319,8],[362,10,320,6],[362,11,320,7],[362,12,320,8],[363,8,321,4],[363,9,321,5],[363,10,321,6],[364,6,322,2],[365,6,323,2],[366,0,324,0],[367,0,325,0],[368,0,326,0],[369,0,327,0],[370,0,328,0],[371,4,323,2],[372,6,323,2,"key"],[372,9,323,2],[373,6,323,2,"value"],[373,11,323,2],[373,13,329,2],[373,22,329,2,"connectionState"],[373,37,329,17,"connectionState"],[373,38,329,17],[373,40,329,20],[374,8,330,4],[374,15,330,11],[374,19,330,15],[374,20,330,16,"sync"],[374,24,330,20],[374,25,330,21,"connectionState"],[374,40,330,36],[374,41,330,37],[374,42,330,38],[375,6,331,2],[376,6,332,2],[377,0,333,0],[378,0,334,0],[379,0,335,0],[380,0,336,0],[381,0,337,0],[382,0,338,0],[383,0,339,0],[384,0,340,0],[385,0,341,0],[386,0,342,0],[387,0,343,0],[388,4,332,2],[389,6,332,2,"key"],[389,9,332,2],[390,6,332,2,"value"],[390,11,332,2],[390,13,344,2],[390,22,344,2,"subscribeToConnectionState"],[390,48,344,28,"subscribeToConnectionState"],[390,49,344,29,"cb"],[390,51,344,31],[390,53,344,33],[391,8,345,4],[391,15,345,11],[391,19,345,15],[391,20,345,16,"sync"],[391,24,345,20],[391,25,345,21,"subscribeToConnectionState"],[391,51,345,47],[391,52,345,48,"cb"],[391,54,345,50],[391,55,345,51],[392,6,346,2],[393,6,347,2],[394,0,348,0],[395,0,349,0],[396,0,350,0],[397,0,351,0],[398,4,347,2],[399,6,347,2,"key"],[399,9,347,2],[400,6,347,2,"get"],[400,9,347,2],[400,11,352,2],[400,20,352,2,"get"],[400,21,352,2],[400,23,352,15],[401,8,353,4],[401,15,353,11],[401,19,353,15],[401,20,353,16,"_logger"],[401,27,353,23],[402,6,354,2],[403,6,355,2],[404,0,356,0],[405,0,357,0],[406,0,358,0],[407,0,359,0],[408,0,360,0],[409,0,361,0],[410,0,362,0],[411,4,355,2],[412,6,355,2,"key"],[412,9,355,2],[413,6,355,2,"value"],[413,11,355,2],[414,8,355,2],[414,12,355,2,"_close"],[414,18,355,2],[414,21,355,2,"_asyncToGenerator"],[414,38,355,2],[414,39,363,2],[414,52,363,16],[415,10,364,4],[415,14,364,8],[415,15,364,9,"closed"],[415,21,364,15],[415,24,364,18],[415,28,364,22],[416,10,365,4],[416,14,365,8],[416,15,365,9,"listeners"],[416,24,365,18],[416,27,365,21],[416,42,365,37],[416,46,365,41,"Map"],[416,49,365,44],[416,50,365,45],[416,51,365,46],[417,10,366,4],[417,14,366,8],[417,18,366,12],[417,19,366,13,"cachedSync"],[417,29,366,23],[417,31,366,25],[418,12,367,6],[418,16,367,12,"sync"],[418,20,367,16],[418,23,367,19],[418,27,367,23],[418,28,367,24,"cachedSync"],[418,38,367,34],[419,12,368,6],[419,16,368,10],[419,17,368,11,"cachedSync"],[419,27,368,21],[419,30,368,24],[419,35,368,29],[419,36,368,30],[420,12,369,6],[420,18,369,12,"sync"],[420,22,369,16],[420,23,369,17,"close"],[420,28,369,22],[420,29,369,23],[420,30,369,24],[421,10,370,4],[422,8,371,2],[422,9,371,3],[423,8,371,3],[423,17,363,8,"close"],[423,22,363,13,"close"],[423,23,363,13],[424,10,363,13],[424,17,363,13,"_close"],[424,23,363,13],[424,24,363,13,"apply"],[424,29,363,13],[424,36,363,13,"arguments"],[424,45,363,13],[425,8,363,13],[426,8,363,13],[426,15,363,8,"close"],[426,20,363,13],[427,6,363,13],[428,4,363,13],[429,6,363,13,"key"],[429,9,363,13],[430,6,363,13,"value"],[430,11,363,13],[430,13,372,2],[430,22,372,2,"transition"],[430,32,372,12,"transition"],[430,33,372,13,"updatedQueries"],[430,47,372,27],[430,49,372,29],[431,8,373,4],[431,13,373,9],[431,17,373,15,"queryToken"],[431,27,373,25],[431,31,373,29,"updatedQueries"],[431,45,373,43],[431,47,373,45],[432,10,374,6],[432,14,374,12,"callbacks"],[432,23,374,21],[432,26,374,24],[432,30,374,28],[432,31,374,29,"listeners"],[432,40,374,38],[432,41,374,39,"get"],[432,44,374,42],[432,45,374,43,"queryToken"],[432,55,374,53],[432,56,374,54],[433,10,375,6],[433,14,375,10,"callbacks"],[433,23,375,19],[433,25,375,21],[434,12,376,8],[434,17,376,13],[434,21,376,19,"callback"],[434,29,376,27],[434,33,376,31,"callbacks"],[434,42,376,40],[434,44,376,42],[435,14,377,10,"callback"],[435,22,377,18],[435,23,377,19],[435,24,377,20],[436,12,378,8],[437,10,379,6],[438,8,380,4],[439,6,381,2],[440,4,381,3],[441,2,381,3],[442,2,383,0],[442,6,383,6,"ConvexContext"],[442,19,383,19],[442,22,383,22,"import_react"],[442,34,383,34],[442,35,383,35,"default"],[442,42,383,42],[442,43,383,43,"createContext"],[442,56,383,56],[442,57,384,2],[442,62,384,7],[443,2,385,2],[444,2,386,0],[444,3,386,1],[445,2,387,0],[445,11,387,9,"useConvex"],[445,20,387,18,"useConvex"],[445,21,387,18],[445,23,387,21],[446,4,388,2],[446,11,388,9],[446,12,388,10],[446,13,388,11],[446,15,388,13,"import_react"],[446,27,388,25],[446,28,388,26,"useContext"],[446,38,388,36],[446,40,388,38,"ConvexContext"],[446,53,388,51],[446,54,388,52],[447,2,389,0],[448,2,390,0],[448,6,390,6,"ConvexProvider"],[448,20,390,20],[448,23,390,23,"_ref"],[448,27,390,23],[448,31,390,49],[449,4,390,49],[449,8,390,26,"client"],[449,14,390,32],[449,17,390,32,"_ref"],[449,21,390,32],[449,22,390,26,"client"],[449,28,390,32],[450,6,390,34,"children"],[450,14,390,42],[450,17,390,42,"_ref"],[450,21,390,42],[450,22,390,34,"children"],[450,30,390,42],[451,4,391,2],[451,11,391,9,"import_react"],[451,23,391,21],[451,24,391,22,"default"],[451,31,391,29],[451,32,391,30,"createElement"],[451,45,391,43],[451,46,392,4,"ConvexContext"],[451,59,392,17],[451,60,392,18,"Provider"],[451,68,392,26],[451,70,393,4],[452,6,393,6,"value"],[452,11,393,11],[452,13,393,13,"client"],[453,4,393,20],[453,5,393,21],[453,7,394,4,"children"],[453,15,395,2],[453,16,395,3],[454,2,396,0],[454,3,396,1],[455,2,397,0],[455,11,397,9,"useQuery"],[455,19,397,17,"useQuery"],[455,20,397,18,"query"],[455,25,397,23],[455,27,397,34],[456,4,398,2],[456,8,398,8,"skip"],[456,12,398,12],[456,15,398,15],[456,16,398,15,"arguments"],[456,25,398,15],[456,26,398,15,"length"],[456,32,398,15],[456,40,398,15,"undefined"],[456,49,398,15],[456,52,398,15,"arguments"],[456,61,398,15],[456,70,398,27],[456,76,398,33],[457,4,399,2],[457,8,399,8,"argsObject"],[457,18,399,18],[457,21,399,21],[457,22,399,21,"arguments"],[457,31,399,21],[457,32,399,21,"length"],[457,38,399,21],[457,46,399,21,"undefined"],[457,55,399,21],[457,58,399,21,"arguments"],[457,67,399,21],[457,76,399,33],[457,82,399,39],[457,85,399,42],[457,86,399,43],[457,87,399,44],[457,90,399,47],[457,91,399,48],[457,92,399,49],[457,94,399,51,"import_common"],[457,107,399,64],[457,108,399,65,"parseArgs"],[457,117,399,74],[457,119,399,74,"arguments"],[457,128,399,74],[457,129,399,74,"length"],[457,135,399,74],[457,143,399,74,"undefined"],[457,152,399,74],[457,155,399,74,"arguments"],[457,164,399,74],[457,167,399,83],[457,168,399,84],[458,4,400,2],[458,8,400,8,"queryReference"],[458,22,400,22],[458,25,400,25],[458,32,400,32,"query"],[458,37,400,37],[458,42,400,42],[458,50,400,50],[458,53,400,53],[458,54,400,54],[458,55,400,55],[458,57,400,57,"import_api"],[458,67,400,67],[458,68,400,68,"makeFunctionReference"],[458,89,400,89],[458,91,400,91,"query"],[458,96,400,96],[458,97,400,97],[458,100,400,100,"query"],[458,105,400,105],[459,4,401,2],[459,8,401,8,"queryName"],[459,17,401,17],[459,20,401,20],[459,21,401,21],[459,22,401,22],[459,24,401,24,"import_api"],[459,34,401,34],[459,35,401,35,"getFunctionName"],[459,50,401,50],[459,52,401,52,"queryReference"],[459,66,401,66],[459,67,401,67],[460,4,402,2],[460,8,402,8,"queries"],[460,15,402,15],[460,18,402,18],[460,19,402,19],[460,20,402,20],[460,22,402,22,"import_react"],[460,34,402,34],[460,35,402,35,"useMemo"],[460,42,402,42],[460,44,403,4],[460,50,403,10,"skip"],[460,54,403,14],[460,57,403,17],[460,58,403,18],[460,59,403,19],[460,62,403,22],[461,6,403,24,"query"],[461,11,403,29],[461,13,403,31],[462,8,403,33,"query"],[462,13,403,38],[462,15,403,40,"queryReference"],[462,29,403,54],[463,8,403,56,"args"],[463,12,403,60],[463,14,403,62,"argsObject"],[464,6,403,73],[465,4,403,75],[465,5,403,76],[466,4,404,4],[467,4,405,4],[468,4,406,4],[469,4,407,4],[469,5,407,5,"JSON"],[469,9,407,9],[469,10,407,10,"stringify"],[469,19,407,19],[469,20,407,20],[469,21,407,21],[469,22,407,22],[469,24,407,24,"import_values"],[469,37,407,37],[469,38,407,38,"convexToJson"],[469,50,407,50],[469,52,407,52,"argsObject"],[469,62,407,62],[469,63,407,63],[469,64,407,64],[469,66,407,66,"queryName"],[469,75,407,75],[469,77,407,77,"skip"],[469,81,407,81],[469,82,408,2],[469,83,408,3],[470,4,409,2],[470,8,409,8,"results"],[470,15,409,15],[470,18,409,18],[470,19,409,19],[470,20,409,20],[470,22,409,22,"import_use_queries"],[470,40,409,40],[470,41,409,41,"useQueries"],[470,51,409,51],[470,53,409,53,"queries"],[470,60,409,60],[470,61,409,61],[471,4,410,2],[471,8,410,8,"result"],[471,14,410,14],[471,17,410,17,"results"],[471,24,410,24],[471,25,410,25],[471,32,410,32],[471,33,410,33],[472,4,411,2],[472,8,411,6,"result"],[472,14,411,12],[472,26,411,24,"Error"],[472,31,411,29],[472,33,411,31],[473,6,412,4],[473,12,412,10,"result"],[473,18,412,16],[474,4,413,2],[475,4,414,2],[475,11,414,9,"result"],[475,17,414,15],[476,2,415,0],[477,2,416,0],[477,11,416,9,"useMutation"],[477,22,416,20,"useMutation"],[477,23,416,21,"mutation"],[477,31,416,29],[477,33,416,31],[478,4,417,2],[478,8,417,8,"mutationReference"],[478,25,417,25],[478,28,417,28],[478,35,417,35,"mutation"],[478,43,417,43],[478,48,417,48],[478,56,417,56],[478,59,417,59],[478,60,417,60],[478,61,417,61],[478,63,417,63,"import_api"],[478,73,417,73],[478,74,417,74,"makeFunctionReference"],[478,95,417,95],[478,97,417,97,"mutation"],[478,105,417,105],[478,106,417,106],[478,109,417,109,"mutation"],[478,117,417,117],[479,4,418,2],[479,8,418,8,"convex"],[479,14,418,14],[479,17,418,17],[479,18,418,18],[479,19,418,19],[479,21,418,21,"import_react"],[479,33,418,33],[479,34,418,34,"useContext"],[479,44,418,44],[479,46,418,46,"ConvexContext"],[479,59,418,59],[479,60,418,60],[480,4,419,2],[480,8,419,6,"convex"],[480,14,419,12],[480,19,419,17],[480,24,419,22],[480,25,419,23],[480,27,419,25],[481,6,420,4],[481,12,420,10],[481,16,420,14,"Error"],[481,21,420,19],[481,22,421,6],[481,223,422,4],[481,224,422,5],[482,4,423,2],[483,4,424,2],[483,11,424,9],[483,12,424,10],[483,13,424,11],[483,15,424,13,"import_react"],[483,27,424,25],[483,28,424,26,"useMemo"],[483,35,424,33],[483,37,425,4],[483,43,425,10,"createMutation"],[483,57,425,24],[483,58,425,25,"mutationReference"],[483,75,425,42],[483,77,425,44,"convex"],[483,83,425,50],[483,84,425,51],[484,4,426,4],[485,4,427,4],[485,5,427,5,"convex"],[485,11,427,11],[485,13,427,13],[485,14,427,14],[485,15,427,15],[485,17,427,17,"import_api"],[485,27,427,27],[485,28,427,28,"getFunctionName"],[485,43,427,43],[485,45,427,45,"mutationReference"],[485,62,427,62],[485,63,427,63],[485,64,428,2],[485,65,428,3],[486,2,429,0],[487,2,430,0],[487,11,430,9,"useAction"],[487,20,430,18,"useAction"],[487,21,430,19,"action"],[487,27,430,25],[487,29,430,27],[488,4,431,2],[488,8,431,8,"convex"],[488,14,431,14],[488,17,431,17],[488,18,431,18],[488,19,431,19],[488,21,431,21,"import_react"],[488,33,431,33],[488,34,431,34,"useContext"],[488,44,431,44],[488,46,431,46,"ConvexContext"],[488,59,431,59],[488,60,431,60],[489,4,432,2],[489,8,432,8,"actionReference"],[489,23,432,23],[489,26,432,26],[489,33,432,33,"action"],[489,39,432,39],[489,44,432,44],[489,52,432,52],[489,55,432,55],[489,56,432,56],[489,57,432,57],[489,59,432,59,"import_api"],[489,69,432,69],[489,70,432,70,"makeFunctionReference"],[489,91,432,91],[489,93,432,93,"action"],[489,99,432,99],[489,100,432,100],[489,103,432,103,"action"],[489,109,432,109],[490,4,433,2],[490,8,433,6,"convex"],[490,14,433,12],[490,19,433,17],[490,24,433,22],[490,25,433,23],[490,27,433,25],[491,6,434,4],[491,12,434,10],[491,16,434,14,"Error"],[491,21,434,19],[491,22,435,6],[491,221,436,4],[491,222,436,5],[492,4,437,2],[493,4,438,2],[493,11,438,9],[493,12,438,10],[493,13,438,11],[493,15,438,13,"import_react"],[493,27,438,25],[493,28,438,26,"useMemo"],[493,35,438,33],[493,37,439,4],[493,43,439,10,"createAction"],[493,55,439,22],[493,56,439,23,"actionReference"],[493,71,439,38],[493,73,439,40,"convex"],[493,79,439,46],[493,80,439,47],[494,4,440,4],[495,4,441,4],[495,5,441,5,"convex"],[495,11,441,11],[495,13,441,13],[495,14,441,14],[495,15,441,15],[495,17,441,17,"import_api"],[495,27,441,27],[495,28,441,28,"getFunctionName"],[495,43,441,43],[495,45,441,45,"actionReference"],[495,60,441,60],[495,61,441,61],[495,62,442,2],[495,63,442,3],[496,2,443,0],[497,2,444,0],[497,11,444,9,"useConvexConnectionState"],[497,35,444,33,"useConvexConnectionState"],[497,36,444,33],[497,38,444,36],[498,4,445,2],[498,8,445,8,"convex"],[498,14,445,14],[498,17,445,17],[498,18,445,18],[498,19,445,19],[498,21,445,21,"import_react"],[498,33,445,33],[498,34,445,34,"useContext"],[498,44,445,44],[498,46,445,46,"ConvexContext"],[498,59,445,59],[498,60,445,60],[499,4,446,2],[499,8,446,6,"convex"],[499,14,446,12],[499,19,446,17],[499,24,446,22],[499,25,446,23],[499,27,446,25],[500,6,447,4],[500,12,447,10],[500,16,447,14,"Error"],[500,21,447,19],[500,22,448,6],[500,236,449,4],[500,237,449,5],[501,4,450,2],[502,4,451,2],[502,8,451,8,"getCurrentValue"],[502,23,451,23],[502,26,451,26],[502,27,451,27],[502,28,451,28],[502,30,451,30,"import_react"],[502,42,451,42],[502,43,451,43,"useCallback"],[502,54,451,54],[502,56,451,56],[502,62,451,62],[503,6,452,4],[503,13,452,11,"convex"],[503,19,452,17],[503,20,452,18,"connectionState"],[503,35,452,33],[503,36,452,34],[503,37,452,35],[504,4,453,2],[504,5,453,3],[504,7,453,5],[504,8,453,6,"convex"],[504,14,453,12],[504,15,453,13],[504,16,453,14],[505,4,454,2],[505,8,454,8,"subscribe"],[505,17,454,17],[505,20,454,20],[505,21,454,21],[505,22,454,22],[505,24,454,24,"import_react"],[505,36,454,36],[505,37,454,37,"useCallback"],[505,48,454,48],[505,50,455,5,"callback"],[505,58,455,13],[505,62,455,18],[506,6,456,6],[506,13,456,13,"convex"],[506,19,456,19],[506,20,456,20,"subscribeToConnectionState"],[506,46,456,46],[506,47,456,47],[506,53,456,53],[507,8,457,8,"callback"],[507,16,457,16],[507,17,457,17],[507,18,457,18],[508,6,458,6],[508,7,458,7],[508,8,458,8],[509,4,459,4],[509,5,459,5],[509,7,460,4],[509,8,460,5,"convex"],[509,14,460,11],[509,15,461,2],[509,16,461,3],[510,4,462,2],[510,11,462,9],[510,12,462,10],[510,13,462,11],[510,15,462,13,"import_use_subscription"],[510,38,462,36],[510,39,462,37,"useSubscription"],[510,54,462,52],[510,56,462,54],[511,6,462,56,"getCurrentValue"],[511,21,462,71],[512,6,462,73,"subscribe"],[513,4,462,83],[513,5,462,84],[513,6,462,85],[514,2,463,0],[515,2,464,0],[515,11,464,9,"assertNotAccidentalArgument"],[515,38,464,36,"assertNotAccidentalArgument"],[515,39,464,37,"value"],[515,44,464,42],[515,46,464,44],[516,4,465,2],[516,8,465,6],[516,15,465,13,"value"],[516,20,465,18],[516,25,465,23],[516,33,465,31],[516,37,465,35,"value"],[516,42,465,40],[516,47,465,45],[516,51,465,49],[516,55,465,53],[516,64,465,62],[516,68,465,66,"value"],[516,73,465,71],[516,77,465,75],[516,86,465,84],[516,90,465,88,"value"],[516,95,465,93],[516,99,465,97],[516,119,465,117],[516,123,465,121,"value"],[516,128,465,126],[516,130,465,128],[517,6,466,4],[517,12,466,10],[517,16,466,14,"Error"],[517,21,466,19],[517,22,467,6],[517,384,468,4],[517,385,468,5],[518,4,469,2],[519,2,470,0],[520,0,470,1],[520,3]],"functionMap":{"names":["<global>","__defNormalProp","__export","__copyProps","__defProp$argument_2.get","__toESM","__toCommonJS","__publicField","__export$argument_1.ConvexProvider","__export$argument_1.ConvexReactClient","__export$argument_1.createMutation","__export$argument_1.useAction","__export$argument_1.useConvex","__export$argument_1.useConvexConnectionState","__export$argument_1.useMutation","__export$argument_1.useQuery","createMutation","mutation","withOptimisticUpdate","createAction","<anonymous>","ConvexReactClient","ConvexReactClient#constructor","ConvexReactClient#get__url","ConvexReactClient#get__sync","import_browser.BaseConvexClient$argument_1","ConvexReactClient#setAuth","ConvexReactClient#clearAuth","ConvexReactClient#setAdminAuth","ConvexReactClient#watchQuery","onUpdate","localQueryResult","localQueryLogs","journal","ConvexReactClient#prewarmQuery","watch.onUpdate$argument_0","ConvexReactClient#mutation","ConvexReactClient#action","ConvexReactClient#query","Promise$argument_0","ConvexReactClient#connectionState","ConvexReactClient#subscribeToConnectionState","ConvexReactClient#get__logger","ConvexReactClient#close","ConvexReactClient#transition","useConvex","ConvexProvider","useQuery","useMutation","useAction","useConvexConnectionState","convex.subscribeToConnectionState$argument_0","assertNotAccidentalArgument"],"mappings":"AAA;sBCO,yID;eEC;CFG;kBGC;kCCI,eD;CHG;cKC;ELO;mBMC,uEN;oBOC,0FP;kBQG,oBR;qBSC,uBT;kBUC,oBV;aWC,eX;aYC,eZ;4BaC,8Bb;ecC,iBd;YeC,cf;AgBe;ECC;GDK;kCEC;GFS;ChBE;AmBC;SCC;GDE;CnBC;AqBC;ECM;GD0B;EEO;GFE;EGO;MCS,mDD;GHO;EKS;mBNQ;OMC;GLE;EMI;GNE;EOI;GPS;EQc;gBCI;eVY;SUU;ODC;wBEC;OFK;sBGC;OHK;eIC;OJK;GRE;EagB;uCCG;KDC;GbE;EeW;GfI;EgBU;GhBG;EiBa;uBCM;yCJC;OIO;KDC;GjBC;EmBO;GnBE;EoBa;GpBE;EqBM;GrBE;EsBS;GtBQ;EuBC;GvBS;CrBC;A6CK;C7CE;uB8CC;C9CM;A+CC;I3BM,wE2B;C/CY;AgDC;I5BS,+C4B;ChDI;AiDC;I7BS,2C6B;CjDI;AkDC;wD9BO;G8BE;I9BE;+C+BC;O/BE;K8BC;ClDI;AoDC;CpDM"},"hasCjsExports":true},"type":"js/module"}]}