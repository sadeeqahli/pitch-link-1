{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./protocol.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":22,"index":1276},"end":{"line":26,"column":46,"index":1300}}],"key":"Jt0l2k5NEUyX5G9yYiE5SJQTjGQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value\n  }) : obj[key] = value;\n  var __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: true\n    });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      var _loop = function (key) {\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var key of __getOwnPropNames(from)) {\n        _loop(key);\n      }\n    }\n    return to;\n  };\n  var __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n  var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  var web_socket_manager_exports = {};\n  __export(web_socket_manager_exports, {\n    WebSocketManager: () => WebSocketManager\n  });\n  module.exports = __toCommonJS(web_socket_manager_exports);\n  var import_protocol = require(_dependencyMap[2], \"./protocol.js\");\n  var CLOSE_NORMAL = 1e3;\n  var CLOSE_GOING_AWAY = 1001;\n  var CLOSE_NO_STATUS = 1005;\n  var CLOSE_NOT_FOUND = 4040;\n  var firstTime;\n  function monotonicMillis() {\n    if (firstTime === void 0) {\n      firstTime = Date.now();\n    }\n    if (typeof performance === \"undefined\" || !performance.now) {\n      return Date.now();\n    }\n    return Math.round(firstTime + performance.now());\n  }\n  function prettyNow() {\n    return `t=${Math.round((monotonicMillis() - firstTime) / 100) / 10}s`;\n  }\n  var serverDisconnectErrors = {\n    // A known error, e.g. during a restart or push\n    InternalServerError: {\n      timeout: 1e3\n    },\n    // ErrorMetadata::overloaded() messages that we realy should back off\n    SubscriptionsWorkerFullError: {\n      timeout: 3e3\n    },\n    TooManyConcurrentRequests: {\n      timeout: 3e3\n    },\n    CommitterFullError: {\n      timeout: 3e3\n    },\n    AwsTooManyRequestsException: {\n      timeout: 3e3\n    },\n    ExecuteFullError: {\n      timeout: 3e3\n    },\n    SystemTimeoutError: {\n      timeout: 3e3\n    },\n    ExpiredInQueue: {\n      timeout: 3e3\n    },\n    // ErrorMetadata::feature_temporarily_unavailable() that typically indicate a deploy just happened\n    VectorIndexesUnavailable: {\n      timeout: 1e3\n    },\n    SearchIndexesUnavailable: {\n      timeout: 1e3\n    },\n    TableSummariesUnavailable: {\n      timeout: 1e3\n    },\n    // More ErrorMetadata::overloaded()\n    VectorIndexTooLarge: {\n      timeout: 3e3\n    },\n    SearchIndexTooLarge: {\n      timeout: 3e3\n    },\n    TooManyWritesInTimePeriod: {\n      timeout: 3e3\n    }\n  };\n  function classifyDisconnectError(s) {\n    if (s === void 0) return \"Unknown\";\n    for (var prefix of Object.keys(serverDisconnectErrors)) {\n      if (s.startsWith(prefix)) {\n        return prefix;\n      }\n    }\n    return \"Unknown\";\n  }\n  var WebSocketManager = /*#__PURE__*/function () {\n    function WebSocketManager(uri, callbacks, webSocketConstructor, logger, markConnectionStateDirty, debug) {\n      _classCallCheck(this, WebSocketManager);\n      this.markConnectionStateDirty = markConnectionStateDirty;\n      this.debug = debug;\n      __publicField(this, \"socket\");\n      __publicField(this, \"connectionCount\");\n      __publicField(this, \"_hasEverConnected\", false);\n      __publicField(this, \"lastCloseReason\");\n      /** Upon HTTPS/WSS failure, the first jittered backoff duration, in ms. */\n      __publicField(this, \"defaultInitialBackoff\");\n      /** We backoff exponentially, but we need to cap that--this is the jittered max. */\n      __publicField(this, \"maxBackoff\");\n      /** How many times have we failed consecutively? */\n      __publicField(this, \"retries\");\n      /** How long before lack of server response causes us to initiate a reconnect,\n       * in ms */\n      __publicField(this, \"serverInactivityThreshold\");\n      __publicField(this, \"reconnectDueToServerInactivityTimeout\");\n      __publicField(this, \"uri\");\n      __publicField(this, \"onOpen\");\n      __publicField(this, \"onResume\");\n      __publicField(this, \"onMessage\");\n      __publicField(this, \"webSocketConstructor\");\n      __publicField(this, \"logger\");\n      __publicField(this, \"onServerDisconnectError\");\n      this.webSocketConstructor = webSocketConstructor;\n      this.socket = {\n        state: \"disconnected\"\n      };\n      this.connectionCount = 0;\n      this.lastCloseReason = \"InitialConnect\";\n      this.defaultInitialBackoff = 1e3;\n      this.maxBackoff = 16e3;\n      this.retries = 0;\n      this.serverInactivityThreshold = 6e4;\n      this.reconnectDueToServerInactivityTimeout = null;\n      this.uri = uri;\n      this.onOpen = callbacks.onOpen;\n      this.onResume = callbacks.onResume;\n      this.onMessage = callbacks.onMessage;\n      this.onServerDisconnectError = callbacks.onServerDisconnectError;\n      this.logger = logger;\n      this.connect();\n    }\n    return _createClass(WebSocketManager, [{\n      key: \"setSocketState\",\n      value: function setSocketState(state) {\n        this.socket = state;\n        this._logVerbose(`socket state changed: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}`);\n        this.markConnectionStateDirty();\n      }\n    }, {\n      key: \"connect\",\n      value: function connect() {\n        if (this.socket.state === \"terminated\") {\n          return;\n        }\n        if (this.socket.state !== \"disconnected\" && this.socket.state !== \"stopped\") {\n          throw new Error(\"Didn't start connection from disconnected state: \" + this.socket.state);\n        }\n        var ws = new this.webSocketConstructor(this.uri);\n        this._logVerbose(\"constructed WebSocket\");\n        this.setSocketState({\n          state: \"connecting\",\n          ws,\n          paused: \"no\"\n        });\n        this.resetServerInactivityTimeout();\n        ws.onopen = () => {\n          this.logger.logVerbose(\"begin ws.onopen\");\n          if (this.socket.state !== \"connecting\") {\n            throw new Error(\"onopen called with socket not in connecting state\");\n          }\n          this.setSocketState({\n            state: \"ready\",\n            ws,\n            paused: this.socket.paused === \"yes\" ? \"uninitialized\" : \"no\"\n          });\n          this.resetServerInactivityTimeout();\n          if (this.socket.paused === \"no\") {\n            this._hasEverConnected = true;\n            this.onOpen({\n              connectionCount: this.connectionCount,\n              lastCloseReason: this.lastCloseReason,\n              clientTs: monotonicMillis()\n            });\n          }\n          if (this.lastCloseReason !== \"InitialConnect\") {\n            if (this.lastCloseReason) {\n              this.logger.log(\"WebSocket reconnected at\", prettyNow(), \"after disconnect due to\", this.lastCloseReason);\n            } else {\n              this.logger.log(\"WebSocket reconnected at\", prettyNow());\n            }\n          }\n          this.connectionCount += 1;\n          this.lastCloseReason = null;\n        };\n        ws.onerror = error => {\n          var message = error.message;\n          if (message) {\n            this.logger.log(`WebSocket error message: ${message}`);\n          }\n        };\n        ws.onmessage = message => {\n          this.resetServerInactivityTimeout();\n          var messageLength = message.data.length;\n          var serverMessage = (0, import_protocol.parseServerMessage)(JSON.parse(message.data));\n          this._logVerbose(`received ws message with type ${serverMessage.type}`);\n          if (serverMessage.type === \"Transition\") {\n            this.reportLargeTransition({\n              messageLength,\n              transition: serverMessage\n            });\n          }\n          var response = this.onMessage(serverMessage);\n          if (response.hasSyncedPastLastReconnect) {\n            this.retries = 0;\n            this.markConnectionStateDirty();\n          }\n        };\n        ws.onclose = event => {\n          this._logVerbose(\"begin ws.onclose\");\n          if (this.lastCloseReason === null) {\n            this.lastCloseReason = event.reason || `closed with code ${event.code}`;\n          }\n          if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY &&\n          // This commonly gets fired on mobile apps when the app is backgrounded\n          event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n            var msg = `WebSocket closed with code ${event.code}`;\n            if (event.reason) {\n              msg += `: ${event.reason}`;\n            }\n            this.logger.log(msg);\n            if (this.onServerDisconnectError && event.reason) {\n              this.onServerDisconnectError(msg);\n            }\n          }\n          var reason = classifyDisconnectError(event.reason);\n          this.scheduleReconnect(reason);\n          return;\n        };\n      }\n      /**\n       * @returns The state of the {@link Socket}.\n       */\n    }, {\n      key: \"socketState\",\n      value: function socketState() {\n        return this.socket.state;\n      }\n      /**\n       * @param message - A ClientMessage to send.\n       * @returns Whether the message (might have been) sent.\n       */\n    }, {\n      key: \"sendMessage\",\n      value: function sendMessage(message) {\n        var messageForLog = {\n          type: message.type,\n          ...(message.type === \"Authenticate\" && message.tokenType === \"User\" ? {\n            value: `...${message.value.slice(-7)}`\n          } : {})\n        };\n        if (this.socket.state === \"ready\" && this.socket.paused === \"no\") {\n          var encodedMessage = (0, import_protocol.encodeClientMessage)(message);\n          var request = JSON.stringify(encodedMessage);\n          var sent = false;\n          try {\n            this.socket.ws.send(request);\n            sent = true;\n          } catch (error) {\n            this.logger.log(`Failed to send message on WebSocket, reconnecting: ${error}`);\n            this.closeAndReconnect(\"FailedToSendMessage\");\n          }\n          this._logVerbose(`${sent ? \"sent\" : \"failed to send\"} message with type ${message.type}: ${JSON.stringify(messageForLog)}`);\n          return true;\n        }\n        this._logVerbose(`message not sent (socket state: ${this.socket.state}, paused: ${\"paused\" in this.socket ? this.socket.paused : void 0}): ${JSON.stringify(messageForLog)}`);\n        return false;\n      }\n    }, {\n      key: \"resetServerInactivityTimeout\",\n      value: function resetServerInactivityTimeout() {\n        if (this.socket.state === \"terminated\") {\n          return;\n        }\n        if (this.reconnectDueToServerInactivityTimeout !== null) {\n          clearTimeout(this.reconnectDueToServerInactivityTimeout);\n          this.reconnectDueToServerInactivityTimeout = null;\n        }\n        this.reconnectDueToServerInactivityTimeout = setTimeout(() => {\n          this.closeAndReconnect(\"InactiveServer\");\n        }, this.serverInactivityThreshold);\n      }\n    }, {\n      key: \"scheduleReconnect\",\n      value: function scheduleReconnect(reason) {\n        this.socket = {\n          state: \"disconnected\"\n        };\n        var backoff = this.nextBackoff(reason);\n        this.markConnectionStateDirty();\n        this.logger.log(`Attempting reconnect in ${Math.round(backoff)}ms`);\n        setTimeout(() => this.connect(), backoff);\n      }\n      /**\n       * Close the WebSocket and schedule a reconnect.\n       *\n       * This should be used when we hit an error and would like to restart the session.\n       */\n    }, {\n      key: \"closeAndReconnect\",\n      value: function closeAndReconnect(closeReason) {\n        this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n        switch (this.socket.state) {\n          case \"disconnected\":\n          case \"terminated\":\n          case \"stopped\":\n            return;\n          case \"connecting\":\n          case \"ready\":\n            {\n              this.lastCloseReason = closeReason;\n              void this.close();\n              this.scheduleReconnect(\"client\");\n              return;\n            }\n          default:\n            {\n              this.socket;\n            }\n        }\n      }\n      /**\n       * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n       * calls. Use this instead of directly calling `ws.close()`\n       *\n       * It is the callers responsibility to update the state after this method is called so that the\n       * closed socket is not accessible or used again after this method is called\n       */\n    }, {\n      key: \"close\",\n      value: function close() {\n        switch (this.socket.state) {\n          case \"disconnected\":\n          case \"terminated\":\n          case \"stopped\":\n            return Promise.resolve();\n          case \"connecting\":\n            {\n              var ws = this.socket.ws;\n              return new Promise(r => {\n                ws.onclose = () => {\n                  this._logVerbose(\"Closed after connecting\");\n                  r();\n                };\n                ws.onopen = () => {\n                  this._logVerbose(\"Opened after connecting\");\n                  ws.close();\n                };\n              });\n            }\n          case \"ready\":\n            {\n              this._logVerbose(\"ws.close called\");\n              var _ws = this.socket.ws;\n              var result = new Promise(r => {\n                _ws.onclose = () => {\n                  r();\n                };\n              });\n              _ws.close();\n              return result;\n            }\n          default:\n            {\n              this.socket;\n              return Promise.resolve();\n            }\n        }\n      }\n      /**\n       * Close the WebSocket and do not reconnect.\n       * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n       */\n    }, {\n      key: \"terminate\",\n      value: function terminate() {\n        if (this.reconnectDueToServerInactivityTimeout) {\n          clearTimeout(this.reconnectDueToServerInactivityTimeout);\n        }\n        switch (this.socket.state) {\n          case \"terminated\":\n          case \"stopped\":\n          case \"disconnected\":\n          case \"connecting\":\n          case \"ready\":\n            {\n              var result = this.close();\n              this.setSocketState({\n                state: \"terminated\"\n              });\n              return result;\n            }\n          default:\n            {\n              this.socket;\n              throw new Error(`Invalid websocket state: ${this.socket.state}`);\n            }\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        switch (this.socket.state) {\n          case \"terminated\":\n            return Promise.resolve();\n          case \"connecting\":\n          case \"stopped\":\n          case \"disconnected\":\n          case \"ready\":\n            {\n              var result = this.close();\n              this.socket = {\n                state: \"stopped\"\n              };\n              return result;\n            }\n          default:\n            {\n              this.socket;\n              return Promise.resolve();\n            }\n        }\n      }\n      /**\n       * Create a new WebSocket after a previous `stop()`, unless `terminate()` was\n       * called before.\n       */\n    }, {\n      key: \"tryRestart\",\n      value: function tryRestart() {\n        switch (this.socket.state) {\n          case \"stopped\":\n            break;\n          case \"terminated\":\n          case \"connecting\":\n          case \"ready\":\n          case \"disconnected\":\n            this.logger.logVerbose(\"Restart called without stopping first\");\n            return;\n          default:\n            {\n              this.socket;\n            }\n        }\n        this.connect();\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        switch (this.socket.state) {\n          case \"disconnected\":\n          case \"stopped\":\n          case \"terminated\":\n            return;\n          case \"connecting\":\n          case \"ready\":\n            {\n              this.socket = {\n                ...this.socket,\n                paused: \"yes\"\n              };\n              return;\n            }\n          default:\n            {\n              this.socket;\n              return;\n            }\n        }\n      }\n      /**\n       * Resume the state machine if previously paused.\n       */\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        switch (this.socket.state) {\n          case \"connecting\":\n            this.socket = {\n              ...this.socket,\n              paused: \"no\"\n            };\n            return;\n          case \"ready\":\n            if (this.socket.paused === \"uninitialized\") {\n              this.socket = {\n                ...this.socket,\n                paused: \"no\"\n              };\n              this.onOpen({\n                connectionCount: this.connectionCount,\n                lastCloseReason: this.lastCloseReason,\n                clientTs: monotonicMillis()\n              });\n            } else if (this.socket.paused === \"yes\") {\n              this.socket = {\n                ...this.socket,\n                paused: \"no\"\n              };\n              this.onResume();\n            }\n            return;\n          case \"terminated\":\n          case \"stopped\":\n          case \"disconnected\":\n            return;\n          default:\n            {\n              this.socket;\n            }\n        }\n        this.connect();\n      }\n    }, {\n      key: \"connectionState\",\n      value: function connectionState() {\n        return {\n          isConnected: this.socket.state === \"ready\",\n          hasEverConnected: this._hasEverConnected,\n          connectionCount: this.connectionCount,\n          connectionRetries: this.retries\n        };\n      }\n    }, {\n      key: \"_logVerbose\",\n      value: function _logVerbose(message) {\n        this.logger.logVerbose(message);\n      }\n    }, {\n      key: \"nextBackoff\",\n      value: function nextBackoff(reason) {\n        var initialBackoff = reason === \"client\" ? 100 : reason === \"Unknown\" ? this.defaultInitialBackoff : serverDisconnectErrors[reason].timeout;\n        var baseBackoff = initialBackoff * Math.pow(2, this.retries);\n        this.retries += 1;\n        var actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n        var jitter = actualBackoff * (Math.random() - 0.5);\n        return actualBackoff + jitter;\n      }\n    }, {\n      key: \"reportLargeTransition\",\n      value: function reportLargeTransition(_ref) {\n        var transition = _ref.transition,\n          messageLength = _ref.messageLength;\n        if (transition.clientClockSkew === void 0 || transition.serverTs === void 0) {\n          return;\n        }\n        var transitionTransitTime = monotonicMillis() -\n        // client time now\n        // clientClockSkew = (server time + upstream latency) - client time\n        // clientClockSkew is \"how many milliseconds behind (slow) is the client clock\"\n        // but the latency of the Connect message inflates this, making it appear further behind\n        transition.clientClockSkew - transition.serverTs / 1e6;\n        var prettyTransitionTime = `${Math.round(transitionTransitTime)}ms`;\n        var prettyMessageMB = `${Math.round(messageLength / 1e4) / 100}MB`;\n        var bytesPerSecond = messageLength / (transitionTransitTime / 1e3);\n        var prettyBytesPerSecond = `${Math.round(bytesPerSecond / 1e4) / 100}MB per second`;\n        this._logVerbose(`received ${prettyMessageMB} transition in ${prettyTransitionTime} at ${prettyBytesPerSecond}`);\n        if (messageLength > 2e7) {\n          this.logger.log(`received query results totaling more that 20MB (${prettyMessageMB}) which will take a long time to download on slower connections`);\n        } else if (transitionTransitTime > 2e4) {\n          this.logger.log(`received query results totaling ${prettyMessageMB} which took more than 20s to arrive (${prettyTransitionTime})`);\n        }\n        if (this.debug) {\n          if (transitionTransitTime > 2e3) {\n            this.sendMessage({\n              type: \"Event\",\n              eventType: \"ClientReceivedTransition\",\n              event: {\n                transitionTransitTime,\n                messageLength\n              }\n            });\n          }\n        }\n      }\n    }]);\n  }();\n});","lineCount":610,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[5,86,1,13,"default"],[5,93,1,13],[6,2,2,0],[6,6,2,4,"__defProp"],[6,15,2,13],[6,18,2,16,"Object"],[6,24,2,22],[6,25,2,23,"defineProperty"],[6,39,2,37],[7,2,3,0],[7,6,3,4,"__getOwnPropDesc"],[7,22,3,20],[7,25,3,23,"Object"],[7,31,3,29],[7,32,3,30,"getOwnPropertyDescriptor"],[7,56,3,54],[8,2,4,0],[8,6,4,4,"__getOwnPropNames"],[8,23,4,21],[8,26,4,24,"Object"],[8,32,4,30],[8,33,4,31,"getOwnPropertyNames"],[8,52,4,50],[9,2,5,0],[9,6,5,4,"__hasOwnProp"],[9,18,5,16],[9,21,5,19,"Object"],[9,27,5,25],[9,28,5,26,"prototype"],[9,37,5,35],[9,38,5,36,"hasOwnProperty"],[9,52,5,50],[10,2,6,0],[10,6,6,4,"__defNormalProp"],[10,21,6,19],[10,24,6,22,"__defNormalProp"],[10,25,6,23,"obj"],[10,28,6,26],[10,30,6,28,"key"],[10,33,6,31],[10,35,6,33,"value"],[10,40,6,38],[10,45,6,43,"key"],[10,48,6,46],[10,52,6,50,"obj"],[10,55,6,53],[10,58,6,56,"__defProp"],[10,67,6,65],[10,68,6,66,"obj"],[10,71,6,69],[10,73,6,71,"key"],[10,76,6,74],[10,78,6,76],[11,4,6,78,"enumerable"],[11,14,6,88],[11,16,6,90],[11,20,6,94],[12,4,6,96,"configurable"],[12,16,6,108],[12,18,6,110],[12,22,6,114],[13,4,6,116,"writable"],[13,12,6,124],[13,14,6,126],[13,18,6,130],[14,4,6,132,"value"],[15,2,6,138],[15,3,6,139],[15,4,6,140],[15,7,6,143,"obj"],[15,10,6,146],[15,11,6,147,"key"],[15,14,6,150],[15,15,6,151],[15,18,6,154,"value"],[15,23,6,159],[16,2,7,0],[16,6,7,4,"__export"],[16,14,7,12],[16,17,7,15,"__export"],[16,18,7,16,"target"],[16,24,7,22],[16,26,7,24,"all"],[16,29,7,27],[16,34,7,32],[17,4,8,2],[17,9,8,7],[17,13,8,11,"name"],[17,17,8,15],[17,21,8,19,"all"],[17,24,8,22],[17,26,9,4,"__defProp"],[17,35,9,13],[17,36,9,14,"target"],[17,42,9,20],[17,44,9,22,"name"],[17,48,9,26],[17,50,9,28],[18,6,9,30,"get"],[18,9,9,33],[18,11,9,35,"all"],[18,14,9,38],[18,15,9,39,"name"],[18,19,9,43],[18,20,9,44],[19,6,9,46,"enumerable"],[19,16,9,56],[19,18,9,58],[20,4,9,63],[20,5,9,64],[20,6,9,65],[21,2,10,0],[21,3,10,1],[22,2,11,0],[22,6,11,4,"__copyProps"],[22,17,11,15],[22,20,11,18,"__copyProps"],[22,21,11,19,"to"],[22,23,11,21],[22,25,11,23,"from"],[22,29,11,27],[22,31,11,29,"except"],[22,37,11,35],[22,39,11,37,"desc"],[22,43,11,41],[22,48,11,46],[23,4,12,2],[23,8,12,6,"from"],[23,12,12,10],[23,16,12,14],[23,23,12,21,"from"],[23,27,12,25],[23,32,12,30],[23,40,12,38],[23,44,12,42],[23,51,12,49,"from"],[23,55,12,53],[23,60,12,58],[23,70,12,68],[23,72,12,70],[24,6,12,70],[24,10,12,70,"_loop"],[24,15,12,70],[24,27,12,70,"_loop"],[24,28,12,70,"key"],[24,31,12,70],[25,8,14,6],[25,12,14,10],[25,13,14,11,"__hasOwnProp"],[25,25,14,23],[25,26,14,24,"call"],[25,30,14,28],[25,31,14,29,"to"],[25,33,14,31],[25,35,14,33,"key"],[25,38,14,36],[25,39,14,37],[25,43,14,41,"key"],[25,46,14,44],[25,51,14,49,"except"],[25,57,14,55],[25,59,15,8,"__defProp"],[25,68,15,17],[25,69,15,18,"to"],[25,71,15,20],[25,73,15,22,"key"],[25,76,15,25],[25,78,15,27],[26,10,15,29,"get"],[26,13,15,32],[26,15,15,34,"get"],[26,16,15,34],[26,21,15,40,"from"],[26,25,15,44],[26,26,15,45,"key"],[26,29,15,48],[26,30,15,49],[27,10,15,51,"enumerable"],[27,20,15,61],[27,22,15,63],[27,24,15,65,"desc"],[27,28,15,69],[27,31,15,72,"__getOwnPropDesc"],[27,47,15,88],[27,48,15,89,"from"],[27,52,15,93],[27,54,15,95,"key"],[27,57,15,98],[27,58,15,99],[27,59,15,100],[27,63,15,104,"desc"],[27,67,15,108],[27,68,15,109,"enumerable"],[28,8,15,120],[28,9,15,121],[28,10,15,122],[29,6,15,123],[30,6,13,4],[30,11,13,9],[30,15,13,13,"key"],[30,18,13,16],[30,22,13,20,"__getOwnPropNames"],[30,39,13,37],[30,40,13,38,"from"],[30,44,13,42],[30,45,13,43],[31,8,13,43,"_loop"],[31,13,13,43],[31,14,13,43,"key"],[31,17,13,43],[32,6,13,43],[33,4,16,2],[34,4,17,2],[34,11,17,9,"to"],[34,13,17,11],[35,2,18,0],[35,3,18,1],[36,2,19,0],[36,6,19,4,"__toCommonJS"],[36,18,19,16],[36,21,19,20,"mod"],[36,24,19,23],[36,28,19,28,"__copyProps"],[36,39,19,39],[36,40,19,40,"__defProp"],[36,49,19,49],[36,50,19,50],[36,51,19,51],[36,52,19,52],[36,54,19,54],[36,66,19,66],[36,68,19,68],[37,4,19,70,"value"],[37,9,19,75],[37,11,19,77],[38,2,19,82],[38,3,19,83],[38,4,19,84],[38,6,19,86,"mod"],[38,9,19,89],[38,10,19,90],[39,2,20,0],[39,6,20,4,"__publicField"],[39,19,20,17],[39,22,20,20,"__publicField"],[39,23,20,21,"obj"],[39,26,20,24],[39,28,20,26,"key"],[39,31,20,29],[39,33,20,31,"value"],[39,38,20,36],[39,43,20,41,"__defNormalProp"],[39,58,20,56],[39,59,20,57,"obj"],[39,62,20,60],[39,64,20,62],[39,71,20,69,"key"],[39,74,20,72],[39,79,20,77],[39,87,20,85],[39,90,20,88,"key"],[39,93,20,91],[39,96,20,94],[39,98,20,96],[39,101,20,99,"key"],[39,104,20,102],[39,106,20,104,"value"],[39,111,20,109],[39,112,20,110],[40,2,21,0],[40,6,21,4,"web_socket_manager_exports"],[40,32,21,30],[40,35,21,33],[40,36,21,34],[40,37,21,35],[41,2,22,0,"__export"],[41,10,22,8],[41,11,22,9,"web_socket_manager_exports"],[41,37,22,35],[41,39,22,37],[42,4,23,2,"WebSocketManager"],[42,20,23,18],[42,22,23,20,"WebSocketManager"],[42,23,23,20],[42,28,23,26,"WebSocketManager"],[43,2,24,0],[43,3,24,1],[43,4,24,2],[44,2,25,0,"module"],[44,8,25,6],[44,9,25,7,"exports"],[44,16,25,14],[44,19,25,17,"__toCommonJS"],[44,31,25,29],[44,32,25,30,"web_socket_manager_exports"],[44,58,25,56],[44,59,25,57],[45,2,26,0],[45,6,26,4,"import_protocol"],[45,21,26,19],[45,24,26,22,"require"],[45,31,26,29],[45,32,26,29,"_dependencyMap"],[45,46,26,29],[45,66,26,45],[45,67,26,46],[46,2,27,0],[46,6,27,6,"CLOSE_NORMAL"],[46,18,27,18],[46,21,27,21],[46,24,27,24],[47,2,28,0],[47,6,28,6,"CLOSE_GOING_AWAY"],[47,22,28,22],[47,25,28,25],[47,29,28,29],[48,2,29,0],[48,6,29,6,"CLOSE_NO_STATUS"],[48,21,29,21],[48,24,29,24],[48,28,29,28],[49,2,30,0],[49,6,30,6,"CLOSE_NOT_FOUND"],[49,21,30,21],[49,24,30,24],[49,28,30,28],[50,2,31,0],[50,6,31,4,"firstTime"],[50,15,31,13],[51,2,32,0],[51,11,32,9,"monotonicMillis"],[51,26,32,24,"monotonicMillis"],[51,27,32,24],[51,29,32,27],[52,4,33,2],[52,8,33,6,"firstTime"],[52,17,33,15],[52,22,33,20],[52,27,33,25],[52,28,33,26],[52,30,33,28],[53,6,34,4,"firstTime"],[53,15,34,13],[53,18,34,16,"Date"],[53,22,34,20],[53,23,34,21,"now"],[53,26,34,24],[53,27,34,25],[53,28,34,26],[54,4,35,2],[55,4,36,2],[55,8,36,6],[55,15,36,13,"performance"],[55,26,36,24],[55,31,36,29],[55,42,36,40],[55,46,36,44],[55,47,36,45,"performance"],[55,58,36,56],[55,59,36,57,"now"],[55,62,36,60],[55,64,36,62],[56,6,37,4],[56,13,37,11,"Date"],[56,17,37,15],[56,18,37,16,"now"],[56,21,37,19],[56,22,37,20],[56,23,37,21],[57,4,38,2],[58,4,39,2],[58,11,39,9,"Math"],[58,15,39,13],[58,16,39,14,"round"],[58,21,39,19],[58,22,39,20,"firstTime"],[58,31,39,29],[58,34,39,32,"performance"],[58,45,39,43],[58,46,39,44,"now"],[58,49,39,47],[58,50,39,48],[58,51,39,49],[58,52,39,50],[59,2,40,0],[60,2,41,0],[60,11,41,9,"prettyNow"],[60,20,41,18,"prettyNow"],[60,21,41,18],[60,23,41,21],[61,4,42,2],[61,11,42,9],[61,16,42,14,"Math"],[61,20,42,18],[61,21,42,19,"round"],[61,26,42,24],[61,27,42,25],[61,28,42,26,"monotonicMillis"],[61,43,42,41],[61,44,42,42],[61,45,42,43],[61,48,42,46,"firstTime"],[61,57,42,55],[61,61,42,59],[61,64,42,62],[61,65,42,63],[61,68,42,66],[61,70,42,68],[61,73,42,71],[62,2,43,0],[63,2,44,0],[63,6,44,6,"serverDisconnectErrors"],[63,28,44,28],[63,31,44,31],[64,4,45,2],[65,4,46,2,"InternalServerError"],[65,23,46,21],[65,25,46,23],[66,6,46,25,"timeout"],[66,13,46,32],[66,15,46,34],[67,4,46,38],[67,5,46,39],[68,4,47,2],[69,4,48,2,"SubscriptionsWorkerFullError"],[69,32,48,30],[69,34,48,32],[70,6,48,34,"timeout"],[70,13,48,41],[70,15,48,43],[71,4,48,47],[71,5,48,48],[72,4,49,2,"TooManyConcurrentRequests"],[72,29,49,27],[72,31,49,29],[73,6,49,31,"timeout"],[73,13,49,38],[73,15,49,40],[74,4,49,44],[74,5,49,45],[75,4,50,2,"CommitterFullError"],[75,22,50,20],[75,24,50,22],[76,6,50,24,"timeout"],[76,13,50,31],[76,15,50,33],[77,4,50,37],[77,5,50,38],[78,4,51,2,"AwsTooManyRequestsException"],[78,31,51,29],[78,33,51,31],[79,6,51,33,"timeout"],[79,13,51,40],[79,15,51,42],[80,4,51,46],[80,5,51,47],[81,4,52,2,"ExecuteFullError"],[81,20,52,18],[81,22,52,20],[82,6,52,22,"timeout"],[82,13,52,29],[82,15,52,31],[83,4,52,35],[83,5,52,36],[84,4,53,2,"SystemTimeoutError"],[84,22,53,20],[84,24,53,22],[85,6,53,24,"timeout"],[85,13,53,31],[85,15,53,33],[86,4,53,37],[86,5,53,38],[87,4,54,2,"ExpiredInQueue"],[87,18,54,16],[87,20,54,18],[88,6,54,20,"timeout"],[88,13,54,27],[88,15,54,29],[89,4,54,33],[89,5,54,34],[90,4,55,2],[91,4,56,2,"VectorIndexesUnavailable"],[91,28,56,26],[91,30,56,28],[92,6,56,30,"timeout"],[92,13,56,37],[92,15,56,39],[93,4,56,43],[93,5,56,44],[94,4,57,2,"SearchIndexesUnavailable"],[94,28,57,26],[94,30,57,28],[95,6,57,30,"timeout"],[95,13,57,37],[95,15,57,39],[96,4,57,43],[96,5,57,44],[97,4,58,2,"TableSummariesUnavailable"],[97,29,58,27],[97,31,58,29],[98,6,58,31,"timeout"],[98,13,58,38],[98,15,58,40],[99,4,58,44],[99,5,58,45],[100,4,59,2],[101,4,60,2,"VectorIndexTooLarge"],[101,23,60,21],[101,25,60,23],[102,6,60,25,"timeout"],[102,13,60,32],[102,15,60,34],[103,4,60,38],[103,5,60,39],[104,4,61,2,"SearchIndexTooLarge"],[104,23,61,21],[104,25,61,23],[105,6,61,25,"timeout"],[105,13,61,32],[105,15,61,34],[106,4,61,38],[106,5,61,39],[107,4,62,2,"TooManyWritesInTimePeriod"],[107,29,62,27],[107,31,62,29],[108,6,62,31,"timeout"],[108,13,62,38],[108,15,62,40],[109,4,62,44],[110,2,63,0],[110,3,63,1],[111,2,64,0],[111,11,64,9,"classifyDisconnectError"],[111,34,64,32,"classifyDisconnectError"],[111,35,64,33,"s"],[111,36,64,34],[111,38,64,36],[112,4,65,2],[112,8,65,6,"s"],[112,9,65,7],[112,14,65,12],[112,19,65,17],[112,20,65,18],[112,22,65,20],[112,29,65,27],[112,38,65,36],[113,4,66,2],[113,9,66,7],[113,13,66,13,"prefix"],[113,19,66,19],[113,23,66,23,"Object"],[113,29,66,29],[113,30,66,30,"keys"],[113,34,66,34],[113,35,67,4,"serverDisconnectErrors"],[113,57,68,2],[113,58,68,3],[113,60,68,5],[114,6,69,4],[114,10,69,8,"s"],[114,11,69,9],[114,12,69,10,"startsWith"],[114,22,69,20],[114,23,69,21,"prefix"],[114,29,69,27],[114,30,69,28],[114,32,69,30],[115,8,70,6],[115,15,70,13,"prefix"],[115,21,70,19],[116,6,71,4],[117,4,72,2],[118,4,73,2],[118,11,73,9],[118,20,73,18],[119,2,74,0],[120,2,74,1],[120,6,75,6,"WebSocketManager"],[120,22,75,22],[121,4,76,2],[121,13,76,2,"WebSocketManager"],[121,30,76,14,"uri"],[121,33,76,17],[121,35,76,19,"callbacks"],[121,44,76,28],[121,46,76,30,"webSocketConstructor"],[121,66,76,50],[121,68,76,52,"logger"],[121,74,76,58],[121,76,76,60,"markConnectionStateDirty"],[121,100,76,84],[121,102,76,86,"debug"],[121,107,76,91],[121,109,76,93],[122,6,76,93,"_classCallCheck"],[122,21,76,93],[122,28,76,93,"WebSocketManager"],[122,44,76,93],[123,6,77,4],[123,10,77,8],[123,11,77,9,"markConnectionStateDirty"],[123,35,77,33],[123,38,77,36,"markConnectionStateDirty"],[123,62,77,60],[124,6,78,4],[124,10,78,8],[124,11,78,9,"debug"],[124,16,78,14],[124,19,78,17,"debug"],[124,24,78,22],[125,6,79,4,"__publicField"],[125,19,79,17],[125,20,79,18],[125,24,79,22],[125,26,79,24],[125,34,79,32],[125,35,79,33],[126,6,80,4,"__publicField"],[126,19,80,17],[126,20,80,18],[126,24,80,22],[126,26,80,24],[126,43,80,41],[126,44,80,42],[127,6,81,4,"__publicField"],[127,19,81,17],[127,20,81,18],[127,24,81,22],[127,26,81,24],[127,45,81,43],[127,47,81,45],[127,52,81,50],[127,53,81,51],[128,6,82,4,"__publicField"],[128,19,82,17],[128,20,82,18],[128,24,82,22],[128,26,82,24],[128,43,82,41],[128,44,82,42],[129,6,83,4],[130,6,84,4,"__publicField"],[130,19,84,17],[130,20,84,18],[130,24,84,22],[130,26,84,24],[130,49,84,47],[130,50,84,48],[131,6,85,4],[132,6,86,4,"__publicField"],[132,19,86,17],[132,20,86,18],[132,24,86,22],[132,26,86,24],[132,38,86,36],[132,39,86,37],[133,6,87,4],[134,6,88,4,"__publicField"],[134,19,88,17],[134,20,88,18],[134,24,88,22],[134,26,88,24],[134,35,88,33],[134,36,88,34],[135,6,89,4],[136,0,90,0],[137,6,91,4,"__publicField"],[137,19,91,17],[137,20,91,18],[137,24,91,22],[137,26,91,24],[137,53,91,51],[137,54,91,52],[138,6,92,4,"__publicField"],[138,19,92,17],[138,20,92,18],[138,24,92,22],[138,26,92,24],[138,65,92,63],[138,66,92,64],[139,6,93,4,"__publicField"],[139,19,93,17],[139,20,93,18],[139,24,93,22],[139,26,93,24],[139,31,93,29],[139,32,93,30],[140,6,94,4,"__publicField"],[140,19,94,17],[140,20,94,18],[140,24,94,22],[140,26,94,24],[140,34,94,32],[140,35,94,33],[141,6,95,4,"__publicField"],[141,19,95,17],[141,20,95,18],[141,24,95,22],[141,26,95,24],[141,36,95,34],[141,37,95,35],[142,6,96,4,"__publicField"],[142,19,96,17],[142,20,96,18],[142,24,96,22],[142,26,96,24],[142,37,96,35],[142,38,96,36],[143,6,97,4,"__publicField"],[143,19,97,17],[143,20,97,18],[143,24,97,22],[143,26,97,24],[143,48,97,46],[143,49,97,47],[144,6,98,4,"__publicField"],[144,19,98,17],[144,20,98,18],[144,24,98,22],[144,26,98,24],[144,34,98,32],[144,35,98,33],[145,6,99,4,"__publicField"],[145,19,99,17],[145,20,99,18],[145,24,99,22],[145,26,99,24],[145,51,99,49],[145,52,99,50],[146,6,100,4],[146,10,100,8],[146,11,100,9,"webSocketConstructor"],[146,31,100,29],[146,34,100,32,"webSocketConstructor"],[146,54,100,52],[147,6,101,4],[147,10,101,8],[147,11,101,9,"socket"],[147,17,101,15],[147,20,101,18],[148,8,101,20,"state"],[148,13,101,25],[148,15,101,27],[149,6,101,42],[149,7,101,43],[150,6,102,4],[150,10,102,8],[150,11,102,9,"connectionCount"],[150,26,102,24],[150,29,102,27],[150,30,102,28],[151,6,103,4],[151,10,103,8],[151,11,103,9,"lastCloseReason"],[151,26,103,24],[151,29,103,27],[151,45,103,43],[152,6,104,4],[152,10,104,8],[152,11,104,9,"defaultInitialBackoff"],[152,32,104,30],[152,35,104,33],[152,38,104,36],[153,6,105,4],[153,10,105,8],[153,11,105,9,"maxBackoff"],[153,21,105,19],[153,24,105,22],[153,28,105,26],[154,6,106,4],[154,10,106,8],[154,11,106,9,"retries"],[154,18,106,16],[154,21,106,19],[154,22,106,20],[155,6,107,4],[155,10,107,8],[155,11,107,9,"serverInactivityThreshold"],[155,36,107,34],[155,39,107,37],[155,42,107,40],[156,6,108,4],[156,10,108,8],[156,11,108,9,"reconnectDueToServerInactivityTimeout"],[156,48,108,46],[156,51,108,49],[156,55,108,53],[157,6,109,4],[157,10,109,8],[157,11,109,9,"uri"],[157,14,109,12],[157,17,109,15,"uri"],[157,20,109,18],[158,6,110,4],[158,10,110,8],[158,11,110,9,"onOpen"],[158,17,110,15],[158,20,110,18,"callbacks"],[158,29,110,27],[158,30,110,28,"onOpen"],[158,36,110,34],[159,6,111,4],[159,10,111,8],[159,11,111,9,"onResume"],[159,19,111,17],[159,22,111,20,"callbacks"],[159,31,111,29],[159,32,111,30,"onResume"],[159,40,111,38],[160,6,112,4],[160,10,112,8],[160,11,112,9,"onMessage"],[160,20,112,18],[160,23,112,21,"callbacks"],[160,32,112,30],[160,33,112,31,"onMessage"],[160,42,112,40],[161,6,113,4],[161,10,113,8],[161,11,113,9,"onServerDisconnectError"],[161,34,113,32],[161,37,113,35,"callbacks"],[161,46,113,44],[161,47,113,45,"onServerDisconnectError"],[161,70,113,68],[162,6,114,4],[162,10,114,8],[162,11,114,9,"logger"],[162,17,114,15],[162,20,114,18,"logger"],[162,26,114,24],[163,6,115,4],[163,10,115,8],[163,11,115,9,"connect"],[163,18,115,16],[163,19,115,17],[163,20,115,18],[164,4,116,2],[165,4,116,3],[165,11,116,3,"_createClass"],[165,23,116,3],[165,24,116,3,"WebSocketManager"],[165,40,116,3],[166,6,116,3,"key"],[166,9,116,3],[167,6,116,3,"value"],[167,11,116,3],[167,13,117,2],[167,22,117,2,"setSocketState"],[167,36,117,16,"setSocketState"],[167,37,117,17,"state"],[167,42,117,22],[167,44,117,24],[168,8,118,4],[168,12,118,8],[168,13,118,9,"socket"],[168,19,118,15],[168,22,118,18,"state"],[168,27,118,23],[169,8,119,4],[169,12,119,8],[169,13,119,9,"_logVerbose"],[169,24,119,20],[169,25,120,6],[169,50,120,31],[169,54,120,35],[169,55,120,36,"socket"],[169,61,120,42],[169,62,120,43,"state"],[169,67,120,48],[169,80,120,61],[169,88,120,69],[169,92,120,73],[169,96,120,77],[169,97,120,78,"socket"],[169,103,120,84],[169,106,120,87],[169,110,120,91],[169,111,120,92,"socket"],[169,117,120,98],[169,118,120,99,"paused"],[169,124,120,105],[169,127,120,108],[169,132,120,113],[169,133,120,114],[169,135,121,4],[169,136,121,5],[170,8,122,4],[170,12,122,8],[170,13,122,9,"markConnectionStateDirty"],[170,37,122,33],[170,38,122,34],[170,39,122,35],[171,6,123,2],[172,4,123,3],[173,6,123,3,"key"],[173,9,123,3],[174,6,123,3,"value"],[174,11,123,3],[174,13,124,2],[174,22,124,2,"connect"],[174,29,124,9,"connect"],[174,30,124,9],[174,32,124,12],[175,8,125,4],[175,12,125,8],[175,16,125,12],[175,17,125,13,"socket"],[175,23,125,19],[175,24,125,20,"state"],[175,29,125,25],[175,34,125,30],[175,46,125,42],[175,48,125,44],[176,10,126,6],[177,8,127,4],[178,8,128,4],[178,12,128,8],[178,16,128,12],[178,17,128,13,"socket"],[178,23,128,19],[178,24,128,20,"state"],[178,29,128,25],[178,34,128,30],[178,48,128,44],[178,52,128,48],[178,56,128,52],[178,57,128,53,"socket"],[178,63,128,59],[178,64,128,60,"state"],[178,69,128,65],[178,74,128,70],[178,83,128,79],[178,85,128,81],[179,10,129,6],[179,16,129,12],[179,20,129,16,"Error"],[179,25,129,21],[179,26,130,8],[179,77,130,59],[179,80,130,62],[179,84,130,66],[179,85,130,67,"socket"],[179,91,130,73],[179,92,130,74,"state"],[179,97,131,6],[179,98,131,7],[180,8,132,4],[181,8,133,4],[181,12,133,10,"ws"],[181,14,133,12],[181,17,133,15],[181,21,133,19],[181,25,133,23],[181,26,133,24,"webSocketConstructor"],[181,46,133,44],[181,47,133,45],[181,51,133,49],[181,52,133,50,"uri"],[181,55,133,53],[181,56,133,54],[182,8,134,4],[182,12,134,8],[182,13,134,9,"_logVerbose"],[182,24,134,20],[182,25,134,21],[182,48,134,44],[182,49,134,45],[183,8,135,4],[183,12,135,8],[183,13,135,9,"setSocketState"],[183,27,135,23],[183,28,135,24],[184,10,136,6,"state"],[184,15,136,11],[184,17,136,13],[184,29,136,25],[185,10,137,6,"ws"],[185,12,137,8],[186,10,138,6,"paused"],[186,16,138,12],[186,18,138,14],[187,8,139,4],[187,9,139,5],[187,10,139,6],[188,8,140,4],[188,12,140,8],[188,13,140,9,"resetServerInactivityTimeout"],[188,41,140,37],[188,42,140,38],[188,43,140,39],[189,8,141,4,"ws"],[189,10,141,6],[189,11,141,7,"onopen"],[189,17,141,13],[189,20,141,16],[189,26,141,22],[190,10,142,6],[190,14,142,10],[190,15,142,11,"logger"],[190,21,142,17],[190,22,142,18,"logVerbose"],[190,32,142,28],[190,33,142,29],[190,50,142,46],[190,51,142,47],[191,10,143,6],[191,14,143,10],[191,18,143,14],[191,19,143,15,"socket"],[191,25,143,21],[191,26,143,22,"state"],[191,31,143,27],[191,36,143,32],[191,48,143,44],[191,50,143,46],[192,12,144,8],[192,18,144,14],[192,22,144,18,"Error"],[192,27,144,23],[192,28,144,24],[192,79,144,75],[192,80,144,76],[193,10,145,6],[194,10,146,6],[194,14,146,10],[194,15,146,11,"setSocketState"],[194,29,146,25],[194,30,146,26],[195,12,147,8,"state"],[195,17,147,13],[195,19,147,15],[195,26,147,22],[196,12,148,8,"ws"],[196,14,148,10],[197,12,149,8,"paused"],[197,18,149,14],[197,20,149,16],[197,24,149,20],[197,25,149,21,"socket"],[197,31,149,27],[197,32,149,28,"paused"],[197,38,149,34],[197,43,149,39],[197,48,149,44],[197,51,149,47],[197,66,149,62],[197,69,149,65],[198,10,150,6],[198,11,150,7],[198,12,150,8],[199,10,151,6],[199,14,151,10],[199,15,151,11,"resetServerInactivityTimeout"],[199,43,151,39],[199,44,151,40],[199,45,151,41],[200,10,152,6],[200,14,152,10],[200,18,152,14],[200,19,152,15,"socket"],[200,25,152,21],[200,26,152,22,"paused"],[200,32,152,28],[200,37,152,33],[200,41,152,37],[200,43,152,39],[201,12,153,8],[201,16,153,12],[201,17,153,13,"_hasEverConnected"],[201,34,153,30],[201,37,153,33],[201,41,153,37],[202,12,154,8],[202,16,154,12],[202,17,154,13,"onOpen"],[202,23,154,19],[202,24,154,20],[203,14,155,10,"connectionCount"],[203,29,155,25],[203,31,155,27],[203,35,155,31],[203,36,155,32,"connectionCount"],[203,51,155,47],[204,14,156,10,"lastCloseReason"],[204,29,156,25],[204,31,156,27],[204,35,156,31],[204,36,156,32,"lastCloseReason"],[204,51,156,47],[205,14,157,10,"clientTs"],[205,22,157,18],[205,24,157,20,"monotonicMillis"],[205,39,157,35],[205,40,157,36],[206,12,158,8],[206,13,158,9],[206,14,158,10],[207,10,159,6],[208,10,160,6],[208,14,160,10],[208,18,160,14],[208,19,160,15,"lastCloseReason"],[208,34,160,30],[208,39,160,35],[208,55,160,51],[208,57,160,53],[209,12,161,8],[209,16,161,12],[209,20,161,16],[209,21,161,17,"lastCloseReason"],[209,36,161,32],[209,38,161,34],[210,14,162,10],[210,18,162,14],[210,19,162,15,"logger"],[210,25,162,21],[210,26,162,22,"log"],[210,29,162,25],[210,30,163,12],[210,56,163,38],[210,58,164,12,"prettyNow"],[210,67,164,21],[210,68,164,22],[210,69,164,23],[210,71,165,12],[210,96,165,37],[210,98,166,12],[210,102,166,16],[210,103,166,17,"lastCloseReason"],[210,118,167,10],[210,119,167,11],[211,12,168,8],[211,13,168,9],[211,19,168,15],[212,14,169,10],[212,18,169,14],[212,19,169,15,"logger"],[212,25,169,21],[212,26,169,22,"log"],[212,29,169,25],[212,30,169,26],[212,56,169,52],[212,58,169,54,"prettyNow"],[212,67,169,63],[212,68,169,64],[212,69,169,65],[212,70,169,66],[213,12,170,8],[214,10,171,6],[215,10,172,6],[215,14,172,10],[215,15,172,11,"connectionCount"],[215,30,172,26],[215,34,172,30],[215,35,172,31],[216,10,173,6],[216,14,173,10],[216,15,173,11,"lastCloseReason"],[216,30,173,26],[216,33,173,29],[216,37,173,33],[217,8,174,4],[217,9,174,5],[218,8,175,4,"ws"],[218,10,175,6],[218,11,175,7,"onerror"],[218,18,175,14],[218,21,175,18,"error"],[218,26,175,23],[218,30,175,28],[219,10,176,6],[219,14,176,12,"message"],[219,21,176,19],[219,24,176,22,"error"],[219,29,176,27],[219,30,176,28,"message"],[219,37,176,35],[220,10,177,6],[220,14,177,10,"message"],[220,21,177,17],[220,23,177,19],[221,12,178,8],[221,16,178,12],[221,17,178,13,"logger"],[221,23,178,19],[221,24,178,20,"log"],[221,27,178,23],[221,28,178,24],[221,56,178,52,"message"],[221,63,178,59],[221,65,178,61],[221,66,178,62],[222,10,179,6],[223,8,180,4],[223,9,180,5],[224,8,181,4,"ws"],[224,10,181,6],[224,11,181,7,"onmessage"],[224,20,181,16],[224,23,181,20,"message"],[224,30,181,27],[224,34,181,32],[225,10,182,6],[225,14,182,10],[225,15,182,11,"resetServerInactivityTimeout"],[225,43,182,39],[225,44,182,40],[225,45,182,41],[226,10,183,6],[226,14,183,12,"messageLength"],[226,27,183,25],[226,30,183,28,"message"],[226,37,183,35],[226,38,183,36,"data"],[226,42,183,40],[226,43,183,41,"length"],[226,49,183,47],[227,10,184,6],[227,14,184,12,"serverMessage"],[227,27,184,25],[227,30,184,28],[227,31,184,29],[227,32,184,30],[227,34,184,32,"import_protocol"],[227,49,184,47],[227,50,184,48,"parseServerMessage"],[227,68,184,66],[227,70,184,68,"JSON"],[227,74,184,72],[227,75,184,73,"parse"],[227,80,184,78],[227,81,184,79,"message"],[227,88,184,86],[227,89,184,87,"data"],[227,93,184,91],[227,94,184,92],[227,95,184,93],[228,10,185,6],[228,14,185,10],[228,15,185,11,"_logVerbose"],[228,26,185,22],[228,27,185,23],[228,60,185,56,"serverMessage"],[228,73,185,69],[228,74,185,70,"type"],[228,78,185,74],[228,80,185,76],[228,81,185,77],[229,10,186,6],[229,14,186,10,"serverMessage"],[229,27,186,23],[229,28,186,24,"type"],[229,32,186,28],[229,37,186,33],[229,49,186,45],[229,51,186,47],[230,12,187,8],[230,16,187,12],[230,17,187,13,"reportLargeTransition"],[230,38,187,34],[230,39,187,35],[231,14,188,10,"messageLength"],[231,27,188,23],[232,14,189,10,"transition"],[232,24,189,20],[232,26,189,22,"serverMessage"],[233,12,190,8],[233,13,190,9],[233,14,190,10],[234,10,191,6],[235,10,192,6],[235,14,192,12,"response"],[235,22,192,20],[235,25,192,23],[235,29,192,27],[235,30,192,28,"onMessage"],[235,39,192,37],[235,40,192,38,"serverMessage"],[235,53,192,51],[235,54,192,52],[236,10,193,6],[236,14,193,10,"response"],[236,22,193,18],[236,23,193,19,"hasSyncedPastLastReconnect"],[236,49,193,45],[236,51,193,47],[237,12,194,8],[237,16,194,12],[237,17,194,13,"retries"],[237,24,194,20],[237,27,194,23],[237,28,194,24],[238,12,195,8],[238,16,195,12],[238,17,195,13,"markConnectionStateDirty"],[238,41,195,37],[238,42,195,38],[238,43,195,39],[239,10,196,6],[240,8,197,4],[240,9,197,5],[241,8,198,4,"ws"],[241,10,198,6],[241,11,198,7,"onclose"],[241,18,198,14],[241,21,198,18,"event"],[241,26,198,23],[241,30,198,28],[242,10,199,6],[242,14,199,10],[242,15,199,11,"_logVerbose"],[242,26,199,22],[242,27,199,23],[242,45,199,41],[242,46,199,42],[243,10,200,6],[243,14,200,10],[243,18,200,14],[243,19,200,15,"lastCloseReason"],[243,34,200,30],[243,39,200,35],[243,43,200,39],[243,45,200,41],[244,12,201,8],[244,16,201,12],[244,17,201,13,"lastCloseReason"],[244,32,201,28],[244,35,201,31,"event"],[244,40,201,36],[244,41,201,37,"reason"],[244,47,201,43],[244,51,201,47],[244,71,201,67,"event"],[244,76,201,72],[244,77,201,73,"code"],[244,81,201,77],[244,83,201,79],[245,10,202,6],[246,10,203,6],[246,14,203,10,"event"],[246,19,203,15],[246,20,203,16,"code"],[246,24,203,20],[246,29,203,25,"CLOSE_NORMAL"],[246,41,203,37],[246,45,203,41,"event"],[246,50,203,46],[246,51,203,47,"code"],[246,55,203,51],[246,60,203,56,"CLOSE_GOING_AWAY"],[246,76,203,72],[247,10,203,76],[248,10,204,6,"event"],[248,15,204,11],[248,16,204,12,"code"],[248,20,204,16],[248,25,204,21,"CLOSE_NO_STATUS"],[248,40,204,36],[248,44,204,40,"event"],[248,49,204,45],[248,50,204,46,"code"],[248,54,204,50],[248,59,204,55,"CLOSE_NOT_FOUND"],[248,74,204,70],[248,76,204,72],[249,12,205,8],[249,16,205,12,"msg"],[249,19,205,15],[249,22,205,18],[249,52,205,48,"event"],[249,57,205,53],[249,58,205,54,"code"],[249,62,205,58],[249,64,205,60],[250,12,206,8],[250,16,206,12,"event"],[250,21,206,17],[250,22,206,18,"reason"],[250,28,206,24],[250,30,206,26],[251,14,207,10,"msg"],[251,17,207,13],[251,21,207,17],[251,26,207,22,"event"],[251,31,207,27],[251,32,207,28,"reason"],[251,38,207,34],[251,40,207,36],[252,12,208,8],[253,12,209,8],[253,16,209,12],[253,17,209,13,"logger"],[253,23,209,19],[253,24,209,20,"log"],[253,27,209,23],[253,28,209,24,"msg"],[253,31,209,27],[253,32,209,28],[254,12,210,8],[254,16,210,12],[254,20,210,16],[254,21,210,17,"onServerDisconnectError"],[254,44,210,40],[254,48,210,44,"event"],[254,53,210,49],[254,54,210,50,"reason"],[254,60,210,56],[254,62,210,58],[255,14,211,10],[255,18,211,14],[255,19,211,15,"onServerDisconnectError"],[255,42,211,38],[255,43,211,39,"msg"],[255,46,211,42],[255,47,211,43],[256,12,212,8],[257,10,213,6],[258,10,214,6],[258,14,214,12,"reason"],[258,20,214,18],[258,23,214,21,"classifyDisconnectError"],[258,46,214,44],[258,47,214,45,"event"],[258,52,214,50],[258,53,214,51,"reason"],[258,59,214,57],[258,60,214,58],[259,10,215,6],[259,14,215,10],[259,15,215,11,"scheduleReconnect"],[259,32,215,28],[259,33,215,29,"reason"],[259,39,215,35],[259,40,215,36],[260,10,216,6],[261,8,217,4],[261,9,217,5],[262,6,218,2],[263,6,219,2],[264,0,220,0],[265,0,221,0],[266,4,219,2],[267,6,219,2,"key"],[267,9,219,2],[268,6,219,2,"value"],[268,11,219,2],[268,13,222,2],[268,22,222,2,"socketState"],[268,33,222,13,"socketState"],[268,34,222,13],[268,36,222,16],[269,8,223,4],[269,15,223,11],[269,19,223,15],[269,20,223,16,"socket"],[269,26,223,22],[269,27,223,23,"state"],[269,32,223,28],[270,6,224,2],[271,6,225,2],[272,0,226,0],[273,0,227,0],[274,0,228,0],[275,4,225,2],[276,6,225,2,"key"],[276,9,225,2],[277,6,225,2,"value"],[277,11,225,2],[277,13,229,2],[277,22,229,2,"sendMessage"],[277,33,229,13,"sendMessage"],[277,34,229,14,"message"],[277,41,229,21],[277,43,229,23],[278,8,230,4],[278,12,230,10,"messageForLog"],[278,25,230,23],[278,28,230,26],[279,10,231,6,"type"],[279,14,231,10],[279,16,231,12,"message"],[279,23,231,19],[279,24,231,20,"type"],[279,28,231,24],[280,10,232,6],[280,14,232,9,"message"],[280,21,232,16],[280,22,232,17,"type"],[280,26,232,21],[280,31,232,26],[280,45,232,40],[280,49,232,44,"message"],[280,56,232,51],[280,57,232,52,"tokenType"],[280,66,232,61],[280,71,232,66],[280,77,232,72],[280,80,232,75],[281,12,233,8,"value"],[281,17,233,13],[281,19,233,15],[281,25,233,21,"message"],[281,32,233,28],[281,33,233,29,"value"],[281,38,233,34],[281,39,233,35,"slice"],[281,44,233,40],[281,45,233,41],[281,46,233,42],[281,47,233,43],[281,48,233,44],[282,10,234,6],[282,11,234,7],[282,14,234,10],[282,15,234,11],[282,16,234,12],[283,8,235,4],[283,9,235,5],[284,8,236,4],[284,12,236,8],[284,16,236,12],[284,17,236,13,"socket"],[284,23,236,19],[284,24,236,20,"state"],[284,29,236,25],[284,34,236,30],[284,41,236,37],[284,45,236,41],[284,49,236,45],[284,50,236,46,"socket"],[284,56,236,52],[284,57,236,53,"paused"],[284,63,236,59],[284,68,236,64],[284,72,236,68],[284,74,236,70],[285,10,237,6],[285,14,237,12,"encodedMessage"],[285,28,237,26],[285,31,237,29],[285,32,237,30],[285,33,237,31],[285,35,237,33,"import_protocol"],[285,50,237,48],[285,51,237,49,"encodeClientMessage"],[285,70,237,68],[285,72,237,70,"message"],[285,79,237,77],[285,80,237,78],[286,10,238,6],[286,14,238,12,"request"],[286,21,238,19],[286,24,238,22,"JSON"],[286,28,238,26],[286,29,238,27,"stringify"],[286,38,238,36],[286,39,238,37,"encodedMessage"],[286,53,238,51],[286,54,238,52],[287,10,239,6],[287,14,239,10,"sent"],[287,18,239,14],[287,21,239,17],[287,26,239,22],[288,10,240,6],[288,14,240,10],[289,12,241,8],[289,16,241,12],[289,17,241,13,"socket"],[289,23,241,19],[289,24,241,20,"ws"],[289,26,241,22],[289,27,241,23,"send"],[289,31,241,27],[289,32,241,28,"request"],[289,39,241,35],[289,40,241,36],[290,12,242,8,"sent"],[290,16,242,12],[290,19,242,15],[290,23,242,19],[291,10,243,6],[291,11,243,7],[291,12,243,8],[291,19,243,15,"error"],[291,24,243,20],[291,26,243,22],[292,12,244,8],[292,16,244,12],[292,17,244,13,"logger"],[292,23,244,19],[292,24,244,20,"log"],[292,27,244,23],[292,28,245,10],[292,82,245,64,"error"],[292,87,245,69],[292,89,246,8],[292,90,246,9],[293,12,247,8],[293,16,247,12],[293,17,247,13,"closeAndReconnect"],[293,34,247,30],[293,35,247,31],[293,56,247,52],[293,57,247,53],[294,10,248,6],[295,10,249,6],[295,14,249,10],[295,15,249,11,"_logVerbose"],[295,26,249,22],[295,27,250,8],[295,30,250,11,"sent"],[295,34,250,15],[295,37,250,18],[295,43,250,24],[295,46,250,27],[295,62,250,43],[295,84,250,65,"message"],[295,91,250,72],[295,92,250,73,"type"],[295,96,250,77],[295,101,250,82,"JSON"],[295,105,250,86],[295,106,250,87,"stringify"],[295,115,250,96],[295,116,251,10,"messageForLog"],[295,129,252,8],[295,130,252,9],[295,132,253,6],[295,133,253,7],[296,10,254,6],[296,17,254,13],[296,21,254,17],[297,8,255,4],[298,8,256,4],[298,12,256,8],[298,13,256,9,"_logVerbose"],[298,24,256,20],[298,25,257,6],[298,60,257,41],[298,64,257,45],[298,65,257,46,"socket"],[298,71,257,52],[298,72,257,53,"state"],[298,77,257,58],[298,90,257,71],[298,98,257,79],[298,102,257,83],[298,106,257,87],[298,107,257,88,"socket"],[298,113,257,94],[298,116,257,97],[298,120,257,101],[298,121,257,102,"socket"],[298,127,257,108],[298,128,257,109,"paused"],[298,134,257,115],[298,137,257,118],[298,142,257,123],[298,143,257,124],[298,149,257,130,"JSON"],[298,153,257,134],[298,154,257,135,"stringify"],[298,163,257,144],[298,164,258,8,"messageForLog"],[298,177,259,6],[298,178,259,7],[298,180,260,4],[298,181,260,5],[299,8,261,4],[299,15,261,11],[299,20,261,16],[300,6,262,2],[301,4,262,3],[302,6,262,3,"key"],[302,9,262,3],[303,6,262,3,"value"],[303,11,262,3],[303,13,263,2],[303,22,263,2,"resetServerInactivityTimeout"],[303,50,263,30,"resetServerInactivityTimeout"],[303,51,263,30],[303,53,263,33],[304,8,264,4],[304,12,264,8],[304,16,264,12],[304,17,264,13,"socket"],[304,23,264,19],[304,24,264,20,"state"],[304,29,264,25],[304,34,264,30],[304,46,264,42],[304,48,264,44],[305,10,265,6],[306,8,266,4],[307,8,267,4],[307,12,267,8],[307,16,267,12],[307,17,267,13,"reconnectDueToServerInactivityTimeout"],[307,54,267,50],[307,59,267,55],[307,63,267,59],[307,65,267,61],[308,10,268,6,"clearTimeout"],[308,22,268,18],[308,23,268,19],[308,27,268,23],[308,28,268,24,"reconnectDueToServerInactivityTimeout"],[308,65,268,61],[308,66,268,62],[309,10,269,6],[309,14,269,10],[309,15,269,11,"reconnectDueToServerInactivityTimeout"],[309,52,269,48],[309,55,269,51],[309,59,269,55],[310,8,270,4],[311,8,271,4],[311,12,271,8],[311,13,271,9,"reconnectDueToServerInactivityTimeout"],[311,50,271,46],[311,53,271,49,"setTimeout"],[311,63,271,59],[311,64,271,60],[311,70,271,66],[312,10,272,6],[312,14,272,10],[312,15,272,11,"closeAndReconnect"],[312,32,272,28],[312,33,272,29],[312,49,272,45],[312,50,272,46],[313,8,273,4],[313,9,273,5],[313,11,273,7],[313,15,273,11],[313,16,273,12,"serverInactivityThreshold"],[313,41,273,37],[313,42,273,38],[314,6,274,2],[315,4,274,3],[316,6,274,3,"key"],[316,9,274,3],[317,6,274,3,"value"],[317,11,274,3],[317,13,275,2],[317,22,275,2,"scheduleReconnect"],[317,39,275,19,"scheduleReconnect"],[317,40,275,20,"reason"],[317,46,275,26],[317,48,275,28],[318,8,276,4],[318,12,276,8],[318,13,276,9,"socket"],[318,19,276,15],[318,22,276,18],[319,10,276,20,"state"],[319,15,276,25],[319,17,276,27],[320,8,276,42],[320,9,276,43],[321,8,277,4],[321,12,277,10,"backoff"],[321,19,277,17],[321,22,277,20],[321,26,277,24],[321,27,277,25,"nextBackoff"],[321,38,277,36],[321,39,277,37,"reason"],[321,45,277,43],[321,46,277,44],[322,8,278,4],[322,12,278,8],[322,13,278,9,"markConnectionStateDirty"],[322,37,278,33],[322,38,278,34],[322,39,278,35],[323,8,279,4],[323,12,279,8],[323,13,279,9,"logger"],[323,19,279,15],[323,20,279,16,"log"],[323,23,279,19],[323,24,279,20],[323,51,279,47,"Math"],[323,55,279,51],[323,56,279,52,"round"],[323,61,279,57],[323,62,279,58,"backoff"],[323,69,279,65],[323,70,279,66],[323,74,279,70],[323,75,279,71],[324,8,280,4,"setTimeout"],[324,18,280,14],[324,19,280,15],[324,25,280,21],[324,29,280,25],[324,30,280,26,"connect"],[324,37,280,33],[324,38,280,34],[324,39,280,35],[324,41,280,37,"backoff"],[324,48,280,44],[324,49,280,45],[325,6,281,2],[326,6,282,2],[327,0,283,0],[328,0,284,0],[329,0,285,0],[330,0,286,0],[331,4,282,2],[332,6,282,2,"key"],[332,9,282,2],[333,6,282,2,"value"],[333,11,282,2],[333,13,287,2],[333,22,287,2,"closeAndReconnect"],[333,39,287,19,"closeAndReconnect"],[333,40,287,20,"closeReason"],[333,51,287,31],[333,53,287,33],[334,8,288,4],[334,12,288,8],[334,13,288,9,"_logVerbose"],[334,24,288,20],[334,25,288,21],[334,64,288,60,"closeReason"],[334,75,288,71],[334,77,288,73],[334,78,288,74],[335,8,289,4],[335,16,289,12],[335,20,289,16],[335,21,289,17,"socket"],[335,27,289,23],[335,28,289,24,"state"],[335,33,289,29],[336,10,290,6],[336,15,290,11],[336,29,290,25],[337,10,291,6],[337,15,291,11],[337,27,291,23],[338,10,292,6],[338,15,292,11],[338,24,292,20],[339,12,293,8],[340,10,294,6],[340,15,294,11],[340,27,294,23],[341,10,295,6],[341,15,295,11],[341,22,295,18],[342,12,295,20],[343,14,296,8],[343,18,296,12],[343,19,296,13,"lastCloseReason"],[343,34,296,28],[343,37,296,31,"closeReason"],[343,48,296,42],[344,14,297,8],[344,19,297,13],[344,23,297,17],[344,24,297,18,"close"],[344,29,297,23],[344,30,297,24],[344,31,297,25],[345,14,298,8],[345,18,298,12],[345,19,298,13,"scheduleReconnect"],[345,36,298,30],[345,37,298,31],[345,45,298,39],[345,46,298,40],[346,14,299,8],[347,12,300,6],[348,10,301,6],[349,12,301,15],[350,14,302,8],[350,18,302,12],[350,19,302,13,"socket"],[350,25,302,19],[351,12,303,6],[352,8,304,4],[353,6,305,2],[354,6,306,2],[355,0,307,0],[356,0,308,0],[357,0,309,0],[358,0,310,0],[359,0,311,0],[360,0,312,0],[361,4,306,2],[362,6,306,2,"key"],[362,9,306,2],[363,6,306,2,"value"],[363,11,306,2],[363,13,313,2],[363,22,313,2,"close"],[363,27,313,7,"close"],[363,28,313,7],[363,30,313,10],[364,8,314,4],[364,16,314,12],[364,20,314,16],[364,21,314,17,"socket"],[364,27,314,23],[364,28,314,24,"state"],[364,33,314,29],[365,10,315,6],[365,15,315,11],[365,29,315,25],[366,10,316,6],[366,15,316,11],[366,27,316,23],[367,10,317,6],[367,15,317,11],[367,24,317,20],[368,12,318,8],[368,19,318,15,"Promise"],[368,26,318,22],[368,27,318,23,"resolve"],[368,34,318,30],[368,35,318,31],[368,36,318,32],[369,10,319,6],[369,15,319,11],[369,27,319,23],[370,12,319,25],[371,14,320,8],[371,18,320,14,"ws"],[371,20,320,16],[371,23,320,19],[371,27,320,23],[371,28,320,24,"socket"],[371,34,320,30],[371,35,320,31,"ws"],[371,37,320,33],[372,14,321,8],[372,21,321,15],[372,25,321,19,"Promise"],[372,32,321,26],[372,33,321,28,"r"],[372,34,321,29],[372,38,321,34],[373,16,322,10,"ws"],[373,18,322,12],[373,19,322,13,"onclose"],[373,26,322,20],[373,29,322,23],[373,35,322,29],[374,18,323,12],[374,22,323,16],[374,23,323,17,"_logVerbose"],[374,34,323,28],[374,35,323,29],[374,60,323,54],[374,61,323,55],[375,18,324,12,"r"],[375,19,324,13],[375,20,324,14],[375,21,324,15],[376,16,325,10],[376,17,325,11],[377,16,326,10,"ws"],[377,18,326,12],[377,19,326,13,"onopen"],[377,25,326,19],[377,28,326,22],[377,34,326,28],[378,18,327,12],[378,22,327,16],[378,23,327,17,"_logVerbose"],[378,34,327,28],[378,35,327,29],[378,60,327,54],[378,61,327,55],[379,18,328,12,"ws"],[379,20,328,14],[379,21,328,15,"close"],[379,26,328,20],[379,27,328,21],[379,28,328,22],[380,16,329,10],[380,17,329,11],[381,14,330,8],[381,15,330,9],[381,16,330,10],[382,12,331,6],[383,10,332,6],[383,15,332,11],[383,22,332,18],[384,12,332,20],[385,14,333,8],[385,18,333,12],[385,19,333,13,"_logVerbose"],[385,30,333,24],[385,31,333,25],[385,48,333,42],[385,49,333,43],[386,14,334,8],[386,18,334,14,"ws"],[386,21,334,16],[386,24,334,19],[386,28,334,23],[386,29,334,24,"socket"],[386,35,334,30],[386,36,334,31,"ws"],[386,38,334,33],[387,14,335,8],[387,18,335,14,"result"],[387,24,335,20],[387,27,335,23],[387,31,335,27,"Promise"],[387,38,335,34],[387,39,335,36,"r"],[387,40,335,37],[387,44,335,42],[388,16,336,10,"ws"],[388,19,336,12],[388,20,336,13,"onclose"],[388,27,336,20],[388,30,336,23],[388,36,336,29],[389,18,337,12,"r"],[389,19,337,13],[389,20,337,14],[389,21,337,15],[390,16,338,10],[390,17,338,11],[391,14,339,8],[391,15,339,9],[391,16,339,10],[392,14,340,8,"ws"],[392,17,340,10],[392,18,340,11,"close"],[392,23,340,16],[392,24,340,17],[392,25,340,18],[393,14,341,8],[393,21,341,15,"result"],[393,27,341,21],[394,12,342,6],[395,10,343,6],[396,12,343,15],[397,14,344,8],[397,18,344,12],[397,19,344,13,"socket"],[397,25,344,19],[398,14,345,8],[398,21,345,15,"Promise"],[398,28,345,22],[398,29,345,23,"resolve"],[398,36,345,30],[398,37,345,31],[398,38,345,32],[399,12,346,6],[400,8,347,4],[401,6,348,2],[402,6,349,2],[403,0,350,0],[404,0,351,0],[405,0,352,0],[406,4,349,2],[407,6,349,2,"key"],[407,9,349,2],[408,6,349,2,"value"],[408,11,349,2],[408,13,353,2],[408,22,353,2,"terminate"],[408,31,353,11,"terminate"],[408,32,353,11],[408,34,353,14],[409,8,354,4],[409,12,354,8],[409,16,354,12],[409,17,354,13,"reconnectDueToServerInactivityTimeout"],[409,54,354,50],[409,56,354,52],[410,10,355,6,"clearTimeout"],[410,22,355,18],[410,23,355,19],[410,27,355,23],[410,28,355,24,"reconnectDueToServerInactivityTimeout"],[410,65,355,61],[410,66,355,62],[411,8,356,4],[412,8,357,4],[412,16,357,12],[412,20,357,16],[412,21,357,17,"socket"],[412,27,357,23],[412,28,357,24,"state"],[412,33,357,29],[413,10,358,6],[413,15,358,11],[413,27,358,23],[414,10,359,6],[414,15,359,11],[414,24,359,20],[415,10,360,6],[415,15,360,11],[415,29,360,25],[416,10,361,6],[416,15,361,11],[416,27,361,23],[417,10,362,6],[417,15,362,11],[417,22,362,18],[418,12,362,20],[419,14,363,8],[419,18,363,14,"result"],[419,24,363,20],[419,27,363,23],[419,31,363,27],[419,32,363,28,"close"],[419,37,363,33],[419,38,363,34],[419,39,363,35],[420,14,364,8],[420,18,364,12],[420,19,364,13,"setSocketState"],[420,33,364,27],[420,34,364,28],[421,16,364,30,"state"],[421,21,364,35],[421,23,364,37],[422,14,364,50],[422,15,364,51],[422,16,364,52],[423,14,365,8],[423,21,365,15,"result"],[423,27,365,21],[424,12,366,6],[425,10,367,6],[426,12,367,15],[427,14,368,8],[427,18,368,12],[427,19,368,13,"socket"],[427,25,368,19],[428,14,369,8],[428,20,369,14],[428,24,369,18,"Error"],[428,29,369,23],[428,30,370,10],[428,58,370,38],[428,62,370,42],[428,63,370,43,"socket"],[428,69,370,49],[428,70,370,50,"state"],[428,75,370,55],[428,77,371,8],[428,78,371,9],[429,12,372,6],[430,8,373,4],[431,6,374,2],[432,4,374,3],[433,6,374,3,"key"],[433,9,374,3],[434,6,374,3,"value"],[434,11,374,3],[434,13,375,2],[434,22,375,2,"stop"],[434,26,375,6,"stop"],[434,27,375,6],[434,29,375,9],[435,8,376,4],[435,16,376,12],[435,20,376,16],[435,21,376,17,"socket"],[435,27,376,23],[435,28,376,24,"state"],[435,33,376,29],[436,10,377,6],[436,15,377,11],[436,27,377,23],[437,12,378,8],[437,19,378,15,"Promise"],[437,26,378,22],[437,27,378,23,"resolve"],[437,34,378,30],[437,35,378,31],[437,36,378,32],[438,10,379,6],[438,15,379,11],[438,27,379,23],[439,10,380,6],[439,15,380,11],[439,24,380,20],[440,10,381,6],[440,15,381,11],[440,29,381,25],[441,10,382,6],[441,15,382,11],[441,22,382,18],[442,12,382,20],[443,14,383,8],[443,18,383,14,"result"],[443,24,383,20],[443,27,383,23],[443,31,383,27],[443,32,383,28,"close"],[443,37,383,33],[443,38,383,34],[443,39,383,35],[444,14,384,8],[444,18,384,12],[444,19,384,13,"socket"],[444,25,384,19],[444,28,384,22],[445,16,384,24,"state"],[445,21,384,29],[445,23,384,31],[446,14,384,41],[446,15,384,42],[447,14,385,8],[447,21,385,15,"result"],[447,27,385,21],[448,12,386,6],[449,10,387,6],[450,12,387,15],[451,14,388,8],[451,18,388,12],[451,19,388,13,"socket"],[451,25,388,19],[452,14,389,8],[452,21,389,15,"Promise"],[452,28,389,22],[452,29,389,23,"resolve"],[452,36,389,30],[452,37,389,31],[452,38,389,32],[453,12,390,6],[454,8,391,4],[455,6,392,2],[456,6,393,2],[457,0,394,0],[458,0,395,0],[459,0,396,0],[460,4,393,2],[461,6,393,2,"key"],[461,9,393,2],[462,6,393,2,"value"],[462,11,393,2],[462,13,397,2],[462,22,397,2,"tryRestart"],[462,32,397,12,"tryRestart"],[462,33,397,12],[462,35,397,15],[463,8,398,4],[463,16,398,12],[463,20,398,16],[463,21,398,17,"socket"],[463,27,398,23],[463,28,398,24,"state"],[463,33,398,29],[464,10,399,6],[464,15,399,11],[464,24,399,20],[465,12,400,8],[466,10,401,6],[466,15,401,11],[466,27,401,23],[467,10,402,6],[467,15,402,11],[467,27,402,23],[468,10,403,6],[468,15,403,11],[468,22,403,18],[469,10,404,6],[469,15,404,11],[469,29,404,25],[470,12,405,8],[470,16,405,12],[470,17,405,13,"logger"],[470,23,405,19],[470,24,405,20,"logVerbose"],[470,34,405,30],[470,35,405,31],[470,74,405,70],[470,75,405,71],[471,12,406,8],[472,10,407,6],[473,12,407,15],[474,14,408,8],[474,18,408,12],[474,19,408,13,"socket"],[474,25,408,19],[475,12,409,6],[476,8,410,4],[477,8,411,4],[477,12,411,8],[477,13,411,9,"connect"],[477,20,411,16],[477,21,411,17],[477,22,411,18],[478,6,412,2],[479,4,412,3],[480,6,412,3,"key"],[480,9,412,3],[481,6,412,3,"value"],[481,11,412,3],[481,13,413,2],[481,22,413,2,"pause"],[481,27,413,7,"pause"],[481,28,413,7],[481,30,413,10],[482,8,414,4],[482,16,414,12],[482,20,414,16],[482,21,414,17,"socket"],[482,27,414,23],[482,28,414,24,"state"],[482,33,414,29],[483,10,415,6],[483,15,415,11],[483,29,415,25],[484,10,416,6],[484,15,416,11],[484,24,416,20],[485,10,417,6],[485,15,417,11],[485,27,417,23],[486,12,418,8],[487,10,419,6],[487,15,419,11],[487,27,419,23],[488,10,420,6],[488,15,420,11],[488,22,420,18],[489,12,420,20],[490,14,421,8],[490,18,421,12],[490,19,421,13,"socket"],[490,25,421,19],[490,28,421,22],[491,16,421,24],[491,19,421,27],[491,23,421,31],[491,24,421,32,"socket"],[491,30,421,38],[492,16,421,40,"paused"],[492,22,421,46],[492,24,421,48],[493,14,421,54],[493,15,421,55],[494,14,422,8],[495,12,423,6],[496,10,424,6],[497,12,424,15],[498,14,425,8],[498,18,425,12],[498,19,425,13,"socket"],[498,25,425,19],[499,14,426,8],[500,12,427,6],[501,8,428,4],[502,6,429,2],[503,6,430,2],[504,0,431,0],[505,0,432,0],[506,4,430,2],[507,6,430,2,"key"],[507,9,430,2],[508,6,430,2,"value"],[508,11,430,2],[508,13,433,2],[508,22,433,2,"resume"],[508,28,433,8,"resume"],[508,29,433,8],[508,31,433,11],[509,8,434,4],[509,16,434,12],[509,20,434,16],[509,21,434,17,"socket"],[509,27,434,23],[509,28,434,24,"state"],[509,33,434,29],[510,10,435,6],[510,15,435,11],[510,27,435,23],[511,12,436,8],[511,16,436,12],[511,17,436,13,"socket"],[511,23,436,19],[511,26,436,22],[512,14,436,24],[512,17,436,27],[512,21,436,31],[512,22,436,32,"socket"],[512,28,436,38],[513,14,436,40,"paused"],[513,20,436,46],[513,22,436,48],[514,12,436,53],[514,13,436,54],[515,12,437,8],[516,10,438,6],[516,15,438,11],[516,22,438,18],[517,12,439,8],[517,16,439,12],[517,20,439,16],[517,21,439,17,"socket"],[517,27,439,23],[517,28,439,24,"paused"],[517,34,439,30],[517,39,439,35],[517,54,439,50],[517,56,439,52],[518,14,440,10],[518,18,440,14],[518,19,440,15,"socket"],[518,25,440,21],[518,28,440,24],[519,16,440,26],[519,19,440,29],[519,23,440,33],[519,24,440,34,"socket"],[519,30,440,40],[520,16,440,42,"paused"],[520,22,440,48],[520,24,440,50],[521,14,440,55],[521,15,440,56],[522,14,441,10],[522,18,441,14],[522,19,441,15,"onOpen"],[522,25,441,21],[522,26,441,22],[523,16,442,12,"connectionCount"],[523,31,442,27],[523,33,442,29],[523,37,442,33],[523,38,442,34,"connectionCount"],[523,53,442,49],[524,16,443,12,"lastCloseReason"],[524,31,443,27],[524,33,443,29],[524,37,443,33],[524,38,443,34,"lastCloseReason"],[524,53,443,49],[525,16,444,12,"clientTs"],[525,24,444,20],[525,26,444,22,"monotonicMillis"],[525,41,444,37],[525,42,444,38],[526,14,445,10],[526,15,445,11],[526,16,445,12],[527,12,446,8],[527,13,446,9],[527,19,446,15],[527,23,446,19],[527,27,446,23],[527,28,446,24,"socket"],[527,34,446,30],[527,35,446,31,"paused"],[527,41,446,37],[527,46,446,42],[527,51,446,47],[527,53,446,49],[528,14,447,10],[528,18,447,14],[528,19,447,15,"socket"],[528,25,447,21],[528,28,447,24],[529,16,447,26],[529,19,447,29],[529,23,447,33],[529,24,447,34,"socket"],[529,30,447,40],[530,16,447,42,"paused"],[530,22,447,48],[530,24,447,50],[531,14,447,55],[531,15,447,56],[532,14,448,10],[532,18,448,14],[532,19,448,15,"onResume"],[532,27,448,23],[532,28,448,24],[532,29,448,25],[533,12,449,8],[534,12,450,8],[535,10,451,6],[535,15,451,11],[535,27,451,23],[536,10,452,6],[536,15,452,11],[536,24,452,20],[537,10,453,6],[537,15,453,11],[537,29,453,25],[538,12,454,8],[539,10,455,6],[540,12,455,15],[541,14,456,8],[541,18,456,12],[541,19,456,13,"socket"],[541,25,456,19],[542,12,457,6],[543,8,458,4],[544,8,459,4],[544,12,459,8],[544,13,459,9,"connect"],[544,20,459,16],[544,21,459,17],[544,22,459,18],[545,6,460,2],[546,4,460,3],[547,6,460,3,"key"],[547,9,460,3],[548,6,460,3,"value"],[548,11,460,3],[548,13,461,2],[548,22,461,2,"connectionState"],[548,37,461,17,"connectionState"],[548,38,461,17],[548,40,461,20],[549,8,462,4],[549,15,462,11],[550,10,463,6,"isConnected"],[550,21,463,17],[550,23,463,19],[550,27,463,23],[550,28,463,24,"socket"],[550,34,463,30],[550,35,463,31,"state"],[550,40,463,36],[550,45,463,41],[550,52,463,48],[551,10,464,6,"hasEverConnected"],[551,26,464,22],[551,28,464,24],[551,32,464,28],[551,33,464,29,"_hasEverConnected"],[551,50,464,46],[552,10,465,6,"connectionCount"],[552,25,465,21],[552,27,465,23],[552,31,465,27],[552,32,465,28,"connectionCount"],[552,47,465,43],[553,10,466,6,"connectionRetries"],[553,27,466,23],[553,29,466,25],[553,33,466,29],[553,34,466,30,"retries"],[554,8,467,4],[554,9,467,5],[555,6,468,2],[556,4,468,3],[557,6,468,3,"key"],[557,9,468,3],[558,6,468,3,"value"],[558,11,468,3],[558,13,469,2],[558,22,469,2,"_logVerbose"],[558,33,469,13,"_logVerbose"],[558,34,469,14,"message"],[558,41,469,21],[558,43,469,23],[559,8,470,4],[559,12,470,8],[559,13,470,9,"logger"],[559,19,470,15],[559,20,470,16,"logVerbose"],[559,30,470,26],[559,31,470,27,"message"],[559,38,470,34],[559,39,470,35],[560,6,471,2],[561,4,471,3],[562,6,471,3,"key"],[562,9,471,3],[563,6,471,3,"value"],[563,11,471,3],[563,13,472,2],[563,22,472,2,"nextBackoff"],[563,33,472,13,"nextBackoff"],[563,34,472,14,"reason"],[563,40,472,20],[563,42,472,22],[564,8,473,4],[564,12,473,10,"initialBackoff"],[564,26,473,24],[564,29,473,27,"reason"],[564,35,473,33],[564,40,473,38],[564,48,473,46],[564,51,473,49],[564,54,473,52],[564,57,473,55,"reason"],[564,63,473,61],[564,68,473,66],[564,77,473,75],[564,80,473,78],[564,84,473,82],[564,85,473,83,"defaultInitialBackoff"],[564,106,473,104],[564,109,473,107,"serverDisconnectErrors"],[564,131,473,129],[564,132,473,130,"reason"],[564,138,473,136],[564,139,473,137],[564,140,473,138,"timeout"],[564,147,473,145],[565,8,474,4],[565,12,474,10,"baseBackoff"],[565,23,474,21],[565,26,474,24,"initialBackoff"],[565,40,474,38],[565,43,474,41,"Math"],[565,47,474,45],[565,48,474,46,"pow"],[565,51,474,49],[565,52,474,50],[565,53,474,51],[565,55,474,53],[565,59,474,57],[565,60,474,58,"retries"],[565,67,474,65],[565,68,474,66],[566,8,475,4],[566,12,475,8],[566,13,475,9,"retries"],[566,20,475,16],[566,24,475,20],[566,25,475,21],[567,8,476,4],[567,12,476,10,"actualBackoff"],[567,25,476,23],[567,28,476,26,"Math"],[567,32,476,30],[567,33,476,31,"min"],[567,36,476,34],[567,37,476,35,"baseBackoff"],[567,48,476,46],[567,50,476,48],[567,54,476,52],[567,55,476,53,"maxBackoff"],[567,65,476,63],[567,66,476,64],[568,8,477,4],[568,12,477,10,"jitter"],[568,18,477,16],[568,21,477,19,"actualBackoff"],[568,34,477,32],[568,38,477,36,"Math"],[568,42,477,40],[568,43,477,41,"random"],[568,49,477,47],[568,50,477,48],[568,51,477,49],[568,54,477,52],[568,57,477,55],[568,58,477,56],[569,8,478,4],[569,15,478,11,"actualBackoff"],[569,28,478,24],[569,31,478,27,"jitter"],[569,37,478,33],[570,6,479,2],[571,4,479,3],[572,6,479,3,"key"],[572,9,479,3],[573,6,479,3,"value"],[573,11,479,3],[573,13,480,2],[573,22,480,2,"reportLargeTransition"],[573,43,480,23,"reportLargeTransition"],[573,44,480,23,"_ref"],[573,48,480,23],[573,50,483,5],[574,8,483,5],[574,12,481,4,"transition"],[574,22,481,14],[574,25,481,14,"_ref"],[574,29,481,14],[574,30,481,4,"transition"],[574,40,481,14],[575,10,482,4,"messageLength"],[575,23,482,17],[575,26,482,17,"_ref"],[575,30,482,17],[575,31,482,4,"messageLength"],[575,44,482,17],[576,8,484,4],[576,12,484,8,"transition"],[576,22,484,18],[576,23,484,19,"clientClockSkew"],[576,38,484,34],[576,43,484,39],[576,48,484,44],[576,49,484,45],[576,53,484,49,"transition"],[576,63,484,59],[576,64,484,60,"serverTs"],[576,72,484,68],[576,77,484,73],[576,82,484,78],[576,83,484,79],[576,85,484,81],[577,10,485,6],[578,8,486,4],[579,8,487,4],[579,12,487,10,"transitionTransitTime"],[579,33,487,31],[579,36,487,34,"monotonicMillis"],[579,51,487,49],[579,52,487,50],[579,53,487,51],[580,8,487,54],[581,8,488,4],[582,8,489,4],[583,8,490,4],[584,8,491,4,"transition"],[584,18,491,14],[584,19,491,15,"clientClockSkew"],[584,34,491,30],[584,37,491,33,"transition"],[584,47,491,43],[584,48,491,44,"serverTs"],[584,56,491,52],[584,59,491,55],[584,62,491,58],[585,8,492,4],[585,12,492,10,"prettyTransitionTime"],[585,32,492,30],[585,35,492,33],[585,38,492,36,"Math"],[585,42,492,40],[585,43,492,41,"round"],[585,48,492,46],[585,49,492,47,"transitionTransitTime"],[585,70,492,68],[585,71,492,69],[585,75,492,73],[586,8,493,4],[586,12,493,10,"prettyMessageMB"],[586,27,493,25],[586,30,493,28],[586,33,493,31,"Math"],[586,37,493,35],[586,38,493,36,"round"],[586,43,493,41],[586,44,493,42,"messageLength"],[586,57,493,55],[586,60,493,58],[586,63,493,61],[586,64,493,62],[586,67,493,65],[586,70,493,68],[586,74,493,72],[587,8,494,4],[587,12,494,10,"bytesPerSecond"],[587,26,494,24],[587,29,494,27,"messageLength"],[587,42,494,40],[587,46,494,44,"transitionTransitTime"],[587,67,494,65],[587,70,494,68],[587,73,494,71],[587,74,494,72],[588,8,495,4],[588,12,495,10,"prettyBytesPerSecond"],[588,32,495,30],[588,35,495,33],[588,38,495,36,"Math"],[588,42,495,40],[588,43,495,41,"round"],[588,48,495,46],[588,49,495,47,"bytesPerSecond"],[588,63,495,61],[588,66,495,64],[588,69,495,67],[588,70,495,68],[588,73,495,71],[588,76,495,74],[588,91,495,89],[589,8,496,4],[589,12,496,8],[589,13,496,9,"_logVerbose"],[589,24,496,20],[589,25,497,6],[589,37,497,18,"prettyMessageMB"],[589,52,497,33],[589,70,497,51,"prettyTransitionTime"],[589,90,497,71],[589,97,497,78,"prettyBytesPerSecond"],[589,117,497,98],[589,119,498,4],[589,120,498,5],[590,8,499,4],[590,12,499,8,"messageLength"],[590,25,499,21],[590,28,499,24],[590,31,499,27],[590,33,499,29],[591,10,500,6],[591,14,500,10],[591,15,500,11,"logger"],[591,21,500,17],[591,22,500,18,"log"],[591,25,500,21],[591,26,501,8],[591,77,501,59,"prettyMessageMB"],[591,92,501,74],[591,157,502,6],[591,158,502,7],[592,8,503,4],[592,9,503,5],[592,15,503,11],[592,19,503,15,"transitionTransitTime"],[592,40,503,36],[592,43,503,39],[592,46,503,42],[592,48,503,44],[593,10,504,6],[593,14,504,10],[593,15,504,11,"logger"],[593,21,504,17],[593,22,504,18,"log"],[593,25,504,21],[593,26,505,8],[593,61,505,43,"prettyMessageMB"],[593,76,505,58],[593,116,505,98,"prettyTransitionTime"],[593,136,505,118],[593,139,506,6],[593,140,506,7],[594,8,507,4],[595,8,508,4],[595,12,508,8],[595,16,508,12],[595,17,508,13,"debug"],[595,22,508,18],[595,24,508,20],[596,10,509,6],[596,14,509,10,"transitionTransitTime"],[596,35,509,31],[596,38,509,34],[596,41,509,37],[596,43,509,39],[597,12,510,8],[597,16,510,12],[597,17,510,13,"sendMessage"],[597,28,510,24],[597,29,510,25],[598,14,511,10,"type"],[598,18,511,14],[598,20,511,16],[598,27,511,23],[599,14,512,10,"eventType"],[599,23,512,19],[599,25,512,21],[599,51,512,47],[600,14,513,10,"event"],[600,19,513,15],[600,21,513,17],[601,16,513,19,"transitionTransitTime"],[601,37,513,40],[602,16,513,42,"messageLength"],[603,14,513,56],[604,12,514,8],[604,13,514,9],[604,14,514,10],[605,10,515,6],[606,8,516,4],[607,6,517,2],[608,4,517,3],[609,2,517,3],[610,0,517,3],[610,3]],"functionMap":{"names":["<global>","__defNormalProp","__export","__copyProps","__defProp$argument_2.get","__toCommonJS","__publicField","__export$argument_1.WebSocketManager","monotonicMillis","prettyNow","classifyDisconnectError","WebSocketManager","WebSocketManager#constructor","WebSocketManager#setSocketState","WebSocketManager#connect","ws.onopen","ws.onerror","ws.onmessage","ws.onclose","WebSocketManager#socketState","WebSocketManager#sendMessage","WebSocketManager#resetServerInactivityTimeout","setTimeout$argument_0","WebSocketManager#scheduleReconnect","WebSocketManager#closeAndReconnect","WebSocketManager#close","Promise$argument_0","WebSocketManager#terminate","WebSocketManager#stop","WebSocketManager#tryRestart","WebSocketManager#pause","WebSocketManager#resume","WebSocketManager#connectionState","WebSocketManager#_logVerbose","WebSocketManager#nextBackoff","WebSocketManager#reportLargeTransition"],"mappings":"AAA;sBCK,yID;eEC;CFG;kBGC;kCCI,eD;CHG;mBKC,uEL;oBMC,0FN;oBOG,sBP;AQS;CRQ;ASC;CTE;AUqB;CVU;AWC;ECC;GDwC;EEC;GFM;EGC;gBCiB;KDiC;iBEC;KFK;mBGC;KHgB;iBIC;KJmB;GHC;EQI;GRE;ESK;GTiC;EUC;4DCQ;KDE;GVC;EYC;eDK,oBC;GZC;EaM;GbkB;EcQ;2BCQ;uBRC;WQG;sBXC;WWG;SDC;mCCK;uBRC;WQE;SDC;GdS;EgBK;GhBqB;EiBC;GjBiB;EkBK;GlBe;EmBC;GnBgB;EoBI;GpB2B;EqBC;GrBO;EsBC;GtBE;EuBC;GvBO;EwBC;GxBqC;CXC"},"hasCjsExports":true},"type":"js/module"}]}