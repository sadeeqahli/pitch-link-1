{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":48,"index":48}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":49},"end":{"line":2,"column":39,"index":88}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":78,"index":167}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./DevicePushTokenAutoRegistration.fx","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":168},"end":{"line":4,"column":93,"index":261}}],"key":"ZH5Mz79TLJE/dTuAobGrlWmVWRo=","exportNames":["*"],"imports":1}},{"name":"./ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":262},"end":{"line":5,"column":66,"index":328}}],"key":"OTliNP9lxRDJOLdh5XsGIjq12GA=","exportNames":["*"],"imports":1}},{"name":"./getDevicePushTokenAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":329},"end":{"line":6,"column":64,"index":393}}],"key":"XdMNnezmMyUe2eZLOsw/aE7Mhfk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getExpoPushTokenAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoApplication = require(_dependencyMap[1], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _expoModulesCore = require(_dependencyMap[3], \"expo-modules-core\");\n  var _DevicePushTokenAutoRegistrationFx = require(_dependencyMap[4], \"./DevicePushTokenAutoRegistration.fx\");\n  var _ServerRegistrationModule = require(_dependencyMap[5], \"./ServerRegistrationModule\");\n  var ServerRegistrationModule = _interopDefault(_ServerRegistrationModule);\n  var _getDevicePushTokenAsync = require(_dependencyMap[6], \"./getDevicePushTokenAsync\");\n  var getDevicePushTokenAsync = _interopDefault(_getDevicePushTokenAsync);\n  var productionBaseUrl = 'https://exp.host/--/api/v2/';\n  /**\n   * Returns an Expo token that can be used to send a push notification to the device using Expo's push notifications service.\n   *\n   * This method makes requests to the Expo's servers. It can get rejected in cases where the request itself fails\n   * (for example, due to the device being offline, experiencing a network timeout, or other HTTPS request failures).\n   * To provide offline support to your users, you should `try/catch` this method and implement retry logic to attempt\n   * to get the push token later, once the device is back online.\n   *\n   * > For Expo's backend to be able to send notifications to your app, you will need to provide it with push notification keys.\n   * For more information, see [credentials](/push-notifications/push-notifications-setup/#get-credentials-for-development-builds) in the push notifications setup.\n   *\n   * @param options Object allowing you to pass in push notification configuration.\n   * @return Returns a `Promise` that resolves to an object representing acquired push token.\n   * @header fetch\n   *\n   * @example\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * export async function registerForPushNotificationsAsync(userId: string) {\n   *   const expoPushToken = await Notifications.getExpoPushTokenAsync({\n   *    projectId: 'your-project-id',\n   *   });\n   *\n   *   await fetch('https://example.com/', {\n   *     method: 'POST',\n   *     headers: {\n   *       'Content-Type': 'application/json',\n   *     },\n   *     body: JSON.stringify({\n   *       userId,\n   *       expoPushToken,\n   *     }),\n   *   });\n   * }\n   * ```\n   */\n  function getExpoPushTokenAsync() {\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function _getExpoPushTokenAsync() {\n    _getExpoPushTokenAsync = (0, _asyncToGenerator.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var devicePushToken = options.devicePushToken || (yield (0, getDevicePushTokenAsync.default)());\n      var deviceId = options.deviceId || (yield getDeviceIdAsync());\n      // Depending on the runtime environment, the default may be located in various places.\n      var projectId = options.projectId || Constants.default.easConfig?.projectId || Constants.default.expoConfig?.extra?.eas?.projectId;\n      if (!projectId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_EXPERIENCE_ID', `No \"projectId\" found. If \"projectId\" can't be inferred from the manifest (for instance, in bare workflow), you have to pass it in yourself.`);\n      }\n      var applicationId = options.applicationId || Application.applicationId;\n      if (!applicationId) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NO_APPLICATION_ID', `No \"applicationId\" found. If it can't be inferred from native configuration by expo-application, you have to pass it in yourself.`);\n      }\n      var type = options.type || getTypeOfToken(devicePushToken);\n      var development = options.development || (yield shouldUseDevelopmentNotificationService());\n      var baseUrl = options.baseUrl ?? productionBaseUrl;\n      var url = options.url ?? `${baseUrl}push/getExpoPushToken`;\n      var body = {\n        type,\n        deviceId: deviceId.toLowerCase(),\n        development,\n        appId: applicationId,\n        deviceToken: getDeviceToken(devicePushToken),\n        projectId\n      };\n      var response = yield fetch(url, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).catch(error => {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_NETWORK_ERROR', `Error encountered while fetching Expo token: ${error}.`);\n      });\n      if (!response.ok) {\n        var statusInfo = response.statusText || response.status;\n        var _body = undefined;\n        try {\n          _body = yield response.text();\n        } catch {\n          // do nothing\n        }\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Error encountered while fetching Expo token, expected an OK response, received: ${statusInfo} (body: \"${_body}\").`);\n      }\n      var expoPushToken = getExpoPushToken(yield parseResponse(response));\n      try {\n        if (options.url || options.baseUrl) {\n          console.debug(`[expo-notifications] Since the URL endpoint to register in has been customized in the options, expo-notifications won't try to auto-update the device push token on the server.`);\n        } else {\n          yield (0, _DevicePushTokenAutoRegistrationFx.setAutoServerRegistrationEnabledAsync)(true);\n        }\n      } catch (e) {\n        console.warn('[expo-notifications] Could not enable automatically registering new device tokens with the Expo notification service', e);\n      }\n      return {\n        type: 'expo',\n        data: expoPushToken\n      };\n    });\n    return _getExpoPushTokenAsync.apply(this, arguments);\n  }\n  function parseResponse(_x) {\n    return _parseResponse.apply(this, arguments);\n  }\n  function _parseResponse() {\n    _parseResponse = (0, _asyncToGenerator.default)(function* (response) {\n      try {\n        return yield response.json();\n      } catch {\n        try {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received body: ${JSON.stringify(yield response.text())}.`);\n        } catch {\n          throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Expected a JSON response from server when fetching Expo token, received response: ${JSON.stringify(response)}.`);\n        }\n      }\n    });\n    return _parseResponse.apply(this, arguments);\n  }\n  function getExpoPushToken(data) {\n    if (!data || !(typeof data === 'object') || !data.data || !(typeof data.data === 'object') || !data.data.expoPushToken || !(typeof data.data.expoPushToken === 'string')) {\n      throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_SERVER_ERROR', `Malformed response from server, expected \"{ data: { expoPushToken: string } }\", received: ${JSON.stringify(data, null, 2)}.`);\n    }\n    return data.data.expoPushToken;\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator.default)(function* () {\n      try {\n        if (!ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIF_DEVICE_ID', `Could not have fetched installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getDeviceToken(devicePushToken) {\n    if (typeof devicePushToken.data === 'string') {\n      return devicePushToken.data;\n    }\n    return JSON.stringify(devicePushToken.data);\n  }\n  // Same as in DevicePushTokenAutoRegistration\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  } // Same as in DevicePushTokenAutoRegistration\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator.default)(function* () {\n      if (_expoModulesCore.Platform.OS === 'ios') {\n        try {\n          var notificationServiceEnvironment = yield Application.getIosPushNotificationServiceEnvironmentAsync();\n          if (notificationServiceEnvironment === 'development') {\n            return true;\n          }\n        } catch {\n          // We can't do anything here, we'll fallback to false then.\n        }\n      }\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n});","lineCount":225,"map":[[35,2,1,0],[35,6,1,0,"_expoApplication"],[35,22,1,0],[35,25,1,0,"require"],[35,32,1,0],[35,33,1,0,"_dependencyMap"],[35,47,1,0],[36,2,1,0],[36,6,1,0,"Application"],[36,17,1,0],[36,20,1,0,"_interopNamespace"],[36,37,1,0],[36,38,1,0,"_expoApplication"],[36,54,1,0],[37,2,2,0],[37,6,2,0,"_expoConstants"],[37,20,2,0],[37,23,2,0,"require"],[37,30,2,0],[37,31,2,0,"_dependencyMap"],[37,45,2,0],[38,2,2,0],[38,6,2,0,"Constants"],[38,15,2,0],[38,18,2,0,"_interopDefault"],[38,33,2,0],[38,34,2,0,"_expoConstants"],[38,48,2,0],[39,2,3,0],[39,6,3,0,"_expoModulesCore"],[39,22,3,0],[39,25,3,0,"require"],[39,32,3,0],[39,33,3,0,"_dependencyMap"],[39,47,3,0],[40,2,4,0],[40,6,4,0,"_DevicePushTokenAutoRegistrationFx"],[40,40,4,0],[40,43,4,0,"require"],[40,50,4,0],[40,51,4,0,"_dependencyMap"],[40,65,4,0],[41,2,5,0],[41,6,5,0,"_ServerRegistrationModule"],[41,31,5,0],[41,34,5,0,"require"],[41,41,5,0],[41,42,5,0,"_dependencyMap"],[41,56,5,0],[42,2,5,0],[42,6,5,0,"ServerRegistrationModule"],[42,30,5,0],[42,33,5,0,"_interopDefault"],[42,48,5,0],[42,49,5,0,"_ServerRegistrationModule"],[42,74,5,0],[43,2,6,0],[43,6,6,0,"_getDevicePushTokenAsync"],[43,30,6,0],[43,33,6,0,"require"],[43,40,6,0],[43,41,6,0,"_dependencyMap"],[43,55,6,0],[44,2,6,0],[44,6,6,0,"getDevicePushTokenAsync"],[44,29,6,0],[44,32,6,0,"_interopDefault"],[44,47,6,0],[44,48,6,0,"_getDevicePushTokenAsync"],[44,72,6,0],[45,2,7,0],[45,6,7,6,"productionBaseUrl"],[45,23,7,23],[45,26,7,26],[45,55,7,55],[46,2,8,0],[47,0,9,0],[48,0,10,0],[49,0,11,0],[50,0,12,0],[51,0,13,0],[52,0,14,0],[53,0,15,0],[54,0,16,0],[55,0,17,0],[56,0,18,0],[57,0,19,0],[58,0,20,0],[59,0,21,0],[60,0,22,0],[61,0,23,0],[62,0,24,0],[63,0,25,0],[64,0,26,0],[65,0,27,0],[66,0,28,0],[67,0,29,0],[68,0,30,0],[69,0,31,0],[70,0,32,0],[71,0,33,0],[72,0,34,0],[73,0,35,0],[74,0,36,0],[75,0,37,0],[76,0,38,0],[77,0,39,0],[78,0,40,0],[79,0,41,0],[80,0,42,0],[81,0,43,0],[82,0,44,0],[83,2,8,0],[83,11,45,30,"getExpoPushTokenAsync"],[83,32,45,51,"getExpoPushTokenAsync"],[83,33,45,51],[84,4,45,51],[84,11,45,51,"_getExpoPushTokenAsync"],[84,33,45,51],[84,34,45,51,"apply"],[84,39,45,51],[84,46,45,51,"arguments"],[84,55,45,51],[85,2,45,51],[86,2,45,51],[86,11,45,51,"_getExpoPushTokenAsync"],[86,34,45,51],[87,4,45,51,"_getExpoPushTokenAsync"],[87,26,45,51],[87,33,45,51,"_asyncToGenerator"],[87,50,45,51],[87,51,45,51,"default"],[87,58,45,51],[87,60,45,15],[87,73,45,66],[88,6,45,66],[88,10,45,52,"options"],[88,17,45,59],[88,20,45,59,"arguments"],[88,29,45,59],[88,30,45,59,"length"],[88,36,45,59],[88,44,45,59,"arguments"],[88,53,45,59],[88,61,45,59,"undefined"],[88,70,45,59],[88,73,45,59,"arguments"],[88,82,45,59],[88,88,45,62],[88,89,45,63],[88,90,45,64],[89,6,46,4],[89,10,46,10,"devicePushToken"],[89,25,46,25],[89,28,46,28,"options"],[89,35,46,35],[89,36,46,36,"devicePushToken"],[89,51,46,51],[89,62,46,62],[89,66,46,62,"getDevicePushTokenAsync"],[89,89,46,85],[89,90,46,85,"default"],[89,97,46,85],[89,99,46,86],[89,100,46,87],[89,101,46,88],[90,6,47,4],[90,10,47,10,"deviceId"],[90,18,47,18],[90,21,47,21,"options"],[90,28,47,28],[90,29,47,29,"deviceId"],[90,37,47,37],[90,48,47,48,"getDeviceIdAsync"],[90,64,47,64],[90,65,47,65],[90,66,47,66],[90,67,47,67],[91,6,48,4],[92,6,49,4],[92,10,49,10,"projectId"],[92,19,49,19],[92,22,49,22,"options"],[92,29,49,29],[92,30,49,30,"projectId"],[92,39,49,39],[92,43,50,8,"Constants"],[92,52,50,17],[92,53,50,17,"default"],[92,60,50,17],[92,61,50,18,"easConfig"],[92,70,50,27],[92,72,50,29,"projectId"],[92,81,50,38],[92,85,51,8,"Constants"],[92,94,51,17],[92,95,51,17,"default"],[92,102,51,17],[92,103,51,18,"expoConfig"],[92,113,51,28],[92,115,51,30,"extra"],[92,120,51,35],[92,122,51,37,"eas"],[92,125,51,40],[92,127,51,42,"projectId"],[92,136,51,51],[93,6,52,4],[93,10,52,8],[93,11,52,9,"projectId"],[93,20,52,18],[93,22,52,20],[94,8,53,8],[94,14,53,14],[94,18,53,18,"CodedError"],[94,34,53,28],[94,35,53,28,"CodedError"],[94,45,53,28],[94,46,53,29],[94,82,53,65],[94,84,53,67],[94,225,53,208],[94,226,53,209],[95,6,54,4],[96,6,55,4],[96,10,55,10,"applicationId"],[96,23,55,23],[96,26,55,26,"options"],[96,33,55,33],[96,34,55,34,"applicationId"],[96,47,55,47],[96,51,55,51,"Application"],[96,62,55,62],[96,63,55,63,"applicationId"],[96,76,55,76],[97,6,56,4],[97,10,56,8],[97,11,56,9,"applicationId"],[97,24,56,22],[97,26,56,24],[98,8,57,8],[98,14,57,14],[98,18,57,18,"CodedError"],[98,34,57,28],[98,35,57,28,"CodedError"],[98,45,57,28],[98,46,57,29],[98,83,57,66],[98,85,57,68],[98,216,57,199],[98,217,57,200],[99,6,58,4],[100,6,59,4],[100,10,59,10,"type"],[100,14,59,14],[100,17,59,17,"options"],[100,24,59,24],[100,25,59,25,"type"],[100,29,59,29],[100,33,59,33,"getTypeOfToken"],[100,47,59,47],[100,48,59,48,"devicePushToken"],[100,63,59,63],[100,64,59,64],[101,6,60,4],[101,10,60,10,"development"],[101,21,60,21],[101,24,60,24,"options"],[101,31,60,31],[101,32,60,32,"development"],[101,43,60,43],[101,54,60,54,"shouldUseDevelopmentNotificationService"],[101,93,60,93],[101,94,60,94],[101,95,60,95],[101,96,60,96],[102,6,61,4],[102,10,61,10,"baseUrl"],[102,17,61,17],[102,20,61,20,"options"],[102,27,61,27],[102,28,61,28,"baseUrl"],[102,35,61,35],[102,39,61,39,"productionBaseUrl"],[102,56,61,56],[103,6,62,4],[103,10,62,10,"url"],[103,13,62,13],[103,16,62,16,"options"],[103,23,62,23],[103,24,62,24,"url"],[103,27,62,27],[103,31,62,31],[103,34,62,34,"baseUrl"],[103,41,62,41],[103,64,62,64],[104,6,63,4],[104,10,63,10,"body"],[104,14,63,14],[104,17,63,17],[105,8,64,8,"type"],[105,12,64,12],[106,8,65,8,"deviceId"],[106,16,65,16],[106,18,65,18,"deviceId"],[106,26,65,26],[106,27,65,27,"toLowerCase"],[106,38,65,38],[106,39,65,39],[106,40,65,40],[107,8,66,8,"development"],[107,19,66,19],[108,8,67,8,"appId"],[108,13,67,13],[108,15,67,15,"applicationId"],[108,28,67,28],[109,8,68,8,"deviceToken"],[109,19,68,19],[109,21,68,21,"getDeviceToken"],[109,35,68,35],[109,36,68,36,"devicePushToken"],[109,51,68,51],[109,52,68,52],[110,8,69,8,"projectId"],[111,6,70,4],[111,7,70,5],[112,6,71,4],[112,10,71,10,"response"],[112,18,71,18],[112,27,71,27,"fetch"],[112,32,71,32],[112,33,71,33,"url"],[112,36,71,36],[112,38,71,38],[113,8,72,8,"method"],[113,14,72,14],[113,16,72,16],[113,22,72,22],[114,8,73,8,"headers"],[114,15,73,15],[114,17,73,17],[115,10,74,12],[115,24,74,26],[115,26,74,28],[116,8,75,8],[116,9,75,9],[117,8,76,8,"body"],[117,12,76,12],[117,14,76,14,"JSON"],[117,18,76,18],[117,19,76,19,"stringify"],[117,28,76,28],[117,29,76,29,"body"],[117,33,76,33],[118,6,77,4],[118,7,77,5],[118,8,77,6],[118,9,77,7,"catch"],[118,14,77,12],[118,15,77,14,"error"],[118,20,77,19],[118,24,77,24],[119,8,78,8],[119,14,78,14],[119,18,78,18,"CodedError"],[119,34,78,28],[119,35,78,28,"CodedError"],[119,45,78,28],[119,46,78,29],[119,79,78,62],[119,81,78,64],[119,129,78,112,"error"],[119,134,78,117],[119,137,78,120],[119,138,78,121],[120,6,79,4],[120,7,79,5],[120,8,79,6],[121,6,80,4],[121,10,80,8],[121,11,80,9,"response"],[121,19,80,17],[121,20,80,18,"ok"],[121,22,80,20],[121,24,80,22],[122,8,81,8],[122,12,81,14,"statusInfo"],[122,22,81,24],[122,25,81,27,"response"],[122,33,81,35],[122,34,81,36,"statusText"],[122,44,81,46],[122,48,81,50,"response"],[122,56,81,58],[122,57,81,59,"status"],[122,63,81,65],[123,8,82,8],[123,12,82,12,"body"],[123,17,82,16],[123,20,82,19,"undefined"],[123,29,82,28],[124,8,83,8],[124,12,83,12],[125,10,84,12,"body"],[125,15,84,16],[125,24,84,25,"response"],[125,32,84,33],[125,33,84,34,"text"],[125,37,84,38],[125,38,84,39],[125,39,84,40],[126,8,85,8],[126,9,85,9],[126,10,86,8],[126,16,86,14],[127,10,87,12],[128,8,87,12],[129,8,89,8],[129,14,89,14],[129,18,89,18,"CodedError"],[129,34,89,28],[129,35,89,28,"CodedError"],[129,45,89,28],[129,46,89,29],[129,78,89,61],[129,80,89,63],[129,163,89,146,"statusInfo"],[129,173,89,156],[129,185,89,168,"body"],[129,190,89,172],[129,195,89,177],[129,196,89,178],[130,6,90,4],[131,6,91,4],[131,10,91,10,"expoPushToken"],[131,23,91,23],[131,26,91,26,"getExpoPushToken"],[131,42,91,42],[131,49,91,49,"parseResponse"],[131,62,91,62],[131,63,91,63,"response"],[131,71,91,71],[131,72,91,72],[131,73,91,73],[132,6,92,4],[132,10,92,8],[133,8,93,8],[133,12,93,12,"options"],[133,19,93,19],[133,20,93,20,"url"],[133,23,93,23],[133,27,93,27,"options"],[133,34,93,34],[133,35,93,35,"baseUrl"],[133,42,93,42],[133,44,93,44],[134,10,94,12,"console"],[134,17,94,19],[134,18,94,20,"debug"],[134,23,94,25],[134,24,94,26],[134,201,94,203],[134,202,94,204],[135,8,95,8],[135,9,95,9],[135,15,96,13],[136,10,97,12],[136,16,97,18],[136,20,97,18,"setAutoServerRegistrationEnabledAsync"],[136,54,97,55],[136,55,97,55,"setAutoServerRegistrationEnabledAsync"],[136,92,97,55],[136,94,97,56],[136,98,97,60],[136,99,97,61],[137,8,98,8],[138,6,99,4],[138,7,99,5],[138,8,100,4],[138,15,100,11,"e"],[138,16,100,12],[138,18,100,14],[139,8,101,8,"console"],[139,15,101,15],[139,16,101,16,"warn"],[139,20,101,20],[139,21,101,21],[139,139,101,139],[139,141,101,141,"e"],[139,142,101,142],[139,143,101,143],[140,6,102,4],[141,6,103,4],[141,13,103,11],[142,8,104,8,"type"],[142,12,104,12],[142,14,104,14],[142,20,104,20],[143,8,105,8,"data"],[143,12,105,12],[143,14,105,14,"expoPushToken"],[144,6,106,4],[144,7,106,5],[145,4,107,0],[145,5,107,1],[146,4,107,1],[146,11,107,1,"_getExpoPushTokenAsync"],[146,33,107,1],[146,34,107,1,"apply"],[146,39,107,1],[146,46,107,1,"arguments"],[146,55,107,1],[147,2,107,1],[148,2,107,1],[148,11,108,15,"parseResponse"],[148,24,108,28,"parseResponse"],[148,25,108,28,"_x"],[148,27,108,28],[149,4,108,28],[149,11,108,28,"_parseResponse"],[149,25,108,28],[149,26,108,28,"apply"],[149,31,108,28],[149,38,108,28,"arguments"],[149,47,108,28],[150,2,108,28],[151,2,108,28],[151,11,108,28,"_parseResponse"],[151,26,108,28],[152,4,108,28,"_parseResponse"],[152,18,108,28],[152,25,108,28,"_asyncToGenerator"],[152,42,108,28],[152,43,108,28,"default"],[152,50,108,28],[152,52,108,0],[152,63,108,29,"response"],[152,71,108,37],[152,73,108,39],[153,6,109,4],[153,10,109,8],[154,8,110,8],[154,21,110,21,"response"],[154,29,110,29],[154,30,110,30,"json"],[154,34,110,34],[154,35,110,35],[154,36,110,36],[155,6,111,4],[155,7,111,5],[155,8,112,4],[155,14,112,10],[156,8,113,8],[156,12,113,12],[157,10,114,12],[157,16,114,18],[157,20,114,22,"CodedError"],[157,36,114,32],[157,37,114,32,"CodedError"],[157,47,114,32],[157,48,114,33],[157,80,114,65],[157,82,114,67],[157,163,114,148,"JSON"],[157,167,114,152],[157,168,114,153,"stringify"],[157,177,114,162],[157,184,114,169,"response"],[157,192,114,177],[157,193,114,178,"text"],[157,197,114,182],[157,198,114,183],[157,199,114,184],[157,200,114,185],[157,203,114,188],[157,204,114,189],[158,8,115,8],[158,9,115,9],[158,10,116,8],[158,16,116,14],[159,10,117,12],[159,16,117,18],[159,20,117,22,"CodedError"],[159,36,117,32],[159,37,117,32,"CodedError"],[159,47,117,32],[159,48,117,33],[159,80,117,65],[159,82,117,67],[159,167,117,152,"JSON"],[159,171,117,156],[159,172,117,157,"stringify"],[159,181,117,166],[159,182,117,167,"response"],[159,190,117,175],[159,191,117,176],[159,194,117,179],[159,195,117,180],[160,8,118,8],[161,6,119,4],[162,4,120,0],[162,5,120,1],[163,4,120,1],[163,11,120,1,"_parseResponse"],[163,25,120,1],[163,26,120,1,"apply"],[163,31,120,1],[163,38,120,1,"arguments"],[163,47,120,1],[164,2,120,1],[165,2,121,0],[165,11,121,9,"getExpoPushToken"],[165,27,121,25,"getExpoPushToken"],[165,28,121,26,"data"],[165,32,121,30],[165,34,121,32],[166,4,122,4],[166,8,122,8],[166,9,122,9,"data"],[166,13,122,13],[166,17,123,8],[166,19,123,10],[166,26,123,17,"data"],[166,30,123,21],[166,35,123,26],[166,43,123,34],[166,44,123,35],[166,48,124,8],[166,49,124,9,"data"],[166,53,124,13],[166,54,124,14,"data"],[166,58,124,18],[166,62,125,8],[166,64,125,10],[166,71,125,17,"data"],[166,75,125,21],[166,76,125,22,"data"],[166,80,125,26],[166,85,125,31],[166,93,125,39],[166,94,125,40],[166,98,126,8],[166,99,126,9,"data"],[166,103,126,13],[166,104,126,14,"data"],[166,108,126,18],[166,109,126,19,"expoPushToken"],[166,122,126,32],[166,126,127,8],[166,128,127,10],[166,135,127,17,"data"],[166,139,127,21],[166,140,127,22,"data"],[166,144,127,26],[166,145,127,27,"expoPushToken"],[166,158,127,40],[166,163,127,45],[166,171,127,53],[166,172,127,54],[166,174,127,56],[167,6,128,8],[167,12,128,14],[167,16,128,18,"CodedError"],[167,32,128,28],[167,33,128,28,"CodedError"],[167,43,128,28],[167,44,128,29],[167,76,128,61],[167,78,128,63],[167,171,128,156,"JSON"],[167,175,128,160],[167,176,128,161,"stringify"],[167,185,128,170],[167,186,128,171,"data"],[167,190,128,175],[167,192,128,177],[167,196,128,181],[167,198,128,183],[167,199,128,184],[167,200,128,185],[167,203,128,188],[167,204,128,189],[168,4,129,4],[169,4,130,4],[169,11,130,11,"data"],[169,15,130,15],[169,16,130,16,"data"],[169,20,130,20],[169,21,130,21,"expoPushToken"],[169,34,130,34],[170,2,131,0],[171,2,132,0],[172,2,132,0],[172,11,133,15,"getDeviceIdAsync"],[172,27,133,31,"getDeviceIdAsync"],[172,28,133,31],[173,4,133,31],[173,11,133,31,"_getDeviceIdAsync"],[173,28,133,31],[173,29,133,31,"apply"],[173,34,133,31],[173,41,133,31,"arguments"],[173,50,133,31],[174,2,133,31],[175,2,133,31],[175,11,133,31,"_getDeviceIdAsync"],[175,29,133,31],[176,4,133,31,"_getDeviceIdAsync"],[176,21,133,31],[176,28,133,31,"_asyncToGenerator"],[176,45,133,31],[176,46,133,31,"default"],[176,53,133,31],[176,55,133,0],[176,68,133,34],[177,6,134,4],[177,10,134,8],[178,8,135,8],[178,12,135,12],[178,13,135,13,"ServerRegistrationModule"],[178,37,135,37],[178,38,135,37,"default"],[178,45,135,37],[178,46,135,38,"getInstallationIdAsync"],[178,68,135,60],[178,70,135,62],[179,10,136,12],[179,16,136,18],[179,20,136,22,"UnavailabilityError"],[179,36,136,41],[179,37,136,41,"UnavailabilityError"],[179,56,136,41],[179,57,136,42],[179,87,136,72],[179,89,136,74],[179,113,136,98],[179,114,136,99],[180,8,137,8],[181,8,138,8],[181,21,138,21,"ServerRegistrationModule"],[181,45,138,45],[181,46,138,45,"default"],[181,53,138,45],[181,54,138,46,"getInstallationIdAsync"],[181,76,138,68],[181,77,138,69],[181,78,138,70],[182,6,139,4],[182,7,139,5],[182,8,140,4],[182,15,140,11,"e"],[182,16,140,12],[182,18,140,14],[183,8,141,8],[183,14,141,14],[183,18,141,18,"CodedError"],[183,34,141,28],[183,35,141,28,"CodedError"],[183,45,141,28],[183,46,141,29],[183,67,141,50],[183,69,141,52],[183,131,141,114,"e"],[183,132,141,115],[183,135,141,118],[183,136,141,119],[184,6,142,4],[185,4,143,0],[185,5,143,1],[186,4,143,1],[186,11,143,1,"_getDeviceIdAsync"],[186,28,143,1],[186,29,143,1,"apply"],[186,34,143,1],[186,41,143,1,"arguments"],[186,50,143,1],[187,2,143,1],[188,2,144,0],[188,11,144,9,"getDeviceToken"],[188,25,144,23,"getDeviceToken"],[188,26,144,24,"devicePushToken"],[188,41,144,39],[188,43,144,41],[189,4,145,4],[189,8,145,8],[189,15,145,15,"devicePushToken"],[189,30,145,30],[189,31,145,31,"data"],[189,35,145,35],[189,40,145,40],[189,48,145,48],[189,50,145,50],[190,6,146,8],[190,13,146,15,"devicePushToken"],[190,28,146,30],[190,29,146,31,"data"],[190,33,146,35],[191,4,147,4],[192,4,148,4],[192,11,148,11,"JSON"],[192,15,148,15],[192,16,148,16,"stringify"],[192,25,148,25],[192,26,148,26,"devicePushToken"],[192,41,148,41],[192,42,148,42,"data"],[192,46,148,46],[192,47,148,47],[193,2,149,0],[194,2,150,0],[195,2,150,0],[195,11,151,15,"shouldUseDevelopmentNotificationService"],[195,50,151,54,"shouldUseDevelopmentNotificationService"],[195,51,151,54],[196,4,151,54],[196,11,151,54,"_shouldUseDevelopmentNotificationService"],[196,51,151,54],[196,52,151,54,"apply"],[196,57,151,54],[196,64,151,54,"arguments"],[196,73,151,54],[197,2,151,54],[197,4,165,0],[198,2,165,0],[198,11,165,0,"_shouldUseDevelopmentNotificationService"],[198,52,165,0],[199,4,165,0,"_shouldUseDevelopmentNotificationService"],[199,44,165,0],[199,51,165,0,"_asyncToGenerator"],[199,68,165,0],[199,69,165,0,"default"],[199,76,165,0],[199,78,151,0],[199,91,151,57],[200,6,152,4],[200,10,152,8,"Platform"],[200,26,152,16],[200,27,152,16,"Platform"],[200,35,152,16],[200,36,152,17,"OS"],[200,38,152,19],[200,43,152,24],[200,48,152,29],[200,50,152,31],[201,8,153,8],[201,12,153,12],[202,10,154,12],[202,14,154,18,"notificationServiceEnvironment"],[202,44,154,48],[202,53,154,57,"Application"],[202,64,154,68],[202,65,154,69,"getIosPushNotificationServiceEnvironmentAsync"],[202,110,154,114],[202,111,154,115],[202,112,154,116],[203,10,155,12],[203,14,155,16,"notificationServiceEnvironment"],[203,44,155,46],[203,49,155,51],[203,62,155,64],[203,64,155,66],[204,12,156,16],[204,19,156,23],[204,23,156,27],[205,10,157,12],[206,8,158,8],[206,9,158,9],[206,10,159,8],[206,16,159,14],[207,10,160,12],[208,8,160,12],[209,6,162,4],[210,6,163,4],[210,13,163,11],[210,18,163,16],[211,4,164,0],[211,5,164,1],[212,4,164,1],[212,11,164,1,"_shouldUseDevelopmentNotificationService"],[212,51,164,1],[212,52,164,1,"apply"],[212,57,164,1],[212,64,164,1,"arguments"],[212,73,164,1],[213,2,164,1],[214,2,166,0],[214,11,166,9,"getTypeOfToken"],[214,25,166,23,"getTypeOfToken"],[214,26,166,24,"devicePushToken"],[214,41,166,39],[214,43,166,41],[215,4,167,4],[215,12,167,12,"devicePushToken"],[215,27,167,27],[215,28,167,28,"type"],[215,32,167,32],[216,6,168,8],[216,11,168,13],[216,16,168,18],[217,8,169,12],[217,15,169,19],[217,21,169,25],[218,6,170,8],[218,11,170,13],[218,20,170,22],[219,8,171,12],[219,15,171,19],[219,20,171,24],[220,6,172,8],[221,6,173,8],[222,8,174,12],[222,15,174,19,"devicePushToken"],[222,30,174,34],[222,31,174,35,"type"],[222,35,174,39],[223,4,175,4],[224,2,176,0],[225,0,176,1],[225,3]],"functionMap":{"names":["<global>","getExpoPushTokenAsync","fetch._catch$argument_0","parseResponse","getExpoPushToken","getDeviceIdAsync","getDeviceToken","shouldUseDevelopmentNotificationService","getTypeOfToken"],"mappings":"AAA;eC4C;aCgC;KDE;CD4B;AGC;CHY;AIC;CJU;AKE;CLU;AMC;CNK;AOE;CPa;AQE;CRU"},"hasCjsExports":false},"type":"js/module"}]}