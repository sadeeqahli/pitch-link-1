{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":50,"index":50}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NotificationsEmitter","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":151,"index":202}}],"key":"Qab5cB8LewiAQY57MV0vxh0VKT8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return useLastNotificationResponse;\n    }\n  });\n  Object.defineProperty(exports, \"determineNextResponse\", {\n    enumerable: true,\n    get: function () {\n      return determineNextResponse;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _NotificationsEmitter = require(_dependencyMap[2], \"./NotificationsEmitter\");\n  /**\n   * A React hook which returns the notification response that was received most recently\n   * (a notification response designates an interaction with a notification, such as tapping on it).\n   *\n   * To clear the last notification response, use [`clearLastNotificationResponseAsync()`](#notificationsclearlastnotificationresponseasync).\n   *\n   * > If you don't want to use a hook, you can use `Notifications.getLastNotificationResponseAsync()` instead.\n   *\n   * @return The hook may return one of these three types/values:\n   * - `undefined` - until we're sure of what to return,\n   * - `null` - if no notification response has been received yet,\n   * - a [`NotificationResponse`](#notificationresponse) object - if a notification response was received.\n   *\n   * @example\n   * Responding to a notification tap by opening a URL that could be put into the notification's `data`\n   * (opening the URL is your responsibility and is not a part of the `expo-notifications` API):\n   * ```jsx\n   * import * as Notifications from 'expo-notifications';\n   * import { Linking } from 'react-native';\n   *\n   * export default function App() {\n   *   const lastNotificationResponse = Notifications.useLastNotificationResponse();\n   *   React.useEffect(() => {\n   *     if (\n   *       lastNotificationResponse &&\n   *       lastNotificationResponse.notification.request.content.data.url &&\n   *       lastNotificationResponse.actionIdentifier === Notifications.DEFAULT_ACTION_IDENTIFIER\n   *     ) {\n   *       Linking.openURL(lastNotificationResponse.notification.request.content.data.url);\n   *     }\n   *   }, [lastNotificationResponse]);\n   *   return (\n   *     // Your app content\n   *   );\n   * }\n   * ```\n   * @header listen\n   */\n  function useLastNotificationResponse() {\n    var _useState = (0, _react.useState)(undefined),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      lastNotificationResponse = _useState2[0],\n      setLastNotificationResponse = _useState2[1];\n    // useLayoutEffect ensures the listener is registered as soon as possible\n    (0, _react.useLayoutEffect)(() => {\n      // Get the last response first, in case it was set earlier (even in native code on startup)\n      var response = (0, _NotificationsEmitter.getLastNotificationResponse)();\n      setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response));\n      // Set up listener for responses that come in, and set the last response if needed\n      var subscription = (0, _NotificationsEmitter.addNotificationResponseReceivedListener)(response => setLastNotificationResponse(prevResponse => determineNextResponse(prevResponse, response)));\n      var clearResponseSubscription = (0, _NotificationsEmitter.addNotificationResponseClearedListener)(() => {\n        setLastNotificationResponse(null);\n      });\n      return () => {\n        subscription.remove();\n        clearResponseSubscription.remove();\n      };\n    }, []);\n    return lastNotificationResponse;\n  }\n  // returns the new response if it is different from the previous,\n  // also has to return undefined until we're sure of what to return (null or a response)\n  // the transition from response to null is invalid\n  var determineNextResponse = (prevResponse, newResponse) => {\n    if (!newResponse) {\n      return null;\n    }\n    if (!prevResponse) {\n      return newResponse;\n    }\n    return prevResponse.notification.request.identifier !== newResponse.notification.request.identifier ? newResponse : prevResponse;\n  };\n});","lineCount":100,"map":[[12,2,41,15,"Object"],[12,8,41,15],[12,9,41,15,"defineProperty"],[12,23,41,15],[12,24,41,15,"exports"],[12,31,41,15],[13,4,41,15,"enumerable"],[13,14,41,15],[14,4,41,15,"get"],[14,7,41,15],[14,18,41,15,"get"],[14,19,41,15],[15,6,41,15],[15,13,41,15,"useLastNotificationResponse"],[15,40,41,15],[16,4,41,15],[17,2,41,15],[18,2,63,0,"Object"],[18,8,63,0],[18,9,63,0,"defineProperty"],[18,23,63,0],[18,24,63,0,"exports"],[18,31,63,0],[19,4,63,0,"enumerable"],[19,14,63,0],[20,4,63,0,"get"],[20,7,63,0],[20,18,63,0,"get"],[20,19,63,0],[21,6,63,0],[21,13,63,0,"determineNextResponse"],[21,34,63,0],[22,4,63,0],[23,2,63,0],[24,2,74,2],[24,6,74,2,"_babelRuntimeHelpersSlicedToArray"],[24,39,74,2],[24,42,74,2,"require"],[24,49,74,2],[24,50,74,2,"_dependencyMap"],[24,64,74,2],[25,2,74,2],[25,6,74,2,"_slicedToArray"],[25,20,74,2],[25,23,74,2,"_interopDefault"],[25,38,74,2],[25,39,74,2,"_babelRuntimeHelpersSlicedToArray"],[25,72,74,2],[26,2,1,0],[26,6,1,0,"_react"],[26,12,1,0],[26,15,1,0,"require"],[26,22,1,0],[26,23,1,0,"_dependencyMap"],[26,37,1,0],[27,2,2,0],[27,6,2,0,"_NotificationsEmitter"],[27,27,2,0],[27,30,2,0,"require"],[27,37,2,0],[27,38,2,0,"_dependencyMap"],[27,52,2,0],[28,2,3,0],[29,0,4,0],[30,0,5,0],[31,0,6,0],[32,0,7,0],[33,0,8,0],[34,0,9,0],[35,0,10,0],[36,0,11,0],[37,0,12,0],[38,0,13,0],[39,0,14,0],[40,0,15,0],[41,0,16,0],[42,0,17,0],[43,0,18,0],[44,0,19,0],[45,0,20,0],[46,0,21,0],[47,0,22,0],[48,0,23,0],[49,0,24,0],[50,0,25,0],[51,0,26,0],[52,0,27,0],[53,0,28,0],[54,0,29,0],[55,0,30,0],[56,0,31,0],[57,0,32,0],[58,0,33,0],[59,0,34,0],[60,0,35,0],[61,0,36,0],[62,0,37,0],[63,0,38,0],[64,0,39,0],[65,0,40,0],[66,2,41,15],[66,11,41,24,"useLastNotificationResponse"],[66,38,41,51,"useLastNotificationResponse"],[66,39,41,51],[66,41,41,54],[67,4,42,4],[67,8,42,4,"_useState"],[67,17,42,4],[67,20,42,68],[67,24,42,68,"useState"],[67,30,42,76],[67,31,42,76,"useState"],[67,39,42,76],[67,41,42,77,"undefined"],[67,50,42,86],[67,51,42,87],[68,6,42,87,"_useState2"],[68,16,42,87],[68,23,42,87,"_slicedToArray"],[68,37,42,87],[68,38,42,87,"default"],[68,45,42,87],[68,47,42,87,"_useState"],[68,56,42,87],[69,6,42,11,"lastNotificationResponse"],[69,30,42,35],[69,33,42,35,"_useState2"],[69,43,42,35],[70,6,42,37,"setLastNotificationResponse"],[70,33,42,64],[70,36,42,64,"_useState2"],[70,46,42,64],[71,4,43,4],[72,4,44,4],[72,8,44,4,"useLayoutEffect"],[72,14,44,19],[72,15,44,19,"useLayoutEffect"],[72,30,44,19],[72,32,44,20],[72,38,44,26],[73,6,45,8],[74,6,46,8],[74,10,46,14,"response"],[74,18,46,22],[74,21,46,25],[74,25,46,25,"getLastNotificationResponse"],[74,46,46,52],[74,47,46,52,"getLastNotificationResponse"],[74,74,46,52],[74,76,46,53],[74,77,46,54],[75,6,47,8,"setLastNotificationResponse"],[75,33,47,35],[75,34,47,37,"prevResponse"],[75,46,47,49],[75,50,47,54,"determineNextResponse"],[75,71,47,75],[75,72,47,76,"prevResponse"],[75,84,47,88],[75,86,47,90,"response"],[75,94,47,98],[75,95,47,99],[75,96,47,100],[76,6,48,8],[77,6,49,8],[77,10,49,14,"subscription"],[77,22,49,26],[77,25,49,29],[77,29,49,29,"addNotificationResponseReceivedListener"],[77,50,49,68],[77,51,49,68,"addNotificationResponseReceivedListener"],[77,90,49,68],[77,92,49,70,"response"],[77,100,49,78],[77,104,49,83,"setLastNotificationResponse"],[77,131,49,110],[77,132,49,112,"prevResponse"],[77,144,49,124],[77,148,49,129,"determineNextResponse"],[77,169,49,150],[77,170,49,151,"prevResponse"],[77,182,49,163],[77,184,49,165,"response"],[77,192,49,173],[77,193,49,174],[77,194,49,175],[77,195,49,176],[78,6,50,8],[78,10,50,14,"clearResponseSubscription"],[78,35,50,39],[78,38,50,42],[78,42,50,42,"addNotificationResponseClearedListener"],[78,63,50,80],[78,64,50,80,"addNotificationResponseClearedListener"],[78,102,50,80],[78,104,50,81],[78,110,50,87],[79,8,51,12,"setLastNotificationResponse"],[79,35,51,39],[79,36,51,40],[79,40,51,44],[79,41,51,45],[80,6,52,8],[80,7,52,9],[80,8,52,10],[81,6,53,8],[81,13,53,15],[81,19,53,21],[82,8,54,12,"subscription"],[82,20,54,24],[82,21,54,25,"remove"],[82,27,54,31],[82,28,54,32],[82,29,54,33],[83,8,55,12,"clearResponseSubscription"],[83,33,55,37],[83,34,55,38,"remove"],[83,40,55,44],[83,41,55,45],[83,42,55,46],[84,6,56,8],[84,7,56,9],[85,4,57,4],[85,5,57,5],[85,7,57,7],[85,9,57,9],[85,10,57,10],[86,4,58,4],[86,11,58,11,"lastNotificationResponse"],[86,35,58,35],[87,2,59,0],[88,2,60,0],[89,2,61,0],[90,2,62,0],[91,2,63,7],[91,6,63,13,"determineNextResponse"],[91,27,63,34],[91,30,63,37,"determineNextResponse"],[91,31,63,38,"prevResponse"],[91,43,63,50],[91,45,63,52,"newResponse"],[91,56,63,63],[91,61,63,68],[92,4,64,4],[92,8,64,8],[92,9,64,9,"newResponse"],[92,20,64,20],[92,22,64,22],[93,6,65,8],[93,13,65,15],[93,17,65,19],[94,4,66,4],[95,4,67,4],[95,8,67,8],[95,9,67,9,"prevResponse"],[95,21,67,21],[95,23,67,23],[96,6,68,8],[96,13,68,15,"newResponse"],[96,24,68,26],[97,4,69,4],[98,4,70,4],[98,11,70,11,"prevResponse"],[98,23,70,23],[98,24,70,24,"notification"],[98,36,70,36],[98,37,70,37,"request"],[98,44,70,44],[98,45,70,45,"identifier"],[98,55,70,55],[98,60,71,8,"newResponse"],[98,71,71,19],[98,72,71,20,"notification"],[98,84,71,32],[98,85,71,33,"request"],[98,92,71,40],[98,93,71,41,"identifier"],[98,103,71,51],[98,106,72,10,"newResponse"],[98,117,72,21],[98,120,73,10,"prevResponse"],[98,132,73,22],[99,2,74,0],[99,3,74,1],[100,0,74,2],[100,3]],"functionMap":{"names":["<global>","useLastNotificationResponse","useLayoutEffect$argument_0","setLastNotificationResponse$argument_0","addNotificationResponseReceivedListener$argument_0","addNotificationResponseClearedListener$argument_0","<anonymous>","determineNextResponse"],"mappings":"AAA;eCwC;oBCG;oCCG,+DD;qEEE,0CD,+DC,CF;iFGC;SHE;eIC;SJG;KDC;CDE;qCOI;CPW"},"hasCjsExports":false},"type":"js/module"}]}