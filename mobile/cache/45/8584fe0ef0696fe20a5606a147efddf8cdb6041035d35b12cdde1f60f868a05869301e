{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./BackgroundNotificationTasksModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":84,"index":141}}],"key":"neU4nOgSf9VJUtS2uRoI6TcYxms=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return unregisterTaskAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _BackgroundNotificationTasksModule = require(_dependencyMap[2], \"./BackgroundNotificationTasksModule\");\n  var BackgroundNotificationTasksModule = _interopDefault(_BackgroundNotificationTasksModule);\n  /**\n   * Used to unregister tasks registered with `registerTaskAsync` method.\n   * @param taskName The string you passed to `registerTaskAsync` as the `taskName` parameter.\n   * @header inBackground\n   */\n  function unregisterTaskAsync(_x) {\n    return _unregisterTaskAsync.apply(this, arguments);\n  }\n  function _unregisterTaskAsync() {\n    _unregisterTaskAsync = (0, _asyncToGenerator.default)(function* (taskName) {\n      if (!BackgroundNotificationTasksModule.default.unregisterTaskAsync) {\n        throw new _expoModulesCore.UnavailabilityError('Notifications', 'unregisterTaskAsync');\n      }\n      return yield BackgroundNotificationTasksModule.default.unregisterTaskAsync(taskName);\n    });\n    return _unregisterTaskAsync.apply(this, arguments);\n  }\n});","lineCount":40,"map":[[20,2,1,0],[20,6,1,0,"_expoModulesCore"],[20,22,1,0],[20,25,1,0,"require"],[20,32,1,0],[20,33,1,0,"_dependencyMap"],[20,47,1,0],[21,2,2,0],[21,6,2,0,"_BackgroundNotificationTasksModule"],[21,40,2,0],[21,43,2,0,"require"],[21,50,2,0],[21,51,2,0,"_dependencyMap"],[21,65,2,0],[22,2,2,0],[22,6,2,0,"BackgroundNotificationTasksModule"],[22,39,2,0],[22,42,2,0,"_interopDefault"],[22,57,2,0],[22,58,2,0,"_BackgroundNotificationTasksModule"],[22,92,2,0],[23,2,3,0],[24,0,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,2,3,0],[28,11,8,30,"unregisterTaskAsync"],[28,30,8,49,"unregisterTaskAsync"],[28,31,8,49,"_x"],[28,33,8,49],[29,4,8,49],[29,11,8,49,"_unregisterTaskAsync"],[29,31,8,49],[29,32,8,49,"apply"],[29,37,8,49],[29,44,8,49,"arguments"],[29,53,8,49],[30,2,8,49],[31,2,8,49],[31,11,8,49,"_unregisterTaskAsync"],[31,32,8,49],[32,4,8,49,"_unregisterTaskAsync"],[32,24,8,49],[32,31,8,49,"_asyncToGenerator"],[32,48,8,49],[32,49,8,49,"default"],[32,56,8,49],[32,58,8,15],[32,69,8,50,"taskName"],[32,77,8,58],[32,79,8,60],[33,6,9,4],[33,10,9,8],[33,11,9,9,"BackgroundNotificationTasksModule"],[33,44,9,42],[33,45,9,42,"default"],[33,52,9,42],[33,53,9,43,"unregisterTaskAsync"],[33,72,9,62],[33,74,9,64],[34,8,10,8],[34,14,10,14],[34,18,10,18,"UnavailabilityError"],[34,34,10,37],[34,35,10,37,"UnavailabilityError"],[34,54,10,37],[34,55,10,38],[34,70,10,53],[34,72,10,55],[34,93,10,76],[34,94,10,77],[35,6,11,4],[36,6,12,4],[36,19,12,17,"BackgroundNotificationTasksModule"],[36,52,12,50],[36,53,12,50,"default"],[36,60,12,50],[36,61,12,51,"unregisterTaskAsync"],[36,80,12,70],[36,81,12,71,"taskName"],[36,89,12,79],[36,90,12,80],[37,4,13,0],[37,5,13,1],[38,4,13,1],[38,11,13,1,"_unregisterTaskAsync"],[38,31,13,1],[38,32,13,1,"apply"],[38,37,13,1],[38,44,13,1,"arguments"],[38,53,13,1],[39,2,13,1],[40,0,13,1],[40,3]],"functionMap":{"names":["<global>","unregisterTaskAsync"],"mappings":"AAA;eCO;CDK"},"hasCjsExports":false},"type":"js/module"}]}