{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@ide/backoff","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"B9a/kyy9aP0LgQkY79+QgjlpSv0=","exportNames":["*"],"imports":1}},{"name":"expo-application","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"aOo/Wkh64aldyNvnMGu1GTRT2ZA=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":78,"index":186}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"../ServerRegistrationModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":67,"index":254}}],"key":"3RTx8KhSs/2ZB3r9U5DaT+SEuk4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.updateDevicePushTokenAsync = updateDevicePushTokenAsync;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _ideBackoff = require(_dependencyMap[2], \"@ide/backoff\");\n  var _expoApplication = require(_dependencyMap[3], \"expo-application\");\n  var Application = _interopNamespace(_expoApplication);\n  var _expoModulesCore = require(_dependencyMap[4], \"expo-modules-core\");\n  var _ServerRegistrationModule = require(_dependencyMap[5], \"../ServerRegistrationModule\");\n  var ServerRegistrationModule = _interopDefault(_ServerRegistrationModule);\n  var updateDevicePushTokenUrl = 'https://exp.host/--/api/v2/push/updateDeviceToken';\n  function updateDevicePushTokenAsync(_x, _x2) {\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _updateDevicePushTokenAsync() {\n    _updateDevicePushTokenAsync = (0, _asyncToGenerator.default)(function* (signal, token) {\n      var doUpdateDevicePushTokenAsync = /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (retry) {\n          var _yield$Promise$all = yield Promise.all([shouldUseDevelopmentNotificationService(), getDeviceIdAsync()]),\n            _yield$Promise$all2 = (0, _slicedToArray.default)(_yield$Promise$all, 2),\n            development = _yield$Promise$all2[0],\n            deviceId = _yield$Promise$all2[1];\n          var body = {\n            deviceId: deviceId.toLowerCase(),\n            development,\n            deviceToken: token.data,\n            appId: Application.applicationId,\n            type: getTypeOfToken(token)\n          };\n          try {\n            var response = yield fetch(updateDevicePushTokenUrl, {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json'\n              },\n              body: JSON.stringify(body),\n              signal\n            });\n            // Help debug erroring servers\n            if (!response.ok) {\n              console.debug('[expo-notifications] Error encountered while updating the device push token with the server:', yield response.text());\n            }\n            // Retry if request failed\n            if (!response.ok) {\n              retry();\n            }\n          } catch (error) {\n            // Error returned if the request is aborted should be an 'AbortError'. In\n            // React Native fetch is polyfilled using `whatwg-fetch` which:\n            // - creates `AbortError`s like this\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L505\n            // - which creates exceptions like\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L490-L494\n            if (typeof error === 'object' && error?.name === 'AbortError') {\n              // We don't consider AbortError a failure, it's a sign somewhere else the\n              // request is expected to succeed and we don't need this one, so let's\n              // just return.\n              return;\n            }\n            console.warn('[expo-notifications] Error thrown while updating the device push token with the server:', error);\n            retry();\n          }\n        });\n        return function doUpdateDevicePushTokenAsync(_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      var shouldTry = true;\n      var retry = () => {\n        shouldTry = true;\n      };\n      var retriesCount = 0;\n      var initialBackoff = 500; // 0.5 s\n      var backoffOptions = {\n        maxBackoff: 2 * 60 * 1000 // 2 minutes\n      };\n      var nextBackoffInterval = (0, _ideBackoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n      while (shouldTry && !signal.aborted) {\n        // Will be set to true by `retry` if it's called\n        shouldTry = false;\n        yield doUpdateDevicePushTokenAsync(retry);\n        // Do not wait if we won't retry\n        if (shouldTry && !signal.aborted) {\n          nextBackoffInterval = (0, _ideBackoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n          retriesCount += 1;\n          yield new Promise(resolve => setTimeout(resolve, nextBackoffInterval));\n        }\n      }\n    });\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  }\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator.default)(function* () {\n      try {\n        if (!ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_DEVICE_ID', `Could not fetch the installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator.default)(function* () {\n      if (_expoModulesCore.Platform.OS === 'ios') {\n        try {\n          var notificationServiceEnvironment = yield Application.getIosPushNotificationServiceEnvironmentAsync();\n          if (notificationServiceEnvironment === 'development') {\n            return true;\n          }\n        } catch {\n          // We can't do anything here, we'll fallback to false then.\n        }\n      }\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n});","lineCount":166,"map":[[27,2,6,0,"exports"],[27,9,6,0],[27,10,6,0,"updateDevicePushTokenAsync"],[27,36,6,0],[27,39,6,0,"updateDevicePushTokenAsync"],[27,65,6,0],[28,2,75,1],[28,6,75,1,"_babelRuntimeHelpersSlicedToArray"],[28,39,75,1],[28,42,75,1,"require"],[28,49,75,1],[28,50,75,1,"_dependencyMap"],[28,64,75,1],[29,2,75,1],[29,6,75,1,"_slicedToArray"],[29,20,75,1],[29,23,75,1,"_interopDefault"],[29,38,75,1],[29,39,75,1,"_babelRuntimeHelpersSlicedToArray"],[29,72,75,1],[30,2,75,1],[30,6,75,1,"_babelRuntimeHelpersAsyncToGenerator"],[30,42,75,1],[30,45,75,1,"require"],[30,52,75,1],[30,53,75,1,"_dependencyMap"],[30,67,75,1],[31,2,75,1],[31,6,75,1,"_asyncToGenerator"],[31,23,75,1],[31,26,75,1,"_interopDefault"],[31,41,75,1],[31,42,75,1,"_babelRuntimeHelpersAsyncToGenerator"],[31,78,75,1],[32,2,1,0],[32,6,1,0,"_ideBackoff"],[32,17,1,0],[32,20,1,0,"require"],[32,27,1,0],[32,28,1,0,"_dependencyMap"],[32,42,1,0],[33,2,2,0],[33,6,2,0,"_expoApplication"],[33,22,2,0],[33,25,2,0,"require"],[33,32,2,0],[33,33,2,0,"_dependencyMap"],[33,47,2,0],[34,2,2,0],[34,6,2,0,"Application"],[34,17,2,0],[34,20,2,0,"_interopNamespace"],[34,37,2,0],[34,38,2,0,"_expoApplication"],[34,54,2,0],[35,2,3,0],[35,6,3,0,"_expoModulesCore"],[35,22,3,0],[35,25,3,0,"require"],[35,32,3,0],[35,33,3,0,"_dependencyMap"],[35,47,3,0],[36,2,4,0],[36,6,4,0,"_ServerRegistrationModule"],[36,31,4,0],[36,34,4,0,"require"],[36,41,4,0],[36,42,4,0,"_dependencyMap"],[36,56,4,0],[37,2,4,0],[37,6,4,0,"ServerRegistrationModule"],[37,30,4,0],[37,33,4,0,"_interopDefault"],[37,48,4,0],[37,49,4,0,"_ServerRegistrationModule"],[37,74,4,0],[38,2,5,0],[38,6,5,6,"updateDevicePushTokenUrl"],[38,30,5,30],[38,33,5,33],[38,84,5,84],[39,2,5,85],[39,11,6,22,"updateDevicePushTokenAsync"],[39,37,6,48,"updateDevicePushTokenAsync"],[39,38,6,48,"_x"],[39,40,6,48],[39,42,6,48,"_x2"],[39,45,6,48],[40,4,6,48],[40,11,6,48,"_updateDevicePushTokenAsync"],[40,38,6,48],[40,39,6,48,"apply"],[40,44,6,48],[40,51,6,48,"arguments"],[40,60,6,48],[41,2,6,48],[41,4,76,0],[42,2,76,0],[42,11,76,0,"_updateDevicePushTokenAsync"],[42,39,76,0],[43,4,76,0,"_updateDevicePushTokenAsync"],[43,31,76,0],[43,38,76,0,"_asyncToGenerator"],[43,55,76,0],[43,56,76,0,"default"],[43,63,76,0],[43,65,6,7],[43,76,6,49,"signal"],[43,82,6,55],[43,84,6,57,"token"],[43,89,6,62],[43,91,6,64],[44,6,7,4],[44,10,7,10,"doUpdateDevicePushTokenAsync"],[44,38,7,38],[45,8,7,38],[45,12,7,38,"_ref"],[45,16,7,38],[45,23,7,38,"_asyncToGenerator"],[45,40,7,38],[45,41,7,38,"default"],[45,48,7,38],[45,50,7,41],[45,61,7,48,"retry"],[45,66,7,53],[45,68,7,58],[46,10,8,8],[46,14,8,8,"_yield$Promise$all"],[46,32,8,8],[46,41,8,46,"Promise"],[46,48,8,53],[46,49,8,54,"all"],[46,52,8,57],[46,53,8,58],[46,54,9,12,"shouldUseDevelopmentNotificationService"],[46,93,9,51],[46,94,9,52],[46,95,9,53],[46,97,10,12,"getDeviceIdAsync"],[46,113,10,28],[46,114,10,29],[46,115,10,30],[46,116,11,9],[46,117,11,10],[47,12,11,10,"_yield$Promise$all2"],[47,31,11,10],[47,38,11,10,"_slicedToArray"],[47,52,11,10],[47,53,11,10,"default"],[47,60,11,10],[47,62,11,10,"_yield$Promise$all"],[47,80,11,10],[48,12,8,15,"development"],[48,23,8,26],[48,26,8,26,"_yield$Promise$all2"],[48,45,8,26],[49,12,8,28,"deviceId"],[49,20,8,36],[49,23,8,36,"_yield$Promise$all2"],[49,42,8,36],[50,10,12,8],[50,14,12,14,"body"],[50,18,12,18],[50,21,12,21],[51,12,13,12,"deviceId"],[51,20,13,20],[51,22,13,22,"deviceId"],[51,30,13,30],[51,31,13,31,"toLowerCase"],[51,42,13,42],[51,43,13,43],[51,44,13,44],[52,12,14,12,"development"],[52,23,14,23],[53,12,15,12,"deviceToken"],[53,23,15,23],[53,25,15,25,"token"],[53,30,15,30],[53,31,15,31,"data"],[53,35,15,35],[54,12,16,12,"appId"],[54,17,16,17],[54,19,16,19,"Application"],[54,30,16,30],[54,31,16,31,"applicationId"],[54,44,16,44],[55,12,17,12,"type"],[55,16,17,16],[55,18,17,18,"getTypeOfToken"],[55,32,17,32],[55,33,17,33,"token"],[55,38,17,38],[56,10,18,8],[56,11,18,9],[57,10,19,8],[57,14,19,12],[58,12,20,12],[58,16,20,18,"response"],[58,24,20,26],[58,33,20,35,"fetch"],[58,38,20,40],[58,39,20,41,"updateDevicePushTokenUrl"],[58,63,20,65],[58,65,20,67],[59,14,21,16,"method"],[59,20,21,22],[59,22,21,24],[59,28,21,30],[60,14,22,16,"headers"],[60,21,22,23],[60,23,22,25],[61,16,23,20],[61,30,23,34],[61,32,23,36],[62,14,24,16],[62,15,24,17],[63,14,25,16,"body"],[63,18,25,20],[63,20,25,22,"JSON"],[63,24,25,26],[63,25,25,27,"stringify"],[63,34,25,36],[63,35,25,37,"body"],[63,39,25,41],[63,40,25,42],[64,14,26,16,"signal"],[65,12,27,12],[65,13,27,13],[65,14,27,14],[66,12,28,12],[67,12,29,12],[67,16,29,16],[67,17,29,17,"response"],[67,25,29,25],[67,26,29,26,"ok"],[67,28,29,28],[67,30,29,30],[68,14,30,16,"console"],[68,21,30,23],[68,22,30,24,"debug"],[68,27,30,29],[68,28,30,30],[68,122,30,124],[68,130,30,132,"response"],[68,138,30,140],[68,139,30,141,"text"],[68,143,30,145],[68,144,30,146],[68,145,30,147],[68,146,30,148],[69,12,31,12],[70,12,32,12],[71,12,33,12],[71,16,33,16],[71,17,33,17,"response"],[71,25,33,25],[71,26,33,26,"ok"],[71,28,33,28],[71,30,33,30],[72,14,34,16,"retry"],[72,19,34,21],[72,20,34,22],[72,21,34,23],[73,12,35,12],[74,10,36,8],[74,11,36,9],[74,12,37,8],[74,19,37,15,"error"],[74,24,37,20],[74,26,37,22],[75,12,38,12],[76,12,39,12],[77,12,40,12],[78,12,41,12],[79,12,42,12],[80,12,43,12],[81,12,44,12],[81,16,44,16],[81,23,44,23,"error"],[81,28,44,28],[81,33,44,33],[81,41,44,41],[81,45,44,45,"error"],[81,50,44,50],[81,52,44,52,"name"],[81,56,44,56],[81,61,44,61],[81,73,44,73],[81,75,44,75],[82,14,45,16],[83,14,46,16],[84,14,47,16],[85,14,48,16],[86,12,49,12],[87,12,50,12,"console"],[87,19,50,19],[87,20,50,20,"warn"],[87,24,50,24],[87,25,50,25],[87,114,50,114],[87,116,50,116,"error"],[87,121,50,121],[87,122,50,122],[88,12,51,12,"retry"],[88,17,51,17],[88,18,51,18],[88,19,51,19],[89,10,52,8],[90,8,53,4],[90,9,53,5],[91,8,53,5],[91,24,7,10,"doUpdateDevicePushTokenAsync"],[91,52,7,38,"doUpdateDevicePushTokenAsync"],[91,53,7,38,"_x3"],[91,56,7,38],[92,10,7,38],[92,17,7,38,"_ref"],[92,21,7,38],[92,22,7,38,"apply"],[92,27,7,38],[92,34,7,38,"arguments"],[92,43,7,38],[93,8,7,38],[94,6,7,38],[94,9,53,5],[95,6,54,4],[95,10,54,8,"shouldTry"],[95,19,54,17],[95,22,54,20],[95,26,54,24],[96,6,55,4],[96,10,55,10,"retry"],[96,15,55,15],[96,18,55,18,"retry"],[96,19,55,18],[96,24,55,24],[97,8,56,8,"shouldTry"],[97,17,56,17],[97,20,56,20],[97,24,56,24],[98,6,57,4],[98,7,57,5],[99,6,58,4],[99,10,58,8,"retriesCount"],[99,22,58,20],[99,25,58,23],[99,26,58,24],[100,6,59,4],[100,10,59,10,"initialBackoff"],[100,24,59,24],[100,27,59,27],[100,30,59,30],[100,31,59,31],[100,32,59,32],[101,6,60,4],[101,10,60,10,"backoffOptions"],[101,24,60,24],[101,27,60,27],[102,8,61,8,"maxBackoff"],[102,18,61,18],[102,20,61,20],[102,21,61,21],[102,24,61,24],[102,26,61,26],[102,29,61,29],[102,33,61,33],[102,34,61,35],[103,6,62,4],[103,7,62,5],[104,6,63,4],[104,10,63,8,"nextBackoffInterval"],[104,29,63,27],[104,32,63,30],[104,36,63,30,"computeNextBackoffInterval"],[104,47,63,56],[104,48,63,56,"computeNextBackoffInterval"],[104,74,63,56],[104,76,63,57,"initialBackoff"],[104,90,63,71],[104,92,63,73,"retriesCount"],[104,104,63,85],[104,106,63,87,"backoffOptions"],[104,120,63,101],[104,121,63,102],[105,6,64,4],[105,13,64,11,"shouldTry"],[105,22,64,20],[105,26,64,24],[105,27,64,25,"signal"],[105,33,64,31],[105,34,64,32,"aborted"],[105,41,64,39],[105,43,64,41],[106,8,65,8],[107,8,66,8,"shouldTry"],[107,17,66,17],[107,20,66,20],[107,25,66,25],[108,8,67,8],[108,14,67,14,"doUpdateDevicePushTokenAsync"],[108,42,67,42],[108,43,67,43,"retry"],[108,48,67,48],[108,49,67,49],[109,8,68,8],[110,8,69,8],[110,12,69,12,"shouldTry"],[110,21,69,21],[110,25,69,25],[110,26,69,26,"signal"],[110,32,69,32],[110,33,69,33,"aborted"],[110,40,69,40],[110,42,69,42],[111,10,70,12,"nextBackoffInterval"],[111,29,70,31],[111,32,70,34],[111,36,70,34,"computeNextBackoffInterval"],[111,47,70,60],[111,48,70,60,"computeNextBackoffInterval"],[111,74,70,60],[111,76,70,61,"initialBackoff"],[111,90,70,75],[111,92,70,77,"retriesCount"],[111,104,70,89],[111,106,70,91,"backoffOptions"],[111,120,70,105],[111,121,70,106],[112,10,71,12,"retriesCount"],[112,22,71,24],[112,26,71,28],[112,27,71,29],[113,10,72,12],[113,16,72,18],[113,20,72,22,"Promise"],[113,27,72,29],[113,28,72,31,"resolve"],[113,35,72,38],[113,39,72,43,"setTimeout"],[113,49,72,53],[113,50,72,54,"resolve"],[113,57,72,61],[113,59,72,63,"nextBackoffInterval"],[113,78,72,82],[113,79,72,83],[113,80,72,84],[114,8,73,8],[115,6,74,4],[116,4,75,0],[116,5,75,1],[117,4,75,1],[117,11,75,1,"_updateDevicePushTokenAsync"],[117,38,75,1],[117,39,75,1,"apply"],[117,44,75,1],[117,51,75,1,"arguments"],[117,60,75,1],[118,2,75,1],[119,2,75,1],[119,11,77,15,"getDeviceIdAsync"],[119,27,77,31,"getDeviceIdAsync"],[119,28,77,31],[120,4,77,31],[120,11,77,31,"_getDeviceIdAsync"],[120,28,77,31],[120,29,77,31,"apply"],[120,34,77,31],[120,41,77,31,"arguments"],[120,50,77,31],[121,2,77,31],[121,4,88,0],[122,2,88,0],[122,11,88,0,"_getDeviceIdAsync"],[122,29,88,0],[123,4,88,0,"_getDeviceIdAsync"],[123,21,88,0],[123,28,88,0,"_asyncToGenerator"],[123,45,88,0],[123,46,88,0,"default"],[123,53,88,0],[123,55,77,0],[123,68,77,34],[124,6,78,4],[124,10,78,8],[125,8,79,8],[125,12,79,12],[125,13,79,13,"ServerRegistrationModule"],[125,37,79,37],[125,38,79,37,"default"],[125,45,79,37],[125,46,79,38,"getInstallationIdAsync"],[125,68,79,60],[125,70,79,62],[126,10,80,12],[126,16,80,18],[126,20,80,22,"UnavailabilityError"],[126,36,80,41],[126,37,80,41,"UnavailabilityError"],[126,56,80,41],[126,57,80,42],[126,87,80,72],[126,89,80,74],[126,113,80,98],[126,114,80,99],[127,8,81,8],[128,8,82,8],[128,21,82,21,"ServerRegistrationModule"],[128,45,82,45],[128,46,82,45,"default"],[128,53,82,45],[128,54,82,46,"getInstallationIdAsync"],[128,76,82,68],[128,77,82,69],[128,78,82,70],[129,6,83,4],[129,7,83,5],[129,8,84,4],[129,15,84,11,"e"],[129,16,84,12],[129,18,84,14],[130,8,85,8],[130,14,85,14],[130,18,85,18,"CodedError"],[130,34,85,28],[130,35,85,28,"CodedError"],[130,45,85,28],[130,46,85,29],[130,75,85,58],[130,77,85,60],[130,136,85,119,"e"],[130,137,85,120],[130,140,85,123],[130,141,85,124],[131,6,86,4],[132,4,87,0],[132,5,87,1],[133,4,87,1],[133,11,87,1,"_getDeviceIdAsync"],[133,28,87,1],[133,29,87,1,"apply"],[133,34,87,1],[133,41,87,1,"arguments"],[133,50,87,1],[134,2,87,1],[135,2,89,0],[135,11,89,9,"getTypeOfToken"],[135,25,89,23,"getTypeOfToken"],[135,26,89,24,"devicePushToken"],[135,41,89,39],[135,43,89,41],[136,4,90,4],[136,12,90,12,"devicePushToken"],[136,27,90,27],[136,28,90,28,"type"],[136,32,90,32],[137,6,91,8],[137,11,91,13],[137,16,91,18],[138,8,92,12],[138,15,92,19],[138,21,92,25],[139,6,93,8],[139,11,93,13],[139,20,93,22],[140,8,94,12],[140,15,94,19],[140,20,94,24],[141,6,95,8],[142,6,96,8],[143,8,97,12],[143,15,97,19,"devicePushToken"],[143,30,97,34],[143,31,97,35,"type"],[143,35,97,39],[144,4,98,4],[145,2,99,0],[146,2,100,0],[147,2,100,0],[147,11,101,15,"shouldUseDevelopmentNotificationService"],[147,50,101,54,"shouldUseDevelopmentNotificationService"],[147,51,101,54],[148,4,101,54],[148,11,101,54,"_shouldUseDevelopmentNotificationService"],[148,51,101,54],[148,52,101,54,"apply"],[148,57,101,54],[148,64,101,54,"arguments"],[148,73,101,54],[149,2,101,54],[150,2,101,54],[150,11,101,54,"_shouldUseDevelopmentNotificationService"],[150,52,101,54],[151,4,101,54,"_shouldUseDevelopmentNotificationService"],[151,44,101,54],[151,51,101,54,"_asyncToGenerator"],[151,68,101,54],[151,69,101,54,"default"],[151,76,101,54],[151,78,101,0],[151,91,101,57],[152,6,102,4],[152,10,102,8,"Platform"],[152,26,102,16],[152,27,102,16,"Platform"],[152,35,102,16],[152,36,102,17,"OS"],[152,38,102,19],[152,43,102,24],[152,48,102,29],[152,50,102,31],[153,8,103,8],[153,12,103,12],[154,10,104,12],[154,14,104,18,"notificationServiceEnvironment"],[154,44,104,48],[154,53,104,57,"Application"],[154,64,104,68],[154,65,104,69,"getIosPushNotificationServiceEnvironmentAsync"],[154,110,104,114],[154,111,104,115],[154,112,104,116],[155,10,105,12],[155,14,105,16,"notificationServiceEnvironment"],[155,44,105,46],[155,49,105,51],[155,62,105,64],[155,64,105,66],[156,12,106,16],[156,19,106,23],[156,23,106,27],[157,10,107,12],[158,8,108,8],[158,9,108,9],[158,10,109,8],[158,16,109,14],[159,10,110,12],[160,8,110,12],[161,6,112,4],[162,6,113,4],[162,13,113,11],[162,18,113,16],[163,4,114,0],[163,5,114,1],[164,4,114,1],[164,11,114,1,"_shouldUseDevelopmentNotificationService"],[164,51,114,1],[164,52,114,1,"apply"],[164,57,114,1],[164,64,114,1,"arguments"],[164,73,114,1],[165,2,114,1],[166,0,114,1],[166,3]],"functionMap":{"names":["<global>","updateDevicePushTokenAsync","doUpdateDevicePushTokenAsync","retry","Promise$argument_0","getDeviceIdAsync","getTypeOfToken","shouldUseDevelopmentNotificationService"],"mappings":"AAA;OCK;yCCC;KD8C;kBEE;KFE;8BGe,qDH;CDG;AKE;CLU;AME;CNU;AOE;CPa"},"hasCjsExports":false},"type":"js/module"}]}