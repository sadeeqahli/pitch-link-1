{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":69,"index":103}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCacheStore\", {\n    enumerable: true,\n    get: function () {\n      return useCacheStore;\n    }\n  });\n  Object.defineProperty(exports, \"checkNetworkStatus\", {\n    enumerable: true,\n    get: function () {\n      return checkNetworkStatus;\n    }\n  });\n  Object.defineProperty(exports, \"useOfflineManager\", {\n    enumerable: true,\n    get: function () {\n      return useOfflineManager;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _zustand = require(_dependencyMap[1], \"zustand\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  // Cache store for offline capabilities\n  var useCacheStore = (0, _zustand.create)((set, get) => ({\n    // Cache data\n    pitches: [],\n    bookings: [],\n    lastUpdated: null,\n    // Cache status\n    isOnline: true,\n    isCacheLoaded: false,\n    cacheLoadLogged: false,\n    // Load cache from AsyncStorage\n    loadCache: function () {\n      var _ref = (0, _asyncToGenerator.default)(function* () {\n        try {\n          var cachedData = yield AsyncStorage.default.getItem('pitchlink_cache');\n          if (cachedData) {\n            var parsedData = JSON.parse(cachedData);\n            set({\n              ...parsedData,\n              isCacheLoaded: true\n            });\n            // Only log once per session\n            if (!get().cacheLoadLogged) {\n              console.log('Cache loaded successfully');\n              set({\n                cacheLoadLogged: true\n              });\n            }\n            return parsedData;\n          }\n          set({\n            isCacheLoaded: true\n          });\n          return null;\n        } catch (error) {\n          console.error('Error loading cache:', error);\n          set({\n            isCacheLoaded: true\n          });\n          return null;\n        }\n      });\n      return function loadCache() {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    // Save cache to AsyncStorage\n    saveCache: function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          var state = get();\n          var cacheData = {\n            pitches: state.pitches,\n            bookings: state.bookings,\n            lastUpdated: state.lastUpdated\n          };\n          yield AsyncStorage.default.setItem('pitchlink_cache', JSON.stringify(cacheData));\n          // Only log when cache is actually saved\n          if (state.pitches.length > 0 || state.bookings.length > 0) {\n            console.log('Cache saved successfully');\n          }\n        } catch (error) {\n          console.error('Error saving cache:', error);\n        }\n      });\n      return function saveCache() {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    // Update pitches cache\n    setPitches: pitches => {\n      set({\n        pitches,\n        lastUpdated: Date.now()\n      });\n      // Auto-save cache\n      get().saveCache();\n    },\n    // Update bookings cache\n    setBookings: bookings => {\n      set({\n        bookings,\n        lastUpdated: Date.now()\n      });\n      // Auto-save cache\n      get().saveCache();\n    },\n    // Clear cache\n    clearCache: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          yield AsyncStorage.default.removeItem('pitchlink_cache');\n          set({\n            pitches: [],\n            bookings: [],\n            lastUpdated: null\n          });\n          console.log('Cache cleared successfully');\n        } catch (error) {\n          console.error('Error clearing cache:', error);\n        }\n      });\n      return function clearCache() {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    // Set online status\n    setOnlineStatus: isOnline => {\n      set({\n        isOnline\n      });\n    }\n  }));\n\n  // Utility function to check network status\n  var checkNetworkStatus = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator.default)(function* () {\n      try {\n        var response = yield fetch('https://www.google.com', {\n          method: 'HEAD',\n          cache: 'no-cache'\n        });\n        return response.ok;\n      } catch (error) {\n        return false;\n      }\n    });\n    return function checkNetworkStatus() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  // Hook to manage offline capabilities\n  var useOfflineManager = () => {\n    _s();\n    var _useCacheStore = useCacheStore(),\n      isOnline = _useCacheStore.isOnline,\n      isCacheLoaded = _useCacheStore.isCacheLoaded,\n      pitches = _useCacheStore.pitches,\n      bookings = _useCacheStore.bookings,\n      setOnlineStatus = _useCacheStore.setOnlineStatus,\n      setPitches = _useCacheStore.setPitches,\n      setBookings = _useCacheStore.setBookings,\n      loadCache = _useCacheStore.loadCache;\n\n    // Initialize offline manager\n    var initOfflineManager = /*#__PURE__*/function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* () {\n        // Load cache\n        yield loadCache();\n\n        // Check initial network status\n        var onlineStatus = yield checkNetworkStatus();\n        setOnlineStatus(onlineStatus);\n        return {\n          isOnline: onlineStatus,\n          isCacheLoaded: true\n        };\n      });\n      return function initOfflineManager() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // Sync data with server when coming online\n    var syncWithServer = /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* (serverPitches, serverBookings) {\n        if (!isOnline) return;\n        var synced = false;\n\n        // Update cache with fresh data\n        if (serverPitches) {\n          // Only update if data has actually changed\n          var currentPitches = useCacheStore.getState().pitches;\n          var hasChanged = JSON.stringify(currentPitches) !== JSON.stringify(serverPitches);\n          if (hasChanged) {\n            setPitches(serverPitches);\n            synced = true;\n          }\n        }\n        if (serverBookings) {\n          // Only update if data has actually changed\n          var currentBookings = useCacheStore.getState().bookings;\n          var _hasChanged = JSON.stringify(currentBookings) !== JSON.stringify(serverBookings);\n          if (_hasChanged) {\n            setBookings(serverBookings);\n            synced = true;\n          }\n        }\n\n        // Only log when actual sync happens\n        if (synced) {\n          console.log('Data synced with server');\n        }\n      });\n      return function syncWithServer(_x, _x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    return {\n      isOnline,\n      isCacheLoaded,\n      pitches,\n      bookings,\n      initOfflineManager,\n      syncWithServer,\n      setOnlineStatus\n    };\n  };\n  _s(useOfflineManager, \"YaIGlozGDaZcWTSU0JqeW1vQ+2U=\", false, function () {\n    return [useCacheStore];\n  });\n});","lineCount":248,"map":[[13,2,5,0,"Object"],[13,8,5,0],[13,9,5,0,"defineProperty"],[13,23,5,0],[13,24,5,0,"exports"],[13,31,5,0],[14,4,5,0,"enumerable"],[14,14,5,0],[15,4,5,0,"get"],[15,7,5,0],[15,18,5,0,"get"],[15,19,5,0],[16,6,5,0],[16,13,5,0,"useCacheStore"],[16,26,5,0],[17,4,5,0],[18,2,5,0],[19,2,103,0,"Object"],[19,8,103,0],[19,9,103,0,"defineProperty"],[19,23,103,0],[19,24,103,0,"exports"],[19,31,103,0],[20,4,103,0,"enumerable"],[20,14,103,0],[21,4,103,0,"get"],[21,7,103,0],[21,18,103,0,"get"],[21,19,103,0],[22,6,103,0],[22,13,103,0,"checkNetworkStatus"],[22,31,103,0],[23,4,103,0],[24,2,103,0],[25,2,113,0,"Object"],[25,8,113,0],[25,9,113,0,"defineProperty"],[25,23,113,0],[25,24,113,0,"exports"],[25,31,113,0],[26,4,113,0,"enumerable"],[26,14,113,0],[27,4,113,0,"get"],[27,7,113,0],[27,18,113,0,"get"],[27,19,113,0],[28,6,113,0],[28,13,113,0,"useOfflineManager"],[28,30,113,0],[29,4,113,0],[30,2,113,0],[31,2,181,2],[31,6,181,2,"_babelRuntimeHelpersAsyncToGenerator"],[31,42,181,2],[31,45,181,2,"require"],[31,52,181,2],[31,53,181,2,"_dependencyMap"],[31,67,181,2],[32,2,181,2],[32,6,181,2,"_asyncToGenerator"],[32,23,181,2],[32,26,181,2,"_interopDefault"],[32,41,181,2],[32,42,181,2,"_babelRuntimeHelpersAsyncToGenerator"],[32,78,181,2],[33,2,1,0],[33,6,1,0,"_zustand"],[33,14,1,0],[33,17,1,0,"require"],[33,24,1,0],[33,25,1,0,"_dependencyMap"],[33,39,1,0],[34,2,2,0],[34,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[34,42,2,0],[34,45,2,0,"require"],[34,52,2,0],[34,53,2,0,"_dependencyMap"],[34,67,2,0],[35,2,2,0],[35,6,2,0,"AsyncStorage"],[35,18,2,0],[35,21,2,0,"_interopDefault"],[35,36,2,0],[35,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[35,73,2,0],[36,2,4,0],[37,2,5,7],[37,6,5,13,"useCacheStore"],[37,19,5,26],[37,22,5,29],[37,26,5,29,"create"],[37,34,5,35],[37,35,5,35,"create"],[37,41,5,35],[37,43,5,36],[37,44,5,37,"set"],[37,47,5,40],[37,49,5,42,"get"],[37,52,5,45],[37,58,5,51],[38,4,6,2],[39,4,7,2,"pitches"],[39,11,7,9],[39,13,7,11],[39,15,7,13],[40,4,8,2,"bookings"],[40,12,8,10],[40,14,8,12],[40,16,8,14],[41,4,9,2,"lastUpdated"],[41,15,9,13],[41,17,9,15],[41,21,9,19],[42,4,11,2],[43,4,12,2,"isOnline"],[43,12,12,10],[43,14,12,12],[43,18,12,16],[44,4,13,2,"isCacheLoaded"],[44,17,13,15],[44,19,13,17],[44,24,13,22],[45,4,14,2,"cacheLoadLogged"],[45,19,14,17],[45,21,14,19],[45,26,14,24],[46,4,16,2],[47,4,17,2,"loadCache"],[47,13,17,11],[48,6,17,11],[48,10,17,11,"_ref"],[48,14,17,11],[48,21,17,11,"_asyncToGenerator"],[48,38,17,11],[48,39,17,11,"default"],[48,46,17,11],[48,48,17,13],[48,61,17,25],[49,8,18,4],[49,12,18,8],[50,10,19,6],[50,14,19,12,"cachedData"],[50,24,19,22],[50,33,19,31,"AsyncStorage"],[50,45,19,43],[50,46,19,43,"default"],[50,53,19,43],[50,54,19,44,"getItem"],[50,61,19,51],[50,62,19,52],[50,79,19,69],[50,80,19,70],[51,10,20,6],[51,14,20,10,"cachedData"],[51,24,20,20],[51,26,20,22],[52,12,21,8],[52,16,21,14,"parsedData"],[52,26,21,24],[52,29,21,27,"JSON"],[52,33,21,31],[52,34,21,32,"parse"],[52,39,21,37],[52,40,21,38,"cachedData"],[52,50,21,48],[52,51,21,49],[53,12,22,8,"set"],[53,15,22,11],[53,16,22,12],[54,14,23,10],[54,17,23,13,"parsedData"],[54,27,23,23],[55,14,24,10,"isCacheLoaded"],[55,27,24,23],[55,29,24,25],[56,12,25,8],[56,13,25,9],[56,14,25,10],[57,12,26,8],[58,12,27,8],[58,16,27,12],[58,17,27,13,"get"],[58,20,27,16],[58,21,27,17],[58,22,27,18],[58,23,27,19,"cacheLoadLogged"],[58,38,27,34],[58,40,27,36],[59,14,28,10,"console"],[59,21,28,17],[59,22,28,18,"log"],[59,25,28,21],[59,26,28,22],[59,53,28,49],[59,54,28,50],[60,14,29,10,"set"],[60,17,29,13],[60,18,29,14],[61,16,29,16,"cacheLoadLogged"],[61,31,29,31],[61,33,29,33],[62,14,29,38],[62,15,29,39],[62,16,29,40],[63,12,30,8],[64,12,31,8],[64,19,31,15,"parsedData"],[64,29,31,25],[65,10,32,6],[66,10,33,6,"set"],[66,13,33,9],[66,14,33,10],[67,12,33,12,"isCacheLoaded"],[67,25,33,25],[67,27,33,27],[68,10,33,32],[68,11,33,33],[68,12,33,34],[69,10,34,6],[69,17,34,13],[69,21,34,17],[70,8,35,4],[70,9,35,5],[70,10,35,6],[70,17,35,13,"error"],[70,22,35,18],[70,24,35,20],[71,10,36,6,"console"],[71,17,36,13],[71,18,36,14,"error"],[71,23,36,19],[71,24,36,20],[71,46,36,42],[71,48,36,44,"error"],[71,53,36,49],[71,54,36,50],[72,10,37,6,"set"],[72,13,37,9],[72,14,37,10],[73,12,37,12,"isCacheLoaded"],[73,25,37,25],[73,27,37,27],[74,10,37,32],[74,11,37,33],[74,12,37,34],[75,10,38,6],[75,17,38,13],[75,21,38,17],[76,8,39,4],[77,6,40,2],[77,7,40,3],[78,6,40,3],[78,22,17,2,"loadCache"],[78,31,17,11,"loadCache"],[78,32,17,11],[79,8,17,11],[79,15,17,11,"_ref"],[79,19,17,11],[79,20,17,11,"apply"],[79,25,17,11],[79,32,17,11,"arguments"],[79,41,17,11],[80,6,17,11],[81,4,17,11],[81,7,40,3],[82,4,42,2],[83,4,43,2,"saveCache"],[83,13,43,11],[84,6,43,11],[84,10,43,11,"_ref2"],[84,15,43,11],[84,22,43,11,"_asyncToGenerator"],[84,39,43,11],[84,40,43,11,"default"],[84,47,43,11],[84,49,43,13],[84,62,43,25],[85,8,44,4],[85,12,44,8],[86,10,45,6],[86,14,45,12,"state"],[86,19,45,17],[86,22,45,20,"get"],[86,25,45,23],[86,26,45,24],[86,27,45,25],[87,10,46,6],[87,14,46,12,"cacheData"],[87,23,46,21],[87,26,46,24],[88,12,47,8,"pitches"],[88,19,47,15],[88,21,47,17,"state"],[88,26,47,22],[88,27,47,23,"pitches"],[88,34,47,30],[89,12,48,8,"bookings"],[89,20,48,16],[89,22,48,18,"state"],[89,27,48,23],[89,28,48,24,"bookings"],[89,36,48,32],[90,12,49,8,"lastUpdated"],[90,23,49,19],[90,25,49,21,"state"],[90,30,49,26],[90,31,49,27,"lastUpdated"],[91,10,50,6],[91,11,50,7],[92,10,51,6],[92,16,51,12,"AsyncStorage"],[92,28,51,24],[92,29,51,24,"default"],[92,36,51,24],[92,37,51,25,"setItem"],[92,44,51,32],[92,45,51,33],[92,62,51,50],[92,64,51,52,"JSON"],[92,68,51,56],[92,69,51,57,"stringify"],[92,78,51,66],[92,79,51,67,"cacheData"],[92,88,51,76],[92,89,51,77],[92,90,51,78],[93,10,52,6],[94,10,53,6],[94,14,53,10,"state"],[94,19,53,15],[94,20,53,16,"pitches"],[94,27,53,23],[94,28,53,24,"length"],[94,34,53,30],[94,37,53,33],[94,38,53,34],[94,42,53,38,"state"],[94,47,53,43],[94,48,53,44,"bookings"],[94,56,53,52],[94,57,53,53,"length"],[94,63,53,59],[94,66,53,62],[94,67,53,63],[94,69,53,65],[95,12,54,8,"console"],[95,19,54,15],[95,20,54,16,"log"],[95,23,54,19],[95,24,54,20],[95,50,54,46],[95,51,54,47],[96,10,55,6],[97,8,56,4],[97,9,56,5],[97,10,56,6],[97,17,56,13,"error"],[97,22,56,18],[97,24,56,20],[98,10,57,6,"console"],[98,17,57,13],[98,18,57,14,"error"],[98,23,57,19],[98,24,57,20],[98,45,57,41],[98,47,57,43,"error"],[98,52,57,48],[98,53,57,49],[99,8,58,4],[100,6,59,2],[100,7,59,3],[101,6,59,3],[101,22,43,2,"saveCache"],[101,31,43,11,"saveCache"],[101,32,43,11],[102,8,43,11],[102,15,43,11,"_ref2"],[102,20,43,11],[102,21,43,11,"apply"],[102,26,43,11],[102,33,43,11,"arguments"],[102,42,43,11],[103,6,43,11],[104,4,43,11],[104,7,59,3],[105,4,61,2],[106,4,62,2,"setPitches"],[106,14,62,12],[106,16,62,15,"pitches"],[106,23,62,22],[106,27,62,27],[107,6,63,4,"set"],[107,9,63,7],[107,10,63,8],[108,8,64,6,"pitches"],[108,15,64,13],[109,8,65,6,"lastUpdated"],[109,19,65,17],[109,21,65,19,"Date"],[109,25,65,23],[109,26,65,24,"now"],[109,29,65,27],[109,30,65,28],[110,6,66,4],[110,7,66,5],[110,8,66,6],[111,6,67,4],[112,6,68,4,"get"],[112,9,68,7],[112,10,68,8],[112,11,68,9],[112,12,68,10,"saveCache"],[112,21,68,19],[112,22,68,20],[112,23,68,21],[113,4,69,2],[113,5,69,3],[114,4,71,2],[115,4,72,2,"setBookings"],[115,15,72,13],[115,17,72,16,"bookings"],[115,25,72,24],[115,29,72,29],[116,6,73,4,"set"],[116,9,73,7],[116,10,73,8],[117,8,74,6,"bookings"],[117,16,74,14],[118,8,75,6,"lastUpdated"],[118,19,75,17],[118,21,75,19,"Date"],[118,25,75,23],[118,26,75,24,"now"],[118,29,75,27],[118,30,75,28],[119,6,76,4],[119,7,76,5],[119,8,76,6],[120,6,77,4],[121,6,78,4,"get"],[121,9,78,7],[121,10,78,8],[121,11,78,9],[121,12,78,10,"saveCache"],[121,21,78,19],[121,22,78,20],[121,23,78,21],[122,4,79,2],[122,5,79,3],[123,4,81,2],[124,4,82,2,"clearCache"],[124,14,82,12],[125,6,82,12],[125,10,82,12,"_ref3"],[125,15,82,12],[125,22,82,12,"_asyncToGenerator"],[125,39,82,12],[125,40,82,12,"default"],[125,47,82,12],[125,49,82,14],[125,62,82,26],[126,8,83,4],[126,12,83,8],[127,10,84,6],[127,16,84,12,"AsyncStorage"],[127,28,84,24],[127,29,84,24,"default"],[127,36,84,24],[127,37,84,25,"removeItem"],[127,47,84,35],[127,48,84,36],[127,65,84,53],[127,66,84,54],[128,10,85,6,"set"],[128,13,85,9],[128,14,85,10],[129,12,86,8,"pitches"],[129,19,86,15],[129,21,86,17],[129,23,86,19],[130,12,87,8,"bookings"],[130,20,87,16],[130,22,87,18],[130,24,87,20],[131,12,88,8,"lastUpdated"],[131,23,88,19],[131,25,88,21],[132,10,89,6],[132,11,89,7],[132,12,89,8],[133,10,90,6,"console"],[133,17,90,13],[133,18,90,14,"log"],[133,21,90,17],[133,22,90,18],[133,50,90,46],[133,51,90,47],[134,8,91,4],[134,9,91,5],[134,10,91,6],[134,17,91,13,"error"],[134,22,91,18],[134,24,91,20],[135,10,92,6,"console"],[135,17,92,13],[135,18,92,14,"error"],[135,23,92,19],[135,24,92,20],[135,47,92,43],[135,49,92,45,"error"],[135,54,92,50],[135,55,92,51],[136,8,93,4],[137,6,94,2],[137,7,94,3],[138,6,94,3],[138,22,82,2,"clearCache"],[138,32,82,12,"clearCache"],[138,33,82,12],[139,8,82,12],[139,15,82,12,"_ref3"],[139,20,82,12],[139,21,82,12,"apply"],[139,26,82,12],[139,33,82,12,"arguments"],[139,42,82,12],[140,6,82,12],[141,4,82,12],[141,7,94,3],[142,4,96,2],[143,4,97,2,"setOnlineStatus"],[143,19,97,17],[143,21,97,20,"isOnline"],[143,29,97,28],[143,33,97,33],[144,6,98,4,"set"],[144,9,98,7],[144,10,98,8],[145,8,98,10,"isOnline"],[146,6,98,19],[146,7,98,20],[146,8,98,21],[147,4,99,2],[148,2,100,0],[148,3,100,1],[148,4,100,2],[148,5,100,3],[150,2,102,0],[151,2,103,7],[151,6,103,13,"checkNetworkStatus"],[151,24,103,31],[152,4,103,31],[152,8,103,31,"_ref4"],[152,13,103,31],[152,20,103,31,"_asyncToGenerator"],[152,37,103,31],[152,38,103,31,"default"],[152,45,103,31],[152,47,103,34],[152,60,103,46],[153,6,104,2],[153,10,104,6],[154,8,105,4],[154,12,105,10,"response"],[154,20,105,18],[154,29,105,27,"fetch"],[154,34,105,32],[154,35,105,33],[154,59,105,57],[154,61,105,59],[155,10,105,61,"method"],[155,16,105,67],[155,18,105,69],[155,24,105,75],[156,10,105,77,"cache"],[156,15,105,82],[156,17,105,84],[157,8,105,95],[157,9,105,96],[157,10,105,97],[158,8,106,4],[158,15,106,11,"response"],[158,23,106,19],[158,24,106,20,"ok"],[158,26,106,22],[159,6,107,2],[159,7,107,3],[159,8,107,4],[159,15,107,11,"error"],[159,20,107,16],[159,22,107,18],[160,8,108,4],[160,15,108,11],[160,20,108,16],[161,6,109,2],[162,4,110,0],[162,5,110,1],[163,4,110,1],[163,20,103,13,"checkNetworkStatus"],[163,38,103,31,"checkNetworkStatus"],[163,39,103,31],[164,6,103,31],[164,13,103,31,"_ref4"],[164,18,103,31],[164,19,103,31,"apply"],[164,24,103,31],[164,31,103,31,"arguments"],[164,40,103,31],[165,4,103,31],[166,2,103,31],[166,5,110,1],[168,2,112,0],[169,2,113,7],[169,6,113,13,"useOfflineManager"],[169,23,113,30],[169,26,113,33,"useOfflineManager"],[169,27,113,33],[169,32,113,39],[170,4,113,39,"_s"],[170,6,113,39],[171,4,114,2],[171,8,114,2,"_useCacheStore"],[171,22,114,2],[171,25,123,6,"useCacheStore"],[171,38,123,19],[171,39,123,20],[171,40,123,21],[172,6,115,4,"isOnline"],[172,14,115,12],[172,17,115,12,"_useCacheStore"],[172,31,115,12],[172,32,115,4,"isOnline"],[172,40,115,12],[173,6,116,4,"isCacheLoaded"],[173,19,116,17],[173,22,116,17,"_useCacheStore"],[173,36,116,17],[173,37,116,4,"isCacheLoaded"],[173,50,116,17],[174,6,117,4,"pitches"],[174,13,117,11],[174,16,117,11,"_useCacheStore"],[174,30,117,11],[174,31,117,4,"pitches"],[174,38,117,11],[175,6,118,4,"bookings"],[175,14,118,12],[175,17,118,12,"_useCacheStore"],[175,31,118,12],[175,32,118,4,"bookings"],[175,40,118,12],[176,6,119,4,"setOnlineStatus"],[176,21,119,19],[176,24,119,19,"_useCacheStore"],[176,38,119,19],[176,39,119,4,"setOnlineStatus"],[176,54,119,19],[177,6,120,4,"setPitches"],[177,16,120,14],[177,19,120,14,"_useCacheStore"],[177,33,120,14],[177,34,120,4,"setPitches"],[177,44,120,14],[178,6,121,4,"setBookings"],[178,17,121,15],[178,20,121,15,"_useCacheStore"],[178,34,121,15],[178,35,121,4,"setBookings"],[178,46,121,15],[179,6,122,4,"loadCache"],[179,15,122,13],[179,18,122,13,"_useCacheStore"],[179,32,122,13],[179,33,122,4,"loadCache"],[179,42,122,13],[181,4,125,2],[182,4,126,2],[182,8,126,8,"initOfflineManager"],[182,26,126,26],[183,6,126,26],[183,10,126,26,"_ref5"],[183,15,126,26],[183,22,126,26,"_asyncToGenerator"],[183,39,126,26],[183,40,126,26,"default"],[183,47,126,26],[183,49,126,29],[183,62,126,41],[184,8,127,4],[185,8,128,4],[185,14,128,10,"loadCache"],[185,23,128,19],[185,24,128,20],[185,25,128,21],[187,8,130,4],[188,8,131,4],[188,12,131,10,"onlineStatus"],[188,24,131,22],[188,33,131,31,"checkNetworkStatus"],[188,51,131,49],[188,52,131,50],[188,53,131,51],[189,8,132,4,"setOnlineStatus"],[189,23,132,19],[189,24,132,20,"onlineStatus"],[189,36,132,32],[189,37,132,33],[190,8,134,4],[190,15,134,11],[191,10,134,13,"isOnline"],[191,18,134,21],[191,20,134,23,"onlineStatus"],[191,32,134,35],[192,10,134,37,"isCacheLoaded"],[192,23,134,50],[192,25,134,52],[193,8,134,57],[193,9,134,58],[194,6,135,2],[194,7,135,3],[195,6,135,3],[195,22,126,8,"initOfflineManager"],[195,40,126,26,"initOfflineManager"],[195,41,126,26],[196,8,126,26],[196,15,126,26,"_ref5"],[196,20,126,26],[196,21,126,26,"apply"],[196,26,126,26],[196,33,126,26,"arguments"],[196,42,126,26],[197,6,126,26],[198,4,126,26],[198,7,135,3],[200,4,137,2],[201,4,138,2],[201,8,138,8,"syncWithServer"],[201,22,138,22],[202,6,138,22],[202,10,138,22,"_ref6"],[202,15,138,22],[202,22,138,22,"_asyncToGenerator"],[202,39,138,22],[202,40,138,22,"default"],[202,47,138,22],[202,49,138,25],[202,60,138,32,"serverPitches"],[202,73,138,45],[202,75,138,47,"serverBookings"],[202,89,138,61],[202,91,138,66],[203,8,139,4],[203,12,139,8],[203,13,139,9,"isOnline"],[203,21,139,17],[203,23,139,19],[204,8,141,4],[204,12,141,8,"synced"],[204,18,141,14],[204,21,141,17],[204,26,141,22],[206,8,143,4],[207,8,144,4],[207,12,144,8,"serverPitches"],[207,25,144,21],[207,27,144,23],[208,10,145,6],[209,10,146,6],[209,14,146,12,"currentPitches"],[209,28,146,26],[209,31,146,29,"useCacheStore"],[209,44,146,42],[209,45,146,43,"getState"],[209,53,146,51],[209,54,146,52],[209,55,146,53],[209,56,146,54,"pitches"],[209,63,146,61],[210,10,147,6],[210,14,147,12,"hasChanged"],[210,24,147,22],[210,27,147,25,"JSON"],[210,31,147,29],[210,32,147,30,"stringify"],[210,41,147,39],[210,42,147,40,"currentPitches"],[210,56,147,54],[210,57,147,55],[210,62,147,60,"JSON"],[210,66,147,64],[210,67,147,65,"stringify"],[210,76,147,74],[210,77,147,75,"serverPitches"],[210,90,147,88],[210,91,147,89],[211,10,149,6],[211,14,149,10,"hasChanged"],[211,24,149,20],[211,26,149,22],[212,12,150,8,"setPitches"],[212,22,150,18],[212,23,150,19,"serverPitches"],[212,36,150,32],[212,37,150,33],[213,12,151,8,"synced"],[213,18,151,14],[213,21,151,17],[213,25,151,21],[214,10,152,6],[215,8,153,4],[216,8,155,4],[216,12,155,8,"serverBookings"],[216,26,155,22],[216,28,155,24],[217,10,156,6],[218,10,157,6],[218,14,157,12,"currentBookings"],[218,29,157,27],[218,32,157,30,"useCacheStore"],[218,45,157,43],[218,46,157,44,"getState"],[218,54,157,52],[218,55,157,53],[218,56,157,54],[218,57,157,55,"bookings"],[218,65,157,63],[219,10,158,6],[219,14,158,12,"hasChanged"],[219,25,158,22],[219,28,158,25,"JSON"],[219,32,158,29],[219,33,158,30,"stringify"],[219,42,158,39],[219,43,158,40,"currentBookings"],[219,58,158,55],[219,59,158,56],[219,64,158,61,"JSON"],[219,68,158,65],[219,69,158,66,"stringify"],[219,78,158,75],[219,79,158,76,"serverBookings"],[219,93,158,90],[219,94,158,91],[220,10,160,6],[220,14,160,10,"hasChanged"],[220,25,160,20],[220,27,160,22],[221,12,161,8,"setBookings"],[221,23,161,19],[221,24,161,20,"serverBookings"],[221,38,161,34],[221,39,161,35],[222,12,162,8,"synced"],[222,18,162,14],[222,21,162,17],[222,25,162,21],[223,10,163,6],[224,8,164,4],[226,8,166,4],[227,8,167,4],[227,12,167,8,"synced"],[227,18,167,14],[227,20,167,16],[228,10,168,6,"console"],[228,17,168,13],[228,18,168,14,"log"],[228,21,168,17],[228,22,168,18],[228,47,168,43],[228,48,168,44],[229,8,169,4],[230,6,170,2],[230,7,170,3],[231,6,170,3],[231,22,138,8,"syncWithServer"],[231,36,138,22,"syncWithServer"],[231,37,138,22,"_x"],[231,39,138,22],[231,41,138,22,"_x2"],[231,44,138,22],[232,8,138,22],[232,15,138,22,"_ref6"],[232,20,138,22],[232,21,138,22,"apply"],[232,26,138,22],[232,33,138,22,"arguments"],[232,42,138,22],[233,6,138,22],[234,4,138,22],[234,7,170,3],[235,4,172,2],[235,11,172,9],[236,6,173,4,"isOnline"],[236,14,173,12],[237,6,174,4,"isCacheLoaded"],[237,19,174,17],[238,6,175,4,"pitches"],[238,13,175,11],[239,6,176,4,"bookings"],[239,14,176,12],[240,6,177,4,"initOfflineManager"],[240,24,177,22],[241,6,178,4,"syncWithServer"],[241,20,178,18],[242,6,179,4,"setOnlineStatus"],[243,4,180,2],[243,5,180,3],[244,2,181,0],[244,3,181,1],[245,2,181,2,"_s"],[245,4,181,2],[245,5,113,13,"useOfflineManager"],[245,22,113,30],[246,4,113,30],[246,12,123,6,"useCacheStore"],[246,25,123,19],[247,2,123,19],[248,0,123,19],[248,3]],"functionMap":{"names":["<global>","create$argument_0","loadCache","saveCache","setPitches","setBookings","clearCache","setOnlineStatus","checkNetworkStatus","useOfflineManager","initOfflineManager","syncWithServer"],"mappings":"AAA;oCCI;aCY;GDuB;aEG;GFgB;cGG;GHO;eIG;GJO;cKG;GLY;mBMG;GNE;EDC;kCQG;CRO;iCSG;6BCa;GDS;yBEG;GFgC;CTW"},"hasCjsExports":false},"type":"js/module"}]}