{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./NotificationScheduler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":60,"index":117}}],"key":"2z96lx/8U+vMEPJmMI1AQnQjTYQ=","exportNames":["*"],"imports":1}},{"name":"./scheduleNotificationAsync","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":118},"end":{"line":3,"column":59,"index":177}}],"key":"5SfnJH0WozYV5Mt1R15xcEHYaWM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getNextTriggerDateAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _NotificationScheduler = require(_dependencyMap[2], \"./NotificationScheduler\");\n  var NotificationScheduler = _interopDefault(_NotificationScheduler);\n  var _scheduleNotificationAsync = require(_dependencyMap[3], \"./scheduleNotificationAsync\");\n  /**\n   * Allows you to check what will be the next trigger date for given notification trigger input.\n   * @param trigger The schedulable notification trigger you would like to check next trigger date for (of type [`SchedulableNotificationTriggerInput`](#schedulablenotificationtriggerinput)).\n   * @return If the return value is `null`, the notification won't be triggered. Otherwise, the return value is the Unix timestamp in milliseconds\n   * at which the notification will be triggered.\n   * @example Calculate next trigger date for a notification trigger:\n   * ```ts\n   * import * as Notifications from 'expo-notifications';\n   *\n   * async function logNextTriggerDate() {\n   *   try {\n   *     const nextTriggerDate = await Notifications.getNextTriggerDateAsync({\n   *       hour: 9,\n   *       minute: 0,\n   *     });\n   *     console.log(nextTriggerDate === null ? 'No next trigger date' : new Date(nextTriggerDate));\n   *   } catch (e) {\n   *     console.warn(`Couldn't have calculated next trigger date: ${e}`);\n   *   }\n   * }\n   * ```\n   * @header schedule\n   */\n  function getNextTriggerDateAsync(_x) {\n    return _getNextTriggerDateAsync.apply(this, arguments);\n  }\n  function _getNextTriggerDateAsync() {\n    _getNextTriggerDateAsync = (0, _asyncToGenerator.default)(function* (trigger) {\n      if (!NotificationScheduler.default.getNextTriggerDateAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'getNextTriggerDateAsync');\n      }\n      return yield NotificationScheduler.default.getNextTriggerDateAsync((0, _scheduleNotificationAsync.parseTrigger)(trigger));\n    });\n    return _getNextTriggerDateAsync.apply(this, arguments);\n  }\n});","lineCount":59,"map":[[20,2,1,0],[20,6,1,0,"_expoModulesCore"],[20,22,1,0],[20,25,1,0,"require"],[20,32,1,0],[20,33,1,0,"_dependencyMap"],[20,47,1,0],[21,2,2,0],[21,6,2,0,"_NotificationScheduler"],[21,28,2,0],[21,31,2,0,"require"],[21,38,2,0],[21,39,2,0,"_dependencyMap"],[21,53,2,0],[22,2,2,0],[22,6,2,0,"NotificationScheduler"],[22,27,2,0],[22,30,2,0,"_interopDefault"],[22,45,2,0],[22,46,2,0,"_NotificationScheduler"],[22,68,2,0],[23,2,3,0],[23,6,3,0,"_scheduleNotificationAsync"],[23,32,3,0],[23,35,3,0,"require"],[23,42,3,0],[23,43,3,0,"_dependencyMap"],[23,57,3,0],[24,2,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,0,9,0],[30,0,10,0],[31,0,11,0],[32,0,12,0],[33,0,13,0],[34,0,14,0],[35,0,15,0],[36,0,16,0],[37,0,17,0],[38,0,18,0],[39,0,19,0],[40,0,20,0],[41,0,21,0],[42,0,22,0],[43,0,23,0],[44,0,24,0],[45,0,25,0],[46,0,26,0],[47,2,4,0],[47,11,27,30,"getNextTriggerDateAsync"],[47,34,27,53,"getNextTriggerDateAsync"],[47,35,27,53,"_x"],[47,37,27,53],[48,4,27,53],[48,11,27,53,"_getNextTriggerDateAsync"],[48,35,27,53],[48,36,27,53,"apply"],[48,41,27,53],[48,48,27,53,"arguments"],[48,57,27,53],[49,2,27,53],[50,2,27,53],[50,11,27,53,"_getNextTriggerDateAsync"],[50,36,27,53],[51,4,27,53,"_getNextTriggerDateAsync"],[51,28,27,53],[51,35,27,53,"_asyncToGenerator"],[51,52,27,53],[51,53,27,53,"default"],[51,60,27,53],[51,62,27,15],[51,73,27,54,"trigger"],[51,80,27,61],[51,82,27,63],[52,6,28,4],[52,10,28,8],[52,11,28,9,"NotificationScheduler"],[52,32,28,30],[52,33,28,30,"default"],[52,40,28,30],[52,41,28,31,"getNextTriggerDateAsync"],[52,64,28,54],[52,66,28,56],[53,8,29,8],[53,14,29,14],[53,18,29,18,"UnavailabilityError"],[53,34,29,37],[53,35,29,37,"UnavailabilityError"],[53,54,29,37],[53,55,29,38],[53,74,29,57],[53,76,29,59],[53,101,29,84],[53,102,29,85],[54,6,30,4],[55,6,31,4],[55,19,31,17,"NotificationScheduler"],[55,40,31,38],[55,41,31,38,"default"],[55,48,31,38],[55,49,31,39,"getNextTriggerDateAsync"],[55,72,31,62],[55,73,31,63],[55,77,31,63,"parseTrigger"],[55,103,31,75],[55,104,31,75,"parseTrigger"],[55,116,31,75],[55,118,31,76,"trigger"],[55,125,31,83],[55,126,31,84],[55,127,31,85],[56,4,32,0],[56,5,32,1],[57,4,32,1],[57,11,32,1,"_getNextTriggerDateAsync"],[57,35,32,1],[57,36,32,1,"apply"],[57,41,32,1],[57,48,32,1,"arguments"],[57,57,32,1],[58,2,32,1],[59,0,32,1],[59,3]],"functionMap":{"names":["<global>","getNextTriggerDateAsync"],"mappings":"AAA;eC0B;CDK"},"hasCjsExports":false},"type":"js/module"}]}