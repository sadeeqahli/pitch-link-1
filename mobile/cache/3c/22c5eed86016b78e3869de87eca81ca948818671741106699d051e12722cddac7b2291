{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"jwt-decode","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":24,"index":1300},"end":{"line":26,"column":45,"index":1321}}],"key":"Lvkc7uY3d8Z1asHek4wTTt6QtDk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value\n  }) : obj[key] = value;\n  var __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: true\n    });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      var _loop = function (key) {\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var key of __getOwnPropNames(from)) {\n        _loop(key);\n      }\n    }\n    return to;\n  };\n  var __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n  var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  var authentication_manager_exports = {};\n  __export(authentication_manager_exports, {\n    AuthenticationManager: () => AuthenticationManager\n  });\n  module.exports = __toCommonJS(authentication_manager_exports);\n  var import_jwt_decode = require(_dependencyMap[3], \"jwt-decode\");\n  var MAXIMUM_REFRESH_DELAY = 20 * 24 * 60 * 60 * 1e3;\n  var MAX_TOKEN_CONFIRMATION_ATTEMPTS = 2;\n  var AuthenticationManager = /*#__PURE__*/function () {\n    function AuthenticationManager(syncState, callbacks, config) {\n      _classCallCheck(this, AuthenticationManager);\n      __publicField(this, \"authState\", {\n        state: \"noAuth\"\n      });\n      // Used to detect races involving `setConfig` calls\n      // while a token is being fetched.\n      __publicField(this, \"configVersion\", 0);\n      // Shared by the BaseClient so that the auth manager can easily inspect it\n      __publicField(this, \"syncState\");\n      // Passed down by BaseClient, sends a message to the server\n      __publicField(this, \"authenticate\");\n      __publicField(this, \"stopSocket\");\n      __publicField(this, \"tryRestartSocket\");\n      __publicField(this, \"pauseSocket\");\n      __publicField(this, \"resumeSocket\");\n      // Passed down by BaseClient, sends a message to the server\n      __publicField(this, \"clearAuth\");\n      __publicField(this, \"logger\");\n      __publicField(this, \"refreshTokenLeewaySeconds\");\n      // Number of times we have attempted to confirm the latest token. We retry up\n      // to `MAX_TOKEN_CONFIRMATION_ATTEMPTS` times.\n      __publicField(this, \"tokenConfirmationAttempts\", 0);\n      this.syncState = syncState;\n      this.authenticate = callbacks.authenticate;\n      this.stopSocket = callbacks.stopSocket;\n      this.tryRestartSocket = callbacks.tryRestartSocket;\n      this.pauseSocket = callbacks.pauseSocket;\n      this.resumeSocket = callbacks.resumeSocket;\n      this.clearAuth = callbacks.clearAuth;\n      this.logger = config.logger;\n      this.refreshTokenLeewaySeconds = config.refreshTokenLeewaySeconds;\n    }\n    return _createClass(AuthenticationManager, [{\n      key: \"setConfig\",\n      value: function () {\n        var _setConfig = _asyncToGenerator(function* (fetchToken, onChange) {\n          this.resetAuthState();\n          this._logVerbose(\"pausing WS for auth token fetch\");\n          this.pauseSocket();\n          var token = yield this.fetchTokenAndGuardAgainstRace(fetchToken, {\n            forceRefreshToken: false\n          });\n          if (token.isFromOutdatedConfig) {\n            return;\n          }\n          if (token.value) {\n            this.setAuthState({\n              state: \"waitingForServerConfirmationOfCachedToken\",\n              config: {\n                fetchToken,\n                onAuthChange: onChange\n              },\n              hasRetried: false\n            });\n            this.authenticate(token.value);\n          } else {\n            this.setAuthState({\n              state: \"initialRefetch\",\n              config: {\n                fetchToken,\n                onAuthChange: onChange\n              }\n            });\n            yield this.refetchToken();\n          }\n          this._logVerbose(\"resuming WS after auth token fetch\");\n          this.resumeSocket();\n        });\n        function setConfig(_x, _x2) {\n          return _setConfig.apply(this, arguments);\n        }\n        return setConfig;\n      }()\n    }, {\n      key: \"onTransition\",\n      value: function onTransition(serverMessage) {\n        if (!this.syncState.isCurrentOrNewerAuthVersion(serverMessage.endVersion.identity)) {\n          return;\n        }\n        if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n          return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n          this._logVerbose(\"server confirmed auth token is valid\");\n          void this.refetchToken();\n          this.authState.config.onAuthChange(true);\n          return;\n        }\n        if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n          this._logVerbose(\"server confirmed new auth token is valid\");\n          this.scheduleTokenRefetch(this.authState.token);\n          this.tokenConfirmationAttempts = 0;\n          if (!this.authState.hadAuth) {\n            this.authState.config.onAuthChange(true);\n          }\n        }\n      }\n    }, {\n      key: \"onAuthError\",\n      value: function onAuthError(serverMessage) {\n        if (serverMessage.authUpdateAttempted === false && (this.authState.state === \"waitingForServerConfirmationOfFreshToken\" || this.authState.state === \"waitingForServerConfirmationOfCachedToken\")) {\n          this._logVerbose(\"ignoring non-auth token expired error\");\n          return;\n        }\n        var baseVersion = serverMessage.baseVersion;\n        if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n          this._logVerbose(\"ignoring auth error for previous auth attempt\");\n          return;\n        }\n        void this.tryToReauthenticate(serverMessage);\n        return;\n      }\n      // This is similar to `refetchToken` defined below, in fact we\n      // don't represent them as different states, but it is different\n      // in that we pause the WebSocket so that mutations\n      // don't retry with bad auth.\n    }, {\n      key: \"tryToReauthenticate\",\n      value: function () {\n        var _tryToReauthenticate = _asyncToGenerator(function* (serverMessage) {\n          this._logVerbose(`attempting to reauthenticate: ${serverMessage.error}`);\n          if (\n          // No way to fetch another token, kaboom\n          this.authState.state === \"noAuth\" ||\n          // We failed on a fresh token. After a small number of retries, we give up\n          // and clear the auth state to avoid infinite retries.\n          this.authState.state === \"waitingForServerConfirmationOfFreshToken\" && this.tokenConfirmationAttempts >= MAX_TOKEN_CONFIRMATION_ATTEMPTS) {\n            this.logger.error(`Failed to authenticate: \"${serverMessage.error}\", check your server auth config`);\n            if (this.syncState.hasAuth()) {\n              this.syncState.clearAuth();\n            }\n            if (this.authState.state !== \"noAuth\") {\n              this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n            }\n            return;\n          }\n          if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n            this.tokenConfirmationAttempts++;\n            this._logVerbose(`retrying reauthentication, ${MAX_TOKEN_CONFIRMATION_ATTEMPTS - this.tokenConfirmationAttempts} attempts remaining`);\n          }\n          yield this.stopSocket();\n          var token = yield this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n          });\n          if (token.isFromOutdatedConfig) {\n            return;\n          }\n          if (token.value && this.syncState.isNewAuth(token.value)) {\n            this.authenticate(token.value);\n            this.setAuthState({\n              state: \"waitingForServerConfirmationOfFreshToken\",\n              config: this.authState.config,\n              token: token.value,\n              hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n            });\n          } else {\n            this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n            if (this.syncState.hasAuth()) {\n              this.syncState.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n          }\n          this.tryRestartSocket();\n        });\n        function tryToReauthenticate(_x3) {\n          return _tryToReauthenticate.apply(this, arguments);\n        }\n        return tryToReauthenticate;\n      }() // Force refetch the token and schedule another refetch\n      // before the token expires - an active client should never\n      // need to reauthenticate.\n    }, {\n      key: \"refetchToken\",\n      value: function () {\n        var _refetchToken = _asyncToGenerator(function* () {\n          if (this.authState.state === \"noAuth\") {\n            return;\n          }\n          this._logVerbose(\"refetching auth token\");\n          var token = yield this.fetchTokenAndGuardAgainstRace(this.authState.config.fetchToken, {\n            forceRefreshToken: true\n          });\n          if (token.isFromOutdatedConfig) {\n            return;\n          }\n          if (token.value) {\n            if (this.syncState.isNewAuth(token.value)) {\n              this.setAuthState({\n                state: \"waitingForServerConfirmationOfFreshToken\",\n                hadAuth: this.syncState.hasAuth(),\n                token: token.value,\n                config: this.authState.config\n              });\n              this.authenticate(token.value);\n            } else {\n              this.setAuthState({\n                state: \"notRefetching\",\n                config: this.authState.config\n              });\n            }\n          } else {\n            this._logVerbose(\"refetching token failed\");\n            if (this.syncState.hasAuth()) {\n              this.clearAuth();\n            }\n            this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n          }\n          this._logVerbose(\"restarting WS after auth token fetch (if currently stopped)\");\n          this.tryRestartSocket();\n        });\n        function refetchToken() {\n          return _refetchToken.apply(this, arguments);\n        }\n        return refetchToken;\n      }()\n    }, {\n      key: \"scheduleTokenRefetch\",\n      value: function scheduleTokenRefetch(token) {\n        if (this.authState.state === \"noAuth\") {\n          return;\n        }\n        var decodedToken = this.decodeToken(token);\n        if (!decodedToken) {\n          this.logger.error(\"Auth token is not a valid JWT, cannot refetch the token\");\n          return;\n        }\n        var iat = decodedToken.iat,\n          exp = decodedToken.exp;\n        if (!iat || !exp) {\n          this.logger.error(\"Auth token does not have required fields, cannot refetch the token\");\n          return;\n        }\n        var tokenValiditySeconds = exp - iat;\n        if (tokenValiditySeconds <= 2) {\n          this.logger.error(\"Auth token does not live long enough, cannot refetch the token\");\n          return;\n        }\n        var delay = Math.min(MAXIMUM_REFRESH_DELAY, (tokenValiditySeconds - this.refreshTokenLeewaySeconds) * 1e3);\n        if (delay <= 0) {\n          this.logger.warn(`Refetching auth token immediately, configured leeway ${this.refreshTokenLeewaySeconds}s is larger than the token's lifetime ${tokenValiditySeconds}s`);\n          delay = 0;\n        }\n        var refetchTokenTimeoutId = setTimeout(() => {\n          this._logVerbose(\"running scheduled token refetch\");\n          void this.refetchToken();\n        }, delay);\n        this.setAuthState({\n          state: \"waitingForScheduledRefetch\",\n          refetchTokenTimeoutId,\n          config: this.authState.config\n        });\n        this._logVerbose(`scheduled preemptive auth token refetching in ${delay}ms`);\n      }\n      // Protects against simultaneous calls to `setConfig`\n      // while we're fetching a token\n    }, {\n      key: \"fetchTokenAndGuardAgainstRace\",\n      value: function () {\n        var _fetchTokenAndGuardAgainstRace = _asyncToGenerator(function* (fetchToken, fetchArgs) {\n          var originalConfigVersion = ++this.configVersion;\n          this._logVerbose(`fetching token with config version ${originalConfigVersion}`);\n          var token = yield fetchToken(fetchArgs);\n          if (this.configVersion !== originalConfigVersion) {\n            this._logVerbose(`stale config version, expected ${originalConfigVersion}, got ${this.configVersion}`);\n            return {\n              isFromOutdatedConfig: true\n            };\n          }\n          return {\n            isFromOutdatedConfig: false,\n            value: token\n          };\n        });\n        function fetchTokenAndGuardAgainstRace(_x4, _x5) {\n          return _fetchTokenAndGuardAgainstRace.apply(this, arguments);\n        }\n        return fetchTokenAndGuardAgainstRace;\n      }()\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this.resetAuthState();\n        this.configVersion++;\n        this._logVerbose(`config version bumped to ${this.configVersion}`);\n      }\n    }, {\n      key: \"setAndReportAuthFailed\",\n      value: function setAndReportAuthFailed(onAuthChange) {\n        onAuthChange(false);\n        this.resetAuthState();\n      }\n    }, {\n      key: \"resetAuthState\",\n      value: function resetAuthState() {\n        this.setAuthState({\n          state: \"noAuth\"\n        });\n      }\n    }, {\n      key: \"setAuthState\",\n      value: function setAuthState(newAuth) {\n        var authStateForLog = newAuth.state === \"waitingForServerConfirmationOfFreshToken\" ? {\n          hadAuth: newAuth.hadAuth,\n          state: newAuth.state,\n          token: `...${newAuth.token.slice(-7)}`\n        } : {\n          state: newAuth.state\n        };\n        this._logVerbose(`setting auth state to ${JSON.stringify(authStateForLog)}`);\n        switch (newAuth.state) {\n          case \"waitingForScheduledRefetch\":\n          case \"notRefetching\":\n          case \"noAuth\":\n            this.tokenConfirmationAttempts = 0;\n            break;\n          case \"waitingForServerConfirmationOfFreshToken\":\n          case \"waitingForServerConfirmationOfCachedToken\":\n          case \"initialRefetch\":\n            break;\n          default:\n            {\n              newAuth;\n            }\n        }\n        if (this.authState.state === \"waitingForScheduledRefetch\") {\n          clearTimeout(this.authState.refetchTokenTimeoutId);\n          this.syncState.markAuthCompletion();\n        }\n        this.authState = newAuth;\n      }\n    }, {\n      key: \"decodeToken\",\n      value: function decodeToken(token) {\n        try {\n          return (0, import_jwt_decode.jwtDecode)(token);\n        } catch (e) {\n          this._logVerbose(`Error decoding token: ${e instanceof Error ? e.message : \"Unknown error\"}`);\n          return null;\n        }\n      }\n    }, {\n      key: \"_logVerbose\",\n      value: function _logVerbose(message) {\n        this.logger.logVerbose(`${message} [v${this.configVersion}]`);\n      }\n    }]);\n  }();\n});","lineCount":398,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[4,96,1,13,"default"],[4,103,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,2,0],[7,6,2,4,"__defProp"],[7,15,2,13],[7,18,2,16,"Object"],[7,24,2,22],[7,25,2,23,"defineProperty"],[7,39,2,37],[8,2,3,0],[8,6,3,4,"__getOwnPropDesc"],[8,22,3,20],[8,25,3,23,"Object"],[8,31,3,29],[8,32,3,30,"getOwnPropertyDescriptor"],[8,56,3,54],[9,2,4,0],[9,6,4,4,"__getOwnPropNames"],[9,23,4,21],[9,26,4,24,"Object"],[9,32,4,30],[9,33,4,31,"getOwnPropertyNames"],[9,52,4,50],[10,2,5,0],[10,6,5,4,"__hasOwnProp"],[10,18,5,16],[10,21,5,19,"Object"],[10,27,5,25],[10,28,5,26,"prototype"],[10,37,5,35],[10,38,5,36,"hasOwnProperty"],[10,52,5,50],[11,2,6,0],[11,6,6,4,"__defNormalProp"],[11,21,6,19],[11,24,6,22,"__defNormalProp"],[11,25,6,23,"obj"],[11,28,6,26],[11,30,6,28,"key"],[11,33,6,31],[11,35,6,33,"value"],[11,40,6,38],[11,45,6,43,"key"],[11,48,6,46],[11,52,6,50,"obj"],[11,55,6,53],[11,58,6,56,"__defProp"],[11,67,6,65],[11,68,6,66,"obj"],[11,71,6,69],[11,73,6,71,"key"],[11,76,6,74],[11,78,6,76],[12,4,6,78,"enumerable"],[12,14,6,88],[12,16,6,90],[12,20,6,94],[13,4,6,96,"configurable"],[13,16,6,108],[13,18,6,110],[13,22,6,114],[14,4,6,116,"writable"],[14,12,6,124],[14,14,6,126],[14,18,6,130],[15,4,6,132,"value"],[16,2,6,138],[16,3,6,139],[16,4,6,140],[16,7,6,143,"obj"],[16,10,6,146],[16,11,6,147,"key"],[16,14,6,150],[16,15,6,151],[16,18,6,154,"value"],[16,23,6,159],[17,2,7,0],[17,6,7,4,"__export"],[17,14,7,12],[17,17,7,15,"__export"],[17,18,7,16,"target"],[17,24,7,22],[17,26,7,24,"all"],[17,29,7,27],[17,34,7,32],[18,4,8,2],[18,9,8,7],[18,13,8,11,"name"],[18,17,8,15],[18,21,8,19,"all"],[18,24,8,22],[18,26,9,4,"__defProp"],[18,35,9,13],[18,36,9,14,"target"],[18,42,9,20],[18,44,9,22,"name"],[18,48,9,26],[18,50,9,28],[19,6,9,30,"get"],[19,9,9,33],[19,11,9,35,"all"],[19,14,9,38],[19,15,9,39,"name"],[19,19,9,43],[19,20,9,44],[20,6,9,46,"enumerable"],[20,16,9,56],[20,18,9,58],[21,4,9,63],[21,5,9,64],[21,6,9,65],[22,2,10,0],[22,3,10,1],[23,2,11,0],[23,6,11,4,"__copyProps"],[23,17,11,15],[23,20,11,18,"__copyProps"],[23,21,11,19,"to"],[23,23,11,21],[23,25,11,23,"from"],[23,29,11,27],[23,31,11,29,"except"],[23,37,11,35],[23,39,11,37,"desc"],[23,43,11,41],[23,48,11,46],[24,4,12,2],[24,8,12,6,"from"],[24,12,12,10],[24,16,12,14],[24,23,12,21,"from"],[24,27,12,25],[24,32,12,30],[24,40,12,38],[24,44,12,42],[24,51,12,49,"from"],[24,55,12,53],[24,60,12,58],[24,70,12,68],[24,72,12,70],[25,6,12,70],[25,10,12,70,"_loop"],[25,15,12,70],[25,27,12,70,"_loop"],[25,28,12,70,"key"],[25,31,12,70],[26,8,14,6],[26,12,14,10],[26,13,14,11,"__hasOwnProp"],[26,25,14,23],[26,26,14,24,"call"],[26,30,14,28],[26,31,14,29,"to"],[26,33,14,31],[26,35,14,33,"key"],[26,38,14,36],[26,39,14,37],[26,43,14,41,"key"],[26,46,14,44],[26,51,14,49,"except"],[26,57,14,55],[26,59,15,8,"__defProp"],[26,68,15,17],[26,69,15,18,"to"],[26,71,15,20],[26,73,15,22,"key"],[26,76,15,25],[26,78,15,27],[27,10,15,29,"get"],[27,13,15,32],[27,15,15,34,"get"],[27,16,15,34],[27,21,15,40,"from"],[27,25,15,44],[27,26,15,45,"key"],[27,29,15,48],[27,30,15,49],[28,10,15,51,"enumerable"],[28,20,15,61],[28,22,15,63],[28,24,15,65,"desc"],[28,28,15,69],[28,31,15,72,"__getOwnPropDesc"],[28,47,15,88],[28,48,15,89,"from"],[28,52,15,93],[28,54,15,95,"key"],[28,57,15,98],[28,58,15,99],[28,59,15,100],[28,63,15,104,"desc"],[28,67,15,108],[28,68,15,109,"enumerable"],[29,8,15,120],[29,9,15,121],[29,10,15,122],[30,6,15,123],[31,6,13,4],[31,11,13,9],[31,15,13,13,"key"],[31,18,13,16],[31,22,13,20,"__getOwnPropNames"],[31,39,13,37],[31,40,13,38,"from"],[31,44,13,42],[31,45,13,43],[32,8,13,43,"_loop"],[32,13,13,43],[32,14,13,43,"key"],[32,17,13,43],[33,6,13,43],[34,4,16,2],[35,4,17,2],[35,11,17,9,"to"],[35,13,17,11],[36,2,18,0],[36,3,18,1],[37,2,19,0],[37,6,19,4,"__toCommonJS"],[37,18,19,16],[37,21,19,20,"mod"],[37,24,19,23],[37,28,19,28,"__copyProps"],[37,39,19,39],[37,40,19,40,"__defProp"],[37,49,19,49],[37,50,19,50],[37,51,19,51],[37,52,19,52],[37,54,19,54],[37,66,19,66],[37,68,19,68],[38,4,19,70,"value"],[38,9,19,75],[38,11,19,77],[39,2,19,82],[39,3,19,83],[39,4,19,84],[39,6,19,86,"mod"],[39,9,19,89],[39,10,19,90],[40,2,20,0],[40,6,20,4,"__publicField"],[40,19,20,17],[40,22,20,20,"__publicField"],[40,23,20,21,"obj"],[40,26,20,24],[40,28,20,26,"key"],[40,31,20,29],[40,33,20,31,"value"],[40,38,20,36],[40,43,20,41,"__defNormalProp"],[40,58,20,56],[40,59,20,57,"obj"],[40,62,20,60],[40,64,20,62],[40,71,20,69,"key"],[40,74,20,72],[40,79,20,77],[40,87,20,85],[40,90,20,88,"key"],[40,93,20,91],[40,96,20,94],[40,98,20,96],[40,101,20,99,"key"],[40,104,20,102],[40,106,20,104,"value"],[40,111,20,109],[40,112,20,110],[41,2,21,0],[41,6,21,4,"authentication_manager_exports"],[41,36,21,34],[41,39,21,37],[41,40,21,38],[41,41,21,39],[42,2,22,0,"__export"],[42,10,22,8],[42,11,22,9,"authentication_manager_exports"],[42,41,22,39],[42,43,22,41],[43,4,23,2,"AuthenticationManager"],[43,25,23,23],[43,27,23,25,"AuthenticationManager"],[43,28,23,25],[43,33,23,31,"AuthenticationManager"],[44,2,24,0],[44,3,24,1],[44,4,24,2],[45,2,25,0,"module"],[45,8,25,6],[45,9,25,7,"exports"],[45,16,25,14],[45,19,25,17,"__toCommonJS"],[45,31,25,29],[45,32,25,30,"authentication_manager_exports"],[45,62,25,60],[45,63,25,61],[46,2,26,0],[46,6,26,4,"import_jwt_decode"],[46,23,26,21],[46,26,26,24,"require"],[46,33,26,31],[46,34,26,31,"_dependencyMap"],[46,48,26,31],[46,65,26,44],[46,66,26,45],[47,2,27,0],[47,6,27,6,"MAXIMUM_REFRESH_DELAY"],[47,27,27,27],[47,30,27,30],[47,32,27,32],[47,35,27,35],[47,37,27,37],[47,40,27,40],[47,42,27,42],[47,45,27,45],[47,47,27,47],[47,50,27,50],[47,53,27,53],[48,2,28,0],[48,6,28,6,"MAX_TOKEN_CONFIRMATION_ATTEMPTS"],[48,37,28,37],[48,40,28,40],[48,41,28,41],[49,2,28,42],[49,6,29,6,"AuthenticationManager"],[49,27,29,27],[50,4,30,2],[50,13,30,2,"AuthenticationManager"],[50,35,30,14,"syncState"],[50,44,30,23],[50,46,30,25,"callbacks"],[50,55,30,34],[50,57,30,36,"config"],[50,63,30,42],[50,65,30,44],[51,6,30,44,"_classCallCheck"],[51,21,30,44],[51,28,30,44,"AuthenticationManager"],[51,49,30,44],[52,6,31,4,"__publicField"],[52,19,31,17],[52,20,31,18],[52,24,31,22],[52,26,31,24],[52,37,31,35],[52,39,31,37],[53,8,31,39,"state"],[53,13,31,44],[53,15,31,46],[54,6,31,55],[54,7,31,56],[54,8,31,57],[55,6,32,4],[56,6,33,4],[57,6,34,4,"__publicField"],[57,19,34,17],[57,20,34,18],[57,24,34,22],[57,26,34,24],[57,41,34,39],[57,43,34,41],[57,44,34,42],[57,45,34,43],[58,6,35,4],[59,6,36,4,"__publicField"],[59,19,36,17],[59,20,36,18],[59,24,36,22],[59,26,36,24],[59,37,36,35],[59,38,36,36],[60,6,37,4],[61,6,38,4,"__publicField"],[61,19,38,17],[61,20,38,18],[61,24,38,22],[61,26,38,24],[61,40,38,38],[61,41,38,39],[62,6,39,4,"__publicField"],[62,19,39,17],[62,20,39,18],[62,24,39,22],[62,26,39,24],[62,38,39,36],[62,39,39,37],[63,6,40,4,"__publicField"],[63,19,40,17],[63,20,40,18],[63,24,40,22],[63,26,40,24],[63,44,40,42],[63,45,40,43],[64,6,41,4,"__publicField"],[64,19,41,17],[64,20,41,18],[64,24,41,22],[64,26,41,24],[64,39,41,37],[64,40,41,38],[65,6,42,4,"__publicField"],[65,19,42,17],[65,20,42,18],[65,24,42,22],[65,26,42,24],[65,40,42,38],[65,41,42,39],[66,6,43,4],[67,6,44,4,"__publicField"],[67,19,44,17],[67,20,44,18],[67,24,44,22],[67,26,44,24],[67,37,44,35],[67,38,44,36],[68,6,45,4,"__publicField"],[68,19,45,17],[68,20,45,18],[68,24,45,22],[68,26,45,24],[68,34,45,32],[68,35,45,33],[69,6,46,4,"__publicField"],[69,19,46,17],[69,20,46,18],[69,24,46,22],[69,26,46,24],[69,53,46,51],[69,54,46,52],[70,6,47,4],[71,6,48,4],[72,6,49,4,"__publicField"],[72,19,49,17],[72,20,49,18],[72,24,49,22],[72,26,49,24],[72,53,49,51],[72,55,49,53],[72,56,49,54],[72,57,49,55],[73,6,50,4],[73,10,50,8],[73,11,50,9,"syncState"],[73,20,50,18],[73,23,50,21,"syncState"],[73,32,50,30],[74,6,51,4],[74,10,51,8],[74,11,51,9,"authenticate"],[74,23,51,21],[74,26,51,24,"callbacks"],[74,35,51,33],[74,36,51,34,"authenticate"],[74,48,51,46],[75,6,52,4],[75,10,52,8],[75,11,52,9,"stopSocket"],[75,21,52,19],[75,24,52,22,"callbacks"],[75,33,52,31],[75,34,52,32,"stopSocket"],[75,44,52,42],[76,6,53,4],[76,10,53,8],[76,11,53,9,"tryRestartSocket"],[76,27,53,25],[76,30,53,28,"callbacks"],[76,39,53,37],[76,40,53,38,"tryRestartSocket"],[76,56,53,54],[77,6,54,4],[77,10,54,8],[77,11,54,9,"pauseSocket"],[77,22,54,20],[77,25,54,23,"callbacks"],[77,34,54,32],[77,35,54,33,"pauseSocket"],[77,46,54,44],[78,6,55,4],[78,10,55,8],[78,11,55,9,"resumeSocket"],[78,23,55,21],[78,26,55,24,"callbacks"],[78,35,55,33],[78,36,55,34,"resumeSocket"],[78,48,55,46],[79,6,56,4],[79,10,56,8],[79,11,56,9,"clearAuth"],[79,20,56,18],[79,23,56,21,"callbacks"],[79,32,56,30],[79,33,56,31,"clearAuth"],[79,42,56,40],[80,6,57,4],[80,10,57,8],[80,11,57,9,"logger"],[80,17,57,15],[80,20,57,18,"config"],[80,26,57,24],[80,27,57,25,"logger"],[80,33,57,31],[81,6,58,4],[81,10,58,8],[81,11,58,9,"refreshTokenLeewaySeconds"],[81,36,58,34],[81,39,58,37,"config"],[81,45,58,43],[81,46,58,44,"refreshTokenLeewaySeconds"],[81,71,58,69],[82,4,59,2],[83,4,59,3],[83,11,59,3,"_createClass"],[83,23,59,3],[83,24,59,3,"AuthenticationManager"],[83,45,59,3],[84,6,59,3,"key"],[84,9,59,3],[85,6,59,3,"value"],[85,11,59,3],[86,8,59,3],[86,12,59,3,"_setConfig"],[86,22,59,3],[86,25,59,3,"_asyncToGenerator"],[86,42,59,3],[86,43,60,2],[86,54,60,18,"fetchToken"],[86,64,60,28],[86,66,60,30,"onChange"],[86,74,60,38],[86,76,60,40],[87,10,61,4],[87,14,61,8],[87,15,61,9,"resetAuthState"],[87,29,61,23],[87,30,61,24],[87,31,61,25],[88,10,62,4],[88,14,62,8],[88,15,62,9,"_logVerbose"],[88,26,62,20],[88,27,62,21],[88,60,62,54],[88,61,62,55],[89,10,63,4],[89,14,63,8],[89,15,63,9,"pauseSocket"],[89,26,63,20],[89,27,63,21],[89,28,63,22],[90,10,64,4],[90,14,64,10,"token"],[90,19,64,15],[90,28,64,24],[90,32,64,28],[90,33,64,29,"fetchTokenAndGuardAgainstRace"],[90,62,64,58],[90,63,64,59,"fetchToken"],[90,73,64,69],[90,75,64,71],[91,12,65,6,"forceRefreshToken"],[91,29,65,23],[91,31,65,25],[92,10,66,4],[92,11,66,5],[92,12,66,6],[93,10,67,4],[93,14,67,8,"token"],[93,19,67,13],[93,20,67,14,"isFromOutdatedConfig"],[93,40,67,34],[93,42,67,36],[94,12,68,6],[95,10,69,4],[96,10,70,4],[96,14,70,8,"token"],[96,19,70,13],[96,20,70,14,"value"],[96,25,70,19],[96,27,70,21],[97,12,71,6],[97,16,71,10],[97,17,71,11,"setAuthState"],[97,29,71,23],[97,30,71,24],[98,14,72,8,"state"],[98,19,72,13],[98,21,72,15],[98,64,72,58],[99,14,73,8,"config"],[99,20,73,14],[99,22,73,16],[100,16,73,18,"fetchToken"],[100,26,73,28],[101,16,73,30,"onAuthChange"],[101,28,73,42],[101,30,73,44,"onChange"],[102,14,73,53],[102,15,73,54],[103,14,74,8,"hasRetried"],[103,24,74,18],[103,26,74,20],[104,12,75,6],[104,13,75,7],[104,14,75,8],[105,12,76,6],[105,16,76,10],[105,17,76,11,"authenticate"],[105,29,76,23],[105,30,76,24,"token"],[105,35,76,29],[105,36,76,30,"value"],[105,41,76,35],[105,42,76,36],[106,10,77,4],[106,11,77,5],[106,17,77,11],[107,12,78,6],[107,16,78,10],[107,17,78,11,"setAuthState"],[107,29,78,23],[107,30,78,24],[108,14,79,8,"state"],[108,19,79,13],[108,21,79,15],[108,37,79,31],[109,14,80,8,"config"],[109,20,80,14],[109,22,80,16],[110,16,80,18,"fetchToken"],[110,26,80,28],[111,16,80,30,"onAuthChange"],[111,28,80,42],[111,30,80,44,"onChange"],[112,14,80,53],[113,12,81,6],[113,13,81,7],[113,14,81,8],[114,12,82,6],[114,18,82,12],[114,22,82,16],[114,23,82,17,"refetchToken"],[114,35,82,29],[114,36,82,30],[114,37,82,31],[115,10,83,4],[116,10,84,4],[116,14,84,8],[116,15,84,9,"_logVerbose"],[116,26,84,20],[116,27,84,21],[116,63,84,57],[116,64,84,58],[117,10,85,4],[117,14,85,8],[117,15,85,9,"resumeSocket"],[117,27,85,21],[117,28,85,22],[117,29,85,23],[118,8,86,2],[118,9,86,3],[119,8,86,3],[119,17,60,8,"setConfig"],[119,26,60,17,"setConfig"],[119,27,60,17,"_x"],[119,29,60,17],[119,31,60,17,"_x2"],[119,34,60,17],[120,10,60,17],[120,17,60,17,"_setConfig"],[120,27,60,17],[120,28,60,17,"apply"],[120,33,60,17],[120,40,60,17,"arguments"],[120,49,60,17],[121,8,60,17],[122,8,60,17],[122,15,60,8,"setConfig"],[122,24,60,17],[123,6,60,17],[124,4,60,17],[125,6,60,17,"key"],[125,9,60,17],[126,6,60,17,"value"],[126,11,60,17],[126,13,87,2],[126,22,87,2,"onTransition"],[126,34,87,14,"onTransition"],[126,35,87,15,"serverMessage"],[126,48,87,28],[126,50,87,30],[127,8,88,4],[127,12,88,8],[127,13,88,9],[127,17,88,13],[127,18,88,14,"syncState"],[127,27,88,23],[127,28,88,24,"isCurrentOrNewerAuthVersion"],[127,55,88,51],[127,56,89,6,"serverMessage"],[127,69,89,19],[127,70,89,20,"endVersion"],[127,80,89,30],[127,81,89,31,"identity"],[127,89,90,4],[127,90,90,5],[127,92,90,7],[128,10,91,6],[129,8,92,4],[130,8,93,4],[130,12,93,8,"serverMessage"],[130,25,93,21],[130,26,93,22,"endVersion"],[130,36,93,32],[130,37,93,33,"identity"],[130,45,93,41],[130,49,93,45,"serverMessage"],[130,62,93,58],[130,63,93,59,"startVersion"],[130,75,93,71],[130,76,93,72,"identity"],[130,84,93,80],[130,86,93,82],[131,10,94,6],[132,8,95,4],[133,8,96,4],[133,12,96,8],[133,16,96,12],[133,17,96,13,"authState"],[133,26,96,22],[133,27,96,23,"state"],[133,32,96,28],[133,37,96,33],[133,80,96,76],[133,82,96,78],[134,10,97,6],[134,14,97,10],[134,15,97,11,"_logVerbose"],[134,26,97,22],[134,27,97,23],[134,65,97,61],[134,66,97,62],[135,10,98,6],[135,15,98,11],[135,19,98,15],[135,20,98,16,"refetchToken"],[135,32,98,28],[135,33,98,29],[135,34,98,30],[136,10,99,6],[136,14,99,10],[136,15,99,11,"authState"],[136,24,99,20],[136,25,99,21,"config"],[136,31,99,27],[136,32,99,28,"onAuthChange"],[136,44,99,40],[136,45,99,41],[136,49,99,45],[136,50,99,46],[137,10,100,6],[138,8,101,4],[139,8,102,4],[139,12,102,8],[139,16,102,12],[139,17,102,13,"authState"],[139,26,102,22],[139,27,102,23,"state"],[139,32,102,28],[139,37,102,33],[139,79,102,75],[139,81,102,77],[140,10,103,6],[140,14,103,10],[140,15,103,11,"_logVerbose"],[140,26,103,22],[140,27,103,23],[140,69,103,65],[140,70,103,66],[141,10,104,6],[141,14,104,10],[141,15,104,11,"scheduleTokenRefetch"],[141,35,104,31],[141,36,104,32],[141,40,104,36],[141,41,104,37,"authState"],[141,50,104,46],[141,51,104,47,"token"],[141,56,104,52],[141,57,104,53],[142,10,105,6],[142,14,105,10],[142,15,105,11,"tokenConfirmationAttempts"],[142,40,105,36],[142,43,105,39],[142,44,105,40],[143,10,106,6],[143,14,106,10],[143,15,106,11],[143,19,106,15],[143,20,106,16,"authState"],[143,29,106,25],[143,30,106,26,"hadAuth"],[143,37,106,33],[143,39,106,35],[144,12,107,8],[144,16,107,12],[144,17,107,13,"authState"],[144,26,107,22],[144,27,107,23,"config"],[144,33,107,29],[144,34,107,30,"onAuthChange"],[144,46,107,42],[144,47,107,43],[144,51,107,47],[144,52,107,48],[145,10,108,6],[146,8,109,4],[147,6,110,2],[148,4,110,3],[149,6,110,3,"key"],[149,9,110,3],[150,6,110,3,"value"],[150,11,110,3],[150,13,111,2],[150,22,111,2,"onAuthError"],[150,33,111,13,"onAuthError"],[150,34,111,14,"serverMessage"],[150,47,111,27],[150,49,111,29],[151,8,112,4],[151,12,112,8,"serverMessage"],[151,25,112,21],[151,26,112,22,"authUpdateAttempted"],[151,45,112,41],[151,50,112,46],[151,55,112,51],[151,60,112,56],[151,64,112,60],[151,65,112,61,"authState"],[151,74,112,70],[151,75,112,71,"state"],[151,80,112,76],[151,85,112,81],[151,127,112,123],[151,131,112,127],[151,135,112,131],[151,136,112,132,"authState"],[151,145,112,141],[151,146,112,142,"state"],[151,151,112,147],[151,156,112,152],[151,199,112,195],[151,200,112,196],[151,202,112,198],[152,10,113,6],[152,14,113,10],[152,15,113,11,"_logVerbose"],[152,26,113,22],[152,27,113,23],[152,66,113,62],[152,67,113,63],[153,10,114,6],[154,8,115,4],[155,8,116,4],[155,12,116,12,"baseVersion"],[155,23,116,23],[155,26,116,28,"serverMessage"],[155,39,116,41],[155,40,116,12,"baseVersion"],[155,51,116,23],[156,8,117,4],[156,12,117,8],[156,13,117,9],[156,17,117,13],[156,18,117,14,"syncState"],[156,27,117,23],[156,28,117,24,"isCurrentOrNewerAuthVersion"],[156,55,117,51],[156,56,117,52,"baseVersion"],[156,67,117,63],[156,70,117,66],[156,71,117,67],[156,72,117,68],[156,74,117,70],[157,10,118,6],[157,14,118,10],[157,15,118,11,"_logVerbose"],[157,26,118,22],[157,27,118,23],[157,74,118,70],[157,75,118,71],[158,10,119,6],[159,8,120,4],[160,8,121,4],[160,13,121,9],[160,17,121,13],[160,18,121,14,"tryToReauthenticate"],[160,37,121,33],[160,38,121,34,"serverMessage"],[160,51,121,47],[160,52,121,48],[161,8,122,4],[162,6,123,2],[163,6,124,2],[164,6,125,2],[165,6,126,2],[166,6,127,2],[167,4,127,2],[168,6,127,2,"key"],[168,9,127,2],[169,6,127,2,"value"],[169,11,127,2],[170,8,127,2],[170,12,127,2,"_tryToReauthenticate"],[170,32,127,2],[170,35,127,2,"_asyncToGenerator"],[170,52,127,2],[170,53,128,2],[170,64,128,28,"serverMessage"],[170,77,128,41],[170,79,128,43],[171,10,129,4],[171,14,129,8],[171,15,129,9,"_logVerbose"],[171,26,129,20],[171,27,129,21],[171,60,129,54,"serverMessage"],[171,73,129,67],[171,74,129,68,"error"],[171,79,129,73],[171,81,129,75],[171,82,129,76],[172,10,130,4],[173,10,131,6],[174,10,132,6],[174,14,132,10],[174,15,132,11,"authState"],[174,24,132,20],[174,25,132,21,"state"],[174,30,132,26],[174,35,132,31],[174,43,132,39],[175,10,132,43],[176,10,133,6],[177,10,134,6],[177,14,134,10],[177,15,134,11,"authState"],[177,24,134,20],[177,25,134,21,"state"],[177,30,134,26],[177,35,134,31],[177,77,134,73],[177,81,134,77],[177,85,134,81],[177,86,134,82,"tokenConfirmationAttempts"],[177,111,134,107],[177,115,134,111,"MAX_TOKEN_CONFIRMATION_ATTEMPTS"],[177,146,134,142],[177,148,135,6],[178,12,136,6],[178,16,136,10],[178,17,136,11,"logger"],[178,23,136,17],[178,24,136,18,"error"],[178,29,136,23],[178,30,137,8],[178,58,137,36,"serverMessage"],[178,71,137,49],[178,72,137,50,"error"],[178,77,137,55],[178,111,138,6],[178,112,138,7],[179,12,139,6],[179,16,139,10],[179,20,139,14],[179,21,139,15,"syncState"],[179,30,139,24],[179,31,139,25,"hasAuth"],[179,38,139,32],[179,39,139,33],[179,40,139,34],[179,42,139,36],[180,14,140,8],[180,18,140,12],[180,19,140,13,"syncState"],[180,28,140,22],[180,29,140,23,"clearAuth"],[180,38,140,32],[180,39,140,33],[180,40,140,34],[181,12,141,6],[182,12,142,6],[182,16,142,10],[182,20,142,14],[182,21,142,15,"authState"],[182,30,142,24],[182,31,142,25,"state"],[182,36,142,30],[182,41,142,35],[182,49,142,43],[182,51,142,45],[183,14,143,8],[183,18,143,12],[183,19,143,13,"setAndReportAuthFailed"],[183,41,143,35],[183,42,143,36],[183,46,143,40],[183,47,143,41,"authState"],[183,56,143,50],[183,57,143,51,"config"],[183,63,143,57],[183,64,143,58,"onAuthChange"],[183,76,143,70],[183,77,143,71],[184,12,144,6],[185,12,145,6],[186,10,146,4],[187,10,147,4],[187,14,147,8],[187,18,147,12],[187,19,147,13,"authState"],[187,28,147,22],[187,29,147,23,"state"],[187,34,147,28],[187,39,147,33],[187,81,147,75],[187,83,147,77],[188,12,148,6],[188,16,148,10],[188,17,148,11,"tokenConfirmationAttempts"],[188,42,148,36],[188,44,148,38],[189,12,149,6],[189,16,149,10],[189,17,149,11,"_logVerbose"],[189,28,149,22],[189,29,150,8],[189,59,150,38,"MAX_TOKEN_CONFIRMATION_ATTEMPTS"],[189,90,150,69],[189,93,150,72],[189,97,150,76],[189,98,150,77,"tokenConfirmationAttempts"],[189,123,150,102],[189,144,151,6],[189,145,151,7],[190,10,152,4],[191,10,153,4],[191,16,153,10],[191,20,153,14],[191,21,153,15,"stopSocket"],[191,31,153,25],[191,32,153,26],[191,33,153,27],[192,10,154,4],[192,14,154,10,"token"],[192,19,154,15],[192,28,154,24],[192,32,154,28],[192,33,154,29,"fetchTokenAndGuardAgainstRace"],[192,62,154,58],[192,63,155,6],[192,67,155,10],[192,68,155,11,"authState"],[192,77,155,20],[192,78,155,21,"config"],[192,84,155,27],[192,85,155,28,"fetchToken"],[192,95,155,38],[192,97,156,6],[193,12,157,8,"forceRefreshToken"],[193,29,157,25],[193,31,157,27],[194,10,158,6],[194,11,159,4],[194,12,159,5],[195,10,160,4],[195,14,160,8,"token"],[195,19,160,13],[195,20,160,14,"isFromOutdatedConfig"],[195,40,160,34],[195,42,160,36],[196,12,161,6],[197,10,162,4],[198,10,163,4],[198,14,163,8,"token"],[198,19,163,13],[198,20,163,14,"value"],[198,25,163,19],[198,29,163,23],[198,33,163,27],[198,34,163,28,"syncState"],[198,43,163,37],[198,44,163,38,"isNewAuth"],[198,53,163,47],[198,54,163,48,"token"],[198,59,163,53],[198,60,163,54,"value"],[198,65,163,59],[198,66,163,60],[198,68,163,62],[199,12,164,6],[199,16,164,10],[199,17,164,11,"authenticate"],[199,29,164,23],[199,30,164,24,"token"],[199,35,164,29],[199,36,164,30,"value"],[199,41,164,35],[199,42,164,36],[200,12,165,6],[200,16,165,10],[200,17,165,11,"setAuthState"],[200,29,165,23],[200,30,165,24],[201,14,166,8,"state"],[201,19,166,13],[201,21,166,15],[201,63,166,57],[202,14,167,8,"config"],[202,20,167,14],[202,22,167,16],[202,26,167,20],[202,27,167,21,"authState"],[202,36,167,30],[202,37,167,31,"config"],[202,43,167,37],[203,14,168,8,"token"],[203,19,168,13],[203,21,168,15,"token"],[203,26,168,20],[203,27,168,21,"value"],[203,32,168,26],[204,14,169,8,"hadAuth"],[204,21,169,15],[204,23,169,17],[204,27,169,21],[204,28,169,22,"authState"],[204,37,169,31],[204,38,169,32,"state"],[204,43,169,37],[204,48,169,42],[204,63,169,57],[204,67,169,61],[204,71,169,65],[204,72,169,66,"authState"],[204,81,169,75],[204,82,169,76,"state"],[204,87,169,81],[204,92,169,86],[205,12,170,6],[205,13,170,7],[205,14,170,8],[206,10,171,4],[206,11,171,5],[206,17,171,11],[207,12,172,6],[207,16,172,10],[207,17,172,11,"_logVerbose"],[207,28,172,22],[207,29,172,23],[207,83,172,77],[207,84,172,78],[208,12,173,6],[208,16,173,10],[208,20,173,14],[208,21,173,15,"syncState"],[208,30,173,24],[208,31,173,25,"hasAuth"],[208,38,173,32],[208,39,173,33],[208,40,173,34],[208,42,173,36],[209,14,174,8],[209,18,174,12],[209,19,174,13,"syncState"],[209,28,174,22],[209,29,174,23,"clearAuth"],[209,38,174,32],[209,39,174,33],[209,40,174,34],[210,12,175,6],[211,12,176,6],[211,16,176,10],[211,17,176,11,"setAndReportAuthFailed"],[211,39,176,33],[211,40,176,34],[211,44,176,38],[211,45,176,39,"authState"],[211,54,176,48],[211,55,176,49,"config"],[211,61,176,55],[211,62,176,56,"onAuthChange"],[211,74,176,68],[211,75,176,69],[212,10,177,4],[213,10,178,4],[213,14,178,8],[213,15,178,9,"tryRestartSocket"],[213,31,178,25],[213,32,178,26],[213,33,178,27],[214,8,179,2],[214,9,179,3],[215,8,179,3],[215,17,128,8,"tryToReauthenticate"],[215,36,128,27,"tryToReauthenticate"],[215,37,128,27,"_x3"],[215,40,128,27],[216,10,128,27],[216,17,128,27,"_tryToReauthenticate"],[216,37,128,27],[216,38,128,27,"apply"],[216,43,128,27],[216,50,128,27,"arguments"],[216,59,128,27],[217,8,128,27],[218,8,128,27],[218,15,128,8,"tryToReauthenticate"],[218,34,128,27],[219,6,128,27],[219,10,180,2],[220,6,181,2],[221,6,182,2],[222,4,182,2],[223,6,182,2,"key"],[223,9,182,2],[224,6,182,2,"value"],[224,11,182,2],[225,8,182,2],[225,12,182,2,"_refetchToken"],[225,25,182,2],[225,28,182,2,"_asyncToGenerator"],[225,45,182,2],[225,46,183,2],[225,59,183,23],[226,10,184,4],[226,14,184,8],[226,18,184,12],[226,19,184,13,"authState"],[226,28,184,22],[226,29,184,23,"state"],[226,34,184,28],[226,39,184,33],[226,47,184,41],[226,49,184,43],[227,12,185,6],[228,10,186,4],[229,10,187,4],[229,14,187,8],[229,15,187,9,"_logVerbose"],[229,26,187,20],[229,27,187,21],[229,50,187,44],[229,51,187,45],[230,10,188,4],[230,14,188,10,"token"],[230,19,188,15],[230,28,188,24],[230,32,188,28],[230,33,188,29,"fetchTokenAndGuardAgainstRace"],[230,62,188,58],[230,63,189,6],[230,67,189,10],[230,68,189,11,"authState"],[230,77,189,20],[230,78,189,21,"config"],[230,84,189,27],[230,85,189,28,"fetchToken"],[230,95,189,38],[230,97,190,6],[231,12,191,8,"forceRefreshToken"],[231,29,191,25],[231,31,191,27],[232,10,192,6],[232,11,193,4],[232,12,193,5],[233,10,194,4],[233,14,194,8,"token"],[233,19,194,13],[233,20,194,14,"isFromOutdatedConfig"],[233,40,194,34],[233,42,194,36],[234,12,195,6],[235,10,196,4],[236,10,197,4],[236,14,197,8,"token"],[236,19,197,13],[236,20,197,14,"value"],[236,25,197,19],[236,27,197,21],[237,12,198,6],[237,16,198,10],[237,20,198,14],[237,21,198,15,"syncState"],[237,30,198,24],[237,31,198,25,"isNewAuth"],[237,40,198,34],[237,41,198,35,"token"],[237,46,198,40],[237,47,198,41,"value"],[237,52,198,46],[237,53,198,47],[237,55,198,49],[238,14,199,8],[238,18,199,12],[238,19,199,13,"setAuthState"],[238,31,199,25],[238,32,199,26],[239,16,200,10,"state"],[239,21,200,15],[239,23,200,17],[239,65,200,59],[240,16,201,10,"hadAuth"],[240,23,201,17],[240,25,201,19],[240,29,201,23],[240,30,201,24,"syncState"],[240,39,201,33],[240,40,201,34,"hasAuth"],[240,47,201,41],[240,48,201,42],[240,49,201,43],[241,16,202,10,"token"],[241,21,202,15],[241,23,202,17,"token"],[241,28,202,22],[241,29,202,23,"value"],[241,34,202,28],[242,16,203,10,"config"],[242,22,203,16],[242,24,203,18],[242,28,203,22],[242,29,203,23,"authState"],[242,38,203,32],[242,39,203,33,"config"],[243,14,204,8],[243,15,204,9],[243,16,204,10],[244,14,205,8],[244,18,205,12],[244,19,205,13,"authenticate"],[244,31,205,25],[244,32,205,26,"token"],[244,37,205,31],[244,38,205,32,"value"],[244,43,205,37],[244,44,205,38],[245,12,206,6],[245,13,206,7],[245,19,206,13],[246,14,207,8],[246,18,207,12],[246,19,207,13,"setAuthState"],[246,31,207,25],[246,32,207,26],[247,16,208,10,"state"],[247,21,208,15],[247,23,208,17],[247,38,208,32],[248,16,209,10,"config"],[248,22,209,16],[248,24,209,18],[248,28,209,22],[248,29,209,23,"authState"],[248,38,209,32],[248,39,209,33,"config"],[249,14,210,8],[249,15,210,9],[249,16,210,10],[250,12,211,6],[251,10,212,4],[251,11,212,5],[251,17,212,11],[252,12,213,6],[252,16,213,10],[252,17,213,11,"_logVerbose"],[252,28,213,22],[252,29,213,23],[252,54,213,48],[252,55,213,49],[253,12,214,6],[253,16,214,10],[253,20,214,14],[253,21,214,15,"syncState"],[253,30,214,24],[253,31,214,25,"hasAuth"],[253,38,214,32],[253,39,214,33],[253,40,214,34],[253,42,214,36],[254,14,215,8],[254,18,215,12],[254,19,215,13,"clearAuth"],[254,28,215,22],[254,29,215,23],[254,30,215,24],[255,12,216,6],[256,12,217,6],[256,16,217,10],[256,17,217,11,"setAndReportAuthFailed"],[256,39,217,33],[256,40,217,34],[256,44,217,38],[256,45,217,39,"authState"],[256,54,217,48],[256,55,217,49,"config"],[256,61,217,55],[256,62,217,56,"onAuthChange"],[256,74,217,68],[256,75,217,69],[257,10,218,4],[258,10,219,4],[258,14,219,8],[258,15,219,9,"_logVerbose"],[258,26,219,20],[258,27,220,6],[258,88,221,4],[258,89,221,5],[259,10,222,4],[259,14,222,8],[259,15,222,9,"tryRestartSocket"],[259,31,222,25],[259,32,222,26],[259,33,222,27],[260,8,223,2],[260,9,223,3],[261,8,223,3],[261,17,183,8,"refetchToken"],[261,29,183,20,"refetchToken"],[261,30,183,20],[262,10,183,20],[262,17,183,20,"_refetchToken"],[262,30,183,20],[262,31,183,20,"apply"],[262,36,183,20],[262,43,183,20,"arguments"],[262,52,183,20],[263,8,183,20],[264,8,183,20],[264,15,183,8,"refetchToken"],[264,27,183,20],[265,6,183,20],[266,4,183,20],[267,6,183,20,"key"],[267,9,183,20],[268,6,183,20,"value"],[268,11,183,20],[268,13,224,2],[268,22,224,2,"scheduleTokenRefetch"],[268,42,224,22,"scheduleTokenRefetch"],[268,43,224,23,"token"],[268,48,224,28],[268,50,224,30],[269,8,225,4],[269,12,225,8],[269,16,225,12],[269,17,225,13,"authState"],[269,26,225,22],[269,27,225,23,"state"],[269,32,225,28],[269,37,225,33],[269,45,225,41],[269,47,225,43],[270,10,226,6],[271,8,227,4],[272,8,228,4],[272,12,228,10,"decodedToken"],[272,24,228,22],[272,27,228,25],[272,31,228,29],[272,32,228,30,"decodeToken"],[272,43,228,41],[272,44,228,42,"token"],[272,49,228,47],[272,50,228,48],[273,8,229,4],[273,12,229,8],[273,13,229,9,"decodedToken"],[273,25,229,21],[273,27,229,23],[274,10,230,6],[274,14,230,10],[274,15,230,11,"logger"],[274,21,230,17],[274,22,230,18,"error"],[274,27,230,23],[274,28,231,8],[274,85,232,6],[274,86,232,7],[275,10,233,6],[276,8,234,4],[277,8,235,4],[277,12,235,12,"iat"],[277,15,235,15],[277,18,235,25,"decodedToken"],[277,30,235,37],[277,31,235,12,"iat"],[277,34,235,15],[278,10,235,17,"exp"],[278,13,235,20],[278,16,235,25,"decodedToken"],[278,28,235,37],[278,29,235,17,"exp"],[278,32,235,20],[279,8,236,4],[279,12,236,8],[279,13,236,9,"iat"],[279,16,236,12],[279,20,236,16],[279,21,236,17,"exp"],[279,24,236,20],[279,26,236,22],[280,10,237,6],[280,14,237,10],[280,15,237,11,"logger"],[280,21,237,17],[280,22,237,18,"error"],[280,27,237,23],[280,28,238,8],[280,96,239,6],[280,97,239,7],[281,10,240,6],[282,8,241,4],[283,8,242,4],[283,12,242,10,"tokenValiditySeconds"],[283,32,242,30],[283,35,242,33,"exp"],[283,38,242,36],[283,41,242,39,"iat"],[283,44,242,42],[284,8,243,4],[284,12,243,8,"tokenValiditySeconds"],[284,32,243,28],[284,36,243,32],[284,37,243,33],[284,39,243,35],[285,10,244,6],[285,14,244,10],[285,15,244,11,"logger"],[285,21,244,17],[285,22,244,18,"error"],[285,27,244,23],[285,28,245,8],[285,92,246,6],[285,93,246,7],[286,10,247,6],[287,8,248,4],[288,8,249,4],[288,12,249,8,"delay"],[288,17,249,13],[288,20,249,16,"Math"],[288,24,249,20],[288,25,249,21,"min"],[288,28,249,24],[288,29,250,6,"MAXIMUM_REFRESH_DELAY"],[288,50,250,27],[288,52,251,6],[288,53,251,7,"tokenValiditySeconds"],[288,73,251,27],[288,76,251,30],[288,80,251,34],[288,81,251,35,"refreshTokenLeewaySeconds"],[288,106,251,60],[288,110,251,64],[288,113,252,4],[288,114,252,5],[289,8,253,4],[289,12,253,8,"delay"],[289,17,253,13],[289,21,253,17],[289,22,253,18],[289,24,253,20],[290,10,254,6],[290,14,254,10],[290,15,254,11,"logger"],[290,21,254,17],[290,22,254,18,"warn"],[290,26,254,22],[290,27,255,8],[290,83,255,64],[290,87,255,68],[290,88,255,69,"refreshTokenLeewaySeconds"],[290,113,255,94],[290,154,255,135,"tokenValiditySeconds"],[290,174,255,155],[290,177,256,6],[290,178,256,7],[291,10,257,6,"delay"],[291,15,257,11],[291,18,257,14],[291,19,257,15],[292,8,258,4],[293,8,259,4],[293,12,259,10,"refetchTokenTimeoutId"],[293,33,259,31],[293,36,259,34,"setTimeout"],[293,46,259,44],[293,47,259,45],[293,53,259,51],[294,10,260,6],[294,14,260,10],[294,15,260,11,"_logVerbose"],[294,26,260,22],[294,27,260,23],[294,60,260,56],[294,61,260,57],[295,10,261,6],[295,15,261,11],[295,19,261,15],[295,20,261,16,"refetchToken"],[295,32,261,28],[295,33,261,29],[295,34,261,30],[296,8,262,4],[296,9,262,5],[296,11,262,7,"delay"],[296,16,262,12],[296,17,262,13],[297,8,263,4],[297,12,263,8],[297,13,263,9,"setAuthState"],[297,25,263,21],[297,26,263,22],[298,10,264,6,"state"],[298,15,264,11],[298,17,264,13],[298,45,264,41],[299,10,265,6,"refetchTokenTimeoutId"],[299,31,265,27],[300,10,266,6,"config"],[300,16,266,12],[300,18,266,14],[300,22,266,18],[300,23,266,19,"authState"],[300,32,266,28],[300,33,266,29,"config"],[301,8,267,4],[301,9,267,5],[301,10,267,6],[302,8,268,4],[302,12,268,8],[302,13,268,9,"_logVerbose"],[302,24,268,20],[302,25,269,6],[302,74,269,55,"delay"],[302,79,269,60],[302,83,270,4],[302,84,270,5],[303,6,271,2],[304,6,272,2],[305,6,273,2],[306,4,273,2],[307,6,273,2,"key"],[307,9,273,2],[308,6,273,2,"value"],[308,11,273,2],[309,8,273,2],[309,12,273,2,"_fetchTokenAndGuardAgainstRace"],[309,42,273,2],[309,45,273,2,"_asyncToGenerator"],[309,62,273,2],[309,63,274,2],[309,74,274,38,"fetchToken"],[309,84,274,48],[309,86,274,50,"fetchArgs"],[309,95,274,59],[309,97,274,61],[310,10,275,4],[310,14,275,10,"originalConfigVersion"],[310,35,275,31],[310,38,275,34],[310,40,275,36],[310,44,275,40],[310,45,275,41,"configVersion"],[310,58,275,54],[311,10,276,4],[311,14,276,8],[311,15,276,9,"_logVerbose"],[311,26,276,20],[311,27,277,6],[311,65,277,44,"originalConfigVersion"],[311,86,277,65],[311,88,278,4],[311,89,278,5],[312,10,279,4],[312,14,279,10,"token"],[312,19,279,15],[312,28,279,24,"fetchToken"],[312,38,279,34],[312,39,279,35,"fetchArgs"],[312,48,279,44],[312,49,279,45],[313,10,280,4],[313,14,280,8],[313,18,280,12],[313,19,280,13,"configVersion"],[313,32,280,26],[313,37,280,31,"originalConfigVersion"],[313,58,280,52],[313,60,280,54],[314,12,281,6],[314,16,281,10],[314,17,281,11,"_logVerbose"],[314,28,281,22],[314,29,282,8],[314,63,282,42,"originalConfigVersion"],[314,84,282,63],[314,93,282,72],[314,97,282,76],[314,98,282,77,"configVersion"],[314,111,282,90],[314,113,283,6],[314,114,283,7],[315,12,284,6],[315,19,284,13],[316,14,284,15,"isFromOutdatedConfig"],[316,34,284,35],[316,36,284,37],[317,12,284,42],[317,13,284,43],[318,10,285,4],[319,10,286,4],[319,17,286,11],[320,12,286,13,"isFromOutdatedConfig"],[320,32,286,33],[320,34,286,35],[320,39,286,40],[321,12,286,42,"value"],[321,17,286,47],[321,19,286,49,"token"],[322,10,286,55],[322,11,286,56],[323,8,287,2],[323,9,287,3],[324,8,287,3],[324,17,274,8,"fetchTokenAndGuardAgainstRace"],[324,46,274,37,"fetchTokenAndGuardAgainstRace"],[324,47,274,37,"_x4"],[324,50,274,37],[324,52,274,37,"_x5"],[324,55,274,37],[325,10,274,37],[325,17,274,37,"_fetchTokenAndGuardAgainstRace"],[325,47,274,37],[325,48,274,37,"apply"],[325,53,274,37],[325,60,274,37,"arguments"],[325,69,274,37],[326,8,274,37],[327,8,274,37],[327,15,274,8,"fetchTokenAndGuardAgainstRace"],[327,44,274,37],[328,6,274,37],[329,4,274,37],[330,6,274,37,"key"],[330,9,274,37],[331,6,274,37,"value"],[331,11,274,37],[331,13,288,2],[331,22,288,2,"stop"],[331,26,288,6,"stop"],[331,27,288,6],[331,29,288,9],[332,8,289,4],[332,12,289,8],[332,13,289,9,"resetAuthState"],[332,27,289,23],[332,28,289,24],[332,29,289,25],[333,8,290,4],[333,12,290,8],[333,13,290,9,"configVersion"],[333,26,290,22],[333,28,290,24],[334,8,291,4],[334,12,291,8],[334,13,291,9,"_logVerbose"],[334,24,291,20],[334,25,291,21],[334,53,291,49],[334,57,291,53],[334,58,291,54,"configVersion"],[334,71,291,67],[334,73,291,69],[334,74,291,70],[335,6,292,2],[336,4,292,3],[337,6,292,3,"key"],[337,9,292,3],[338,6,292,3,"value"],[338,11,292,3],[338,13,293,2],[338,22,293,2,"setAndReportAuthFailed"],[338,44,293,24,"setAndReportAuthFailed"],[338,45,293,25,"onAuthChange"],[338,57,293,37],[338,59,293,39],[339,8,294,4,"onAuthChange"],[339,20,294,16],[339,21,294,17],[339,26,294,22],[339,27,294,23],[340,8,295,4],[340,12,295,8],[340,13,295,9,"resetAuthState"],[340,27,295,23],[340,28,295,24],[340,29,295,25],[341,6,296,2],[342,4,296,3],[343,6,296,3,"key"],[343,9,296,3],[344,6,296,3,"value"],[344,11,296,3],[344,13,297,2],[344,22,297,2,"resetAuthState"],[344,36,297,16,"resetAuthState"],[344,37,297,16],[344,39,297,19],[345,8,298,4],[345,12,298,8],[345,13,298,9,"setAuthState"],[345,25,298,21],[345,26,298,22],[346,10,298,24,"state"],[346,15,298,29],[346,17,298,31],[347,8,298,40],[347,9,298,41],[347,10,298,42],[348,6,299,2],[349,4,299,3],[350,6,299,3,"key"],[350,9,299,3],[351,6,299,3,"value"],[351,11,299,3],[351,13,300,2],[351,22,300,2,"setAuthState"],[351,34,300,14,"setAuthState"],[351,35,300,15,"newAuth"],[351,42,300,22],[351,44,300,24],[352,8,301,4],[352,12,301,10,"authStateForLog"],[352,27,301,25],[352,30,301,28,"newAuth"],[352,37,301,35],[352,38,301,36,"state"],[352,43,301,41],[352,48,301,46],[352,90,301,88],[352,93,301,91],[353,10,302,6,"hadAuth"],[353,17,302,13],[353,19,302,15,"newAuth"],[353,26,302,22],[353,27,302,23,"hadAuth"],[353,34,302,30],[354,10,303,6,"state"],[354,15,303,11],[354,17,303,13,"newAuth"],[354,24,303,20],[354,25,303,21,"state"],[354,30,303,26],[355,10,304,6,"token"],[355,15,304,11],[355,17,304,13],[355,23,304,19,"newAuth"],[355,30,304,26],[355,31,304,27,"token"],[355,36,304,32],[355,37,304,33,"slice"],[355,42,304,38],[355,43,304,39],[355,44,304,40],[355,45,304,41],[355,46,304,42],[356,8,305,4],[356,9,305,5],[356,12,305,8],[357,10,305,10,"state"],[357,15,305,15],[357,17,305,17,"newAuth"],[357,24,305,24],[357,25,305,25,"state"],[358,8,305,31],[358,9,305,32],[359,8,306,4],[359,12,306,8],[359,13,306,9,"_logVerbose"],[359,24,306,20],[359,25,307,6],[359,50,307,31,"JSON"],[359,54,307,35],[359,55,307,36,"stringify"],[359,64,307,45],[359,65,307,46,"authStateForLog"],[359,80,307,61],[359,81,307,62],[359,83,308,4],[359,84,308,5],[360,8,309,4],[360,16,309,12,"newAuth"],[360,23,309,19],[360,24,309,20,"state"],[360,29,309,25],[361,10,310,6],[361,15,310,11],[361,43,310,39],[362,10,311,6],[362,15,311,11],[362,30,311,26],[363,10,312,6],[363,15,312,11],[363,23,312,19],[364,12,313,8],[364,16,313,12],[364,17,313,13,"tokenConfirmationAttempts"],[364,42,313,38],[364,45,313,41],[364,46,313,42],[365,12,314,8],[366,10,315,6],[366,15,315,11],[366,57,315,53],[367,10,316,6],[367,15,316,11],[367,58,316,54],[368,10,317,6],[368,15,317,11],[368,31,317,27],[369,12,318,8],[370,10,319,6],[371,12,319,15],[372,14,320,8,"newAuth"],[372,21,320,15],[373,12,321,6],[374,8,322,4],[375,8,323,4],[375,12,323,8],[375,16,323,12],[375,17,323,13,"authState"],[375,26,323,22],[375,27,323,23,"state"],[375,32,323,28],[375,37,323,33],[375,65,323,61],[375,67,323,63],[376,10,324,6,"clearTimeout"],[376,22,324,18],[376,23,324,19],[376,27,324,23],[376,28,324,24,"authState"],[376,37,324,33],[376,38,324,34,"refetchTokenTimeoutId"],[376,59,324,55],[376,60,324,56],[377,10,325,6],[377,14,325,10],[377,15,325,11,"syncState"],[377,24,325,20],[377,25,325,21,"markAuthCompletion"],[377,43,325,39],[377,44,325,40],[377,45,325,41],[378,8,326,4],[379,8,327,4],[379,12,327,8],[379,13,327,9,"authState"],[379,22,327,18],[379,25,327,21,"newAuth"],[379,32,327,28],[380,6,328,2],[381,4,328,3],[382,6,328,3,"key"],[382,9,328,3],[383,6,328,3,"value"],[383,11,328,3],[383,13,329,2],[383,22,329,2,"decodeToken"],[383,33,329,13,"decodeToken"],[383,34,329,14,"token"],[383,39,329,19],[383,41,329,21],[384,8,330,4],[384,12,330,8],[385,10,331,6],[385,17,331,13],[385,18,331,14],[385,19,331,15],[385,21,331,17,"import_jwt_decode"],[385,38,331,34],[385,39,331,35,"jwtDecode"],[385,48,331,44],[385,50,331,46,"token"],[385,55,331,51],[385,56,331,52],[386,8,332,4],[386,9,332,5],[386,10,332,6],[386,17,332,13,"e"],[386,18,332,14],[386,20,332,16],[387,10,333,6],[387,14,333,10],[387,15,333,11,"_logVerbose"],[387,26,333,22],[387,27,334,8],[387,52,334,33,"e"],[387,53,334,34],[387,65,334,46,"Error"],[387,70,334,51],[387,73,334,54,"e"],[387,74,334,55],[387,75,334,56,"message"],[387,82,334,63],[387,85,334,66],[387,100,334,81],[387,102,335,6],[387,103,335,7],[388,10,336,6],[388,17,336,13],[388,21,336,17],[389,8,337,4],[390,6,338,2],[391,4,338,3],[392,6,338,3,"key"],[392,9,338,3],[393,6,338,3,"value"],[393,11,338,3],[393,13,339,2],[393,22,339,2,"_logVerbose"],[393,33,339,13,"_logVerbose"],[393,34,339,14,"message"],[393,41,339,21],[393,43,339,23],[394,8,340,4],[394,12,340,8],[394,13,340,9,"logger"],[394,19,340,15],[394,20,340,16,"logVerbose"],[394,30,340,26],[394,31,340,27],[394,34,340,30,"message"],[394,41,340,37],[394,47,340,43],[394,51,340,47],[394,52,340,48,"configVersion"],[394,65,340,61],[394,68,340,64],[394,69,340,65],[395,6,341,2],[396,4,341,3],[397,2,341,3],[398,0,341,3],[398,3]],"functionMap":{"names":["<global>","__defNormalProp","__export","__copyProps","__defProp$argument_2.get","__toCommonJS","__publicField","__export$argument_1.AuthenticationManager","AuthenticationManager","AuthenticationManager#constructor","AuthenticationManager#setConfig","AuthenticationManager#onTransition","AuthenticationManager#onAuthError","AuthenticationManager#tryToReauthenticate","AuthenticationManager#refetchToken","AuthenticationManager#scheduleTokenRefetch","setTimeout$argument_0","AuthenticationManager#fetchTokenAndGuardAgainstRace","AuthenticationManager#stop","AuthenticationManager#setAndReportAuthFailed","AuthenticationManager#resetAuthState","AuthenticationManager#setAuthState","AuthenticationManager#decodeToken","AuthenticationManager#_logVerbose"],"mappings":"AAA;sBCK,yID;eEC;CFG;kBGC;kCCI,eD;CHG;mBKC,uEL;oBMC,0FN;yBOG,2BP;AQM;ECC;GD6B;EEC;GF0B;EGC;GHuB;EIC;GJY;EKK;GLmD;EMI;GNwC;EOC;6CCmC;KDG;GPS;ESG;GTa;EUC;GVI;EWC;GXG;EYC;GZE;EaC;Gb4B;EcC;GdS;EeC;GfE;CRC"},"hasCjsExports":true},"type":"js/module"}]}