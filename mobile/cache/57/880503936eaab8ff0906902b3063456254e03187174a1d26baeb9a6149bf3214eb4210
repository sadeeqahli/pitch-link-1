{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../../server/api.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":17,"index":1298},"end":{"line":26,"column":47,"index":1328}}],"key":"4tY8vs93wIXvdssgZjaOSghxSms=","exportNames":["*"],"imports":1}},{"name":"../../common/index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":20,"index":1350},"end":{"line":27,"column":52,"index":1382}}],"key":"aK60MpmAu47xBjy45e0WxVTm/6E=","exportNames":["*"],"imports":1}},{"name":"../logging.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":21,"index":1405},"end":{"line":28,"column":45,"index":1429}}],"key":"2x2OYYf+qoAPlfVSOoxcww6xuEM=","exportNames":["*"],"imports":1}},{"name":"./udf_path_utils.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":28,"index":1459},"end":{"line":29,"column":58,"index":1489}}],"key":"OUJAHwZ/Ugg0EfHJh6uxlRX1c1Q=","exportNames":["*"],"imports":1}},{"name":"../../values/errors.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":20,"index":1511},"end":{"line":30,"column":53,"index":1544}}],"key":"Jf2JEhYeU7A5s4GQfb7FGCgAyEQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value\n  }) : obj[key] = value;\n  var __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: true\n    });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      var _loop = function (key) {\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var key of __getOwnPropNames(from)) {\n        _loop(key);\n      }\n    }\n    return to;\n  };\n  var __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n  var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  var optimistic_updates_impl_exports = {};\n  __export(optimistic_updates_impl_exports, {\n    OptimisticQueryResults: () => OptimisticQueryResults\n  });\n  module.exports = __toCommonJS(optimistic_updates_impl_exports);\n  var import_api = require(_dependencyMap[3], \"../../server/api.js\");\n  var import_common = require(_dependencyMap[4], \"../../common/index.js\");\n  var import_logging = require(_dependencyMap[5], \"../logging.js\");\n  var import_udf_path_utils = require(_dependencyMap[6], \"./udf_path_utils.js\");\n  var import_errors = require(_dependencyMap[7], \"../../values/errors.js\");\n  var OptimisticLocalStoreImpl = /*#__PURE__*/function () {\n    function OptimisticLocalStoreImpl(queryResults) {\n      _classCallCheck(this, OptimisticLocalStoreImpl);\n      // A references of the query results in OptimisticQueryResults\n      __publicField(this, \"queryResults\");\n      // All of the queries modified by this class\n      __publicField(this, \"modifiedQueries\");\n      this.queryResults = queryResults;\n      this.modifiedQueries = [];\n    }\n    return _createClass(OptimisticLocalStoreImpl, [{\n      key: \"getQuery\",\n      value: function getQuery(query) {\n        var queryArgs = (0, import_common.parseArgs)(arguments.length <= 1 ? undefined : arguments[1]);\n        var name = (0, import_api.getFunctionName)(query);\n        var queryResult = this.queryResults.get((0, import_udf_path_utils.serializePathAndArgs)(name, queryArgs));\n        if (queryResult === void 0) {\n          return void 0;\n        }\n        return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n      }\n    }, {\n      key: \"getAllQueries\",\n      value: function getAllQueries(query) {\n        var queriesWithName = [];\n        var name = (0, import_api.getFunctionName)(query);\n        for (var queryResult of this.queryResults.values()) {\n          if (queryResult.udfPath === (0, import_udf_path_utils.canonicalizeUdfPath)(name)) {\n            queriesWithName.push({\n              args: queryResult.args,\n              value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n            });\n          }\n        }\n        return queriesWithName;\n      }\n    }, {\n      key: \"setQuery\",\n      value: function setQuery(queryReference, args, value) {\n        var queryArgs = (0, import_common.parseArgs)(args);\n        var name = (0, import_api.getFunctionName)(queryReference);\n        var queryToken = (0, import_udf_path_utils.serializePathAndArgs)(name, queryArgs);\n        var result;\n        if (value === void 0) {\n          result = void 0;\n        } else {\n          result = {\n            success: true,\n            value,\n            // It's an optimistic update, so there are no function logs to show.\n            logLines: []\n          };\n        }\n        var query = {\n          udfPath: name,\n          args: queryArgs,\n          result\n        };\n        this.queryResults.set(queryToken, query);\n        this.modifiedQueries.push(queryToken);\n      }\n    }], [{\n      key: \"queryValue\",\n      value: function queryValue(result) {\n        if (result === void 0) {\n          return void 0;\n        } else if (result.success) {\n          return result.value;\n        } else {\n          return void 0;\n        }\n      }\n    }]);\n  }();\n  var OptimisticQueryResults = /*#__PURE__*/function () {\n    function OptimisticQueryResults() {\n      _classCallCheck(this, OptimisticQueryResults);\n      __publicField(this, \"queryResults\");\n      __publicField(this, \"optimisticUpdates\");\n      this.queryResults = /* @__PURE__ */new Map();\n      this.optimisticUpdates = [];\n    }\n    /**\n     * Apply all optimistic updates on top of server query results\n     */\n    return _createClass(OptimisticQueryResults, [{\n      key: \"ingestQueryResultsFromServer\",\n      value: function ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n        this.optimisticUpdates = this.optimisticUpdates.filter(updateAndId => {\n          return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n        });\n        var oldQueryResults = this.queryResults;\n        this.queryResults = new Map(serverQueryResults);\n        var localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        for (var updateAndId of this.optimisticUpdates) {\n          updateAndId.update(localStore);\n        }\n        var changedQueries = [];\n        for (var _ref of this.queryResults) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var queryToken = _ref2[0];\n          var query = _ref2[1];\n          var oldQuery = oldQueryResults.get(queryToken);\n          if (oldQuery === void 0 || oldQuery.result !== query.result) {\n            changedQueries.push(queryToken);\n          }\n        }\n        return changedQueries;\n      }\n    }, {\n      key: \"applyOptimisticUpdate\",\n      value: function applyOptimisticUpdate(update, mutationId) {\n        this.optimisticUpdates.push({\n          update,\n          mutationId\n        });\n        var localStore = new OptimisticLocalStoreImpl(this.queryResults);\n        update(localStore);\n        return localStore.modifiedQueries;\n      }\n      /**\n       * @internal\n       */\n    }, {\n      key: \"rawQueryResult\",\n      value: function rawQueryResult(queryToken) {\n        return this.queryResults.get(queryToken);\n      }\n    }, {\n      key: \"queryResult\",\n      value: function queryResult(queryToken) {\n        var query = this.queryResults.get(queryToken);\n        if (query === void 0) {\n          return void 0;\n        }\n        var result = query.result;\n        if (result === void 0) {\n          return void 0;\n        } else if (result.success) {\n          return result.value;\n        } else {\n          if (result.errorData !== void 0) {\n            throw (0, import_logging.forwardData)(result, new import_errors.ConvexError((0, import_logging.createHybridErrorStacktrace)(\"query\", query.udfPath, result)));\n          }\n          throw new Error((0, import_logging.createHybridErrorStacktrace)(\"query\", query.udfPath, result));\n        }\n      }\n    }, {\n      key: \"hasQueryResult\",\n      value: function hasQueryResult(queryToken) {\n        return this.queryResults.get(queryToken) !== void 0;\n      }\n      /**\n       * @internal\n       */\n    }, {\n      key: \"queryLogs\",\n      value: function queryLogs(queryToken) {\n        var query = this.queryResults.get(queryToken);\n        return query?.result?.logLines;\n      }\n    }]);\n  }();\n});","lineCount":214,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,2,0],[7,6,2,4,"__defProp"],[7,15,2,13],[7,18,2,16,"Object"],[7,24,2,22],[7,25,2,23,"defineProperty"],[7,39,2,37],[8,2,3,0],[8,6,3,4,"__getOwnPropDesc"],[8,22,3,20],[8,25,3,23,"Object"],[8,31,3,29],[8,32,3,30,"getOwnPropertyDescriptor"],[8,56,3,54],[9,2,4,0],[9,6,4,4,"__getOwnPropNames"],[9,23,4,21],[9,26,4,24,"Object"],[9,32,4,30],[9,33,4,31,"getOwnPropertyNames"],[9,52,4,50],[10,2,5,0],[10,6,5,4,"__hasOwnProp"],[10,18,5,16],[10,21,5,19,"Object"],[10,27,5,25],[10,28,5,26,"prototype"],[10,37,5,35],[10,38,5,36,"hasOwnProperty"],[10,52,5,50],[11,2,6,0],[11,6,6,4,"__defNormalProp"],[11,21,6,19],[11,24,6,22,"__defNormalProp"],[11,25,6,23,"obj"],[11,28,6,26],[11,30,6,28,"key"],[11,33,6,31],[11,35,6,33,"value"],[11,40,6,38],[11,45,6,43,"key"],[11,48,6,46],[11,52,6,50,"obj"],[11,55,6,53],[11,58,6,56,"__defProp"],[11,67,6,65],[11,68,6,66,"obj"],[11,71,6,69],[11,73,6,71,"key"],[11,76,6,74],[11,78,6,76],[12,4,6,78,"enumerable"],[12,14,6,88],[12,16,6,90],[12,20,6,94],[13,4,6,96,"configurable"],[13,16,6,108],[13,18,6,110],[13,22,6,114],[14,4,6,116,"writable"],[14,12,6,124],[14,14,6,126],[14,18,6,130],[15,4,6,132,"value"],[16,2,6,138],[16,3,6,139],[16,4,6,140],[16,7,6,143,"obj"],[16,10,6,146],[16,11,6,147,"key"],[16,14,6,150],[16,15,6,151],[16,18,6,154,"value"],[16,23,6,159],[17,2,7,0],[17,6,7,4,"__export"],[17,14,7,12],[17,17,7,15,"__export"],[17,18,7,16,"target"],[17,24,7,22],[17,26,7,24,"all"],[17,29,7,27],[17,34,7,32],[18,4,8,2],[18,9,8,7],[18,13,8,11,"name"],[18,17,8,15],[18,21,8,19,"all"],[18,24,8,22],[18,26,9,4,"__defProp"],[18,35,9,13],[18,36,9,14,"target"],[18,42,9,20],[18,44,9,22,"name"],[18,48,9,26],[18,50,9,28],[19,6,9,30,"get"],[19,9,9,33],[19,11,9,35,"all"],[19,14,9,38],[19,15,9,39,"name"],[19,19,9,43],[19,20,9,44],[20,6,9,46,"enumerable"],[20,16,9,56],[20,18,9,58],[21,4,9,63],[21,5,9,64],[21,6,9,65],[22,2,10,0],[22,3,10,1],[23,2,11,0],[23,6,11,4,"__copyProps"],[23,17,11,15],[23,20,11,18,"__copyProps"],[23,21,11,19,"to"],[23,23,11,21],[23,25,11,23,"from"],[23,29,11,27],[23,31,11,29,"except"],[23,37,11,35],[23,39,11,37,"desc"],[23,43,11,41],[23,48,11,46],[24,4,12,2],[24,8,12,6,"from"],[24,12,12,10],[24,16,12,14],[24,23,12,21,"from"],[24,27,12,25],[24,32,12,30],[24,40,12,38],[24,44,12,42],[24,51,12,49,"from"],[24,55,12,53],[24,60,12,58],[24,70,12,68],[24,72,12,70],[25,6,12,70],[25,10,12,70,"_loop"],[25,15,12,70],[25,27,12,70,"_loop"],[25,28,12,70,"key"],[25,31,12,70],[26,8,14,6],[26,12,14,10],[26,13,14,11,"__hasOwnProp"],[26,25,14,23],[26,26,14,24,"call"],[26,30,14,28],[26,31,14,29,"to"],[26,33,14,31],[26,35,14,33,"key"],[26,38,14,36],[26,39,14,37],[26,43,14,41,"key"],[26,46,14,44],[26,51,14,49,"except"],[26,57,14,55],[26,59,15,8,"__defProp"],[26,68,15,17],[26,69,15,18,"to"],[26,71,15,20],[26,73,15,22,"key"],[26,76,15,25],[26,78,15,27],[27,10,15,29,"get"],[27,13,15,32],[27,15,15,34,"get"],[27,16,15,34],[27,21,15,40,"from"],[27,25,15,44],[27,26,15,45,"key"],[27,29,15,48],[27,30,15,49],[28,10,15,51,"enumerable"],[28,20,15,61],[28,22,15,63],[28,24,15,65,"desc"],[28,28,15,69],[28,31,15,72,"__getOwnPropDesc"],[28,47,15,88],[28,48,15,89,"from"],[28,52,15,93],[28,54,15,95,"key"],[28,57,15,98],[28,58,15,99],[28,59,15,100],[28,63,15,104,"desc"],[28,67,15,108],[28,68,15,109,"enumerable"],[29,8,15,120],[29,9,15,121],[29,10,15,122],[30,6,15,123],[31,6,13,4],[31,11,13,9],[31,15,13,13,"key"],[31,18,13,16],[31,22,13,20,"__getOwnPropNames"],[31,39,13,37],[31,40,13,38,"from"],[31,44,13,42],[31,45,13,43],[32,8,13,43,"_loop"],[32,13,13,43],[32,14,13,43,"key"],[32,17,13,43],[33,6,13,43],[34,4,16,2],[35,4,17,2],[35,11,17,9,"to"],[35,13,17,11],[36,2,18,0],[36,3,18,1],[37,2,19,0],[37,6,19,4,"__toCommonJS"],[37,18,19,16],[37,21,19,20,"mod"],[37,24,19,23],[37,28,19,28,"__copyProps"],[37,39,19,39],[37,40,19,40,"__defProp"],[37,49,19,49],[37,50,19,50],[37,51,19,51],[37,52,19,52],[37,54,19,54],[37,66,19,66],[37,68,19,68],[38,4,19,70,"value"],[38,9,19,75],[38,11,19,77],[39,2,19,82],[39,3,19,83],[39,4,19,84],[39,6,19,86,"mod"],[39,9,19,89],[39,10,19,90],[40,2,20,0],[40,6,20,4,"__publicField"],[40,19,20,17],[40,22,20,20,"__publicField"],[40,23,20,21,"obj"],[40,26,20,24],[40,28,20,26,"key"],[40,31,20,29],[40,33,20,31,"value"],[40,38,20,36],[40,43,20,41,"__defNormalProp"],[40,58,20,56],[40,59,20,57,"obj"],[40,62,20,60],[40,64,20,62],[40,71,20,69,"key"],[40,74,20,72],[40,79,20,77],[40,87,20,85],[40,90,20,88,"key"],[40,93,20,91],[40,96,20,94],[40,98,20,96],[40,101,20,99,"key"],[40,104,20,102],[40,106,20,104,"value"],[40,111,20,109],[40,112,20,110],[41,2,21,0],[41,6,21,4,"optimistic_updates_impl_exports"],[41,37,21,35],[41,40,21,38],[41,41,21,39],[41,42,21,40],[42,2,22,0,"__export"],[42,10,22,8],[42,11,22,9,"optimistic_updates_impl_exports"],[42,42,22,40],[42,44,22,42],[43,4,23,2,"OptimisticQueryResults"],[43,26,23,24],[43,28,23,26,"OptimisticQueryResults"],[43,29,23,26],[43,34,23,32,"OptimisticQueryResults"],[44,2,24,0],[44,3,24,1],[44,4,24,2],[45,2,25,0,"module"],[45,8,25,6],[45,9,25,7,"exports"],[45,16,25,14],[45,19,25,17,"__toCommonJS"],[45,31,25,29],[45,32,25,30,"optimistic_updates_impl_exports"],[45,63,25,61],[45,64,25,62],[46,2,26,0],[46,6,26,4,"import_api"],[46,16,26,14],[46,19,26,17,"require"],[46,26,26,24],[46,27,26,24,"_dependencyMap"],[46,41,26,24],[46,67,26,46],[46,68,26,47],[47,2,27,0],[47,6,27,4,"import_common"],[47,19,27,17],[47,22,27,20,"require"],[47,29,27,27],[47,30,27,27,"_dependencyMap"],[47,44,27,27],[47,72,27,51],[47,73,27,52],[48,2,28,0],[48,6,28,4,"import_logging"],[48,20,28,18],[48,23,28,21,"require"],[48,30,28,28],[48,31,28,28,"_dependencyMap"],[48,45,28,28],[48,65,28,44],[48,66,28,45],[49,2,29,0],[49,6,29,4,"import_udf_path_utils"],[49,27,29,25],[49,30,29,28,"require"],[49,37,29,35],[49,38,29,35,"_dependencyMap"],[49,52,29,35],[49,78,29,57],[49,79,29,58],[50,2,30,0],[50,6,30,4,"import_errors"],[50,19,30,17],[50,22,30,20,"require"],[50,29,30,27],[50,30,30,27,"_dependencyMap"],[50,44,30,27],[50,73,30,52],[50,74,30,53],[51,2,30,54],[51,6,31,6,"OptimisticLocalStoreImpl"],[51,30,31,30],[52,4,32,2],[52,13,32,2,"OptimisticLocalStoreImpl"],[52,38,32,14,"queryResults"],[52,50,32,26],[52,52,32,28],[53,6,32,28,"_classCallCheck"],[53,21,32,28],[53,28,32,28,"OptimisticLocalStoreImpl"],[53,52,32,28],[54,6,33,4],[55,6,34,4,"__publicField"],[55,19,34,17],[55,20,34,18],[55,24,34,22],[55,26,34,24],[55,40,34,38],[55,41,34,39],[56,6,35,4],[57,6,36,4,"__publicField"],[57,19,36,17],[57,20,36,18],[57,24,36,22],[57,26,36,24],[57,43,36,41],[57,44,36,42],[58,6,37,4],[58,10,37,8],[58,11,37,9,"queryResults"],[58,23,37,21],[58,26,37,24,"queryResults"],[58,38,37,36],[59,6,38,4],[59,10,38,8],[59,11,38,9,"modifiedQueries"],[59,26,38,24],[59,29,38,27],[59,31,38,29],[60,4,39,2],[61,4,39,3],[61,11,39,3,"_createClass"],[61,23,39,3],[61,24,39,3,"OptimisticLocalStoreImpl"],[61,48,39,3],[62,6,39,3,"key"],[62,9,39,3],[63,6,39,3,"value"],[63,11,39,3],[63,13,40,2],[63,22,40,2,"getQuery"],[63,30,40,10,"getQuery"],[63,31,40,11,"query"],[63,36,40,16],[63,38,40,27],[64,8,41,4],[64,12,41,10,"queryArgs"],[64,21,41,19],[64,24,41,22],[64,25,41,23],[64,26,41,24],[64,28,41,26,"import_common"],[64,41,41,39],[64,42,41,40,"parseArgs"],[64,51,41,49],[64,53,41,49,"arguments"],[64,62,41,49],[64,63,41,49,"length"],[64,69,41,49],[64,77,41,49,"undefined"],[64,86,41,49],[64,89,41,49,"arguments"],[64,98,41,49],[64,101,41,58],[64,102,41,59],[65,8,42,4],[65,12,42,10,"name"],[65,16,42,14],[65,19,42,17],[65,20,42,18],[65,21,42,19],[65,23,42,21,"import_api"],[65,33,42,31],[65,34,42,32,"getFunctionName"],[65,49,42,47],[65,51,42,49,"query"],[65,56,42,54],[65,57,42,55],[66,8,43,4],[66,12,43,10,"queryResult"],[66,23,43,21],[66,26,43,24],[66,30,43,28],[66,31,43,29,"queryResults"],[66,43,43,41],[66,44,43,42,"get"],[66,47,43,45],[66,48,44,6],[66,49,44,7],[66,50,44,8],[66,52,44,10,"import_udf_path_utils"],[66,73,44,31],[66,74,44,32,"serializePathAndArgs"],[66,94,44,52],[66,96,44,54,"name"],[66,100,44,58],[66,102,44,60,"queryArgs"],[66,111,44,69],[66,112,45,4],[66,113,45,5],[67,8,46,4],[67,12,46,8,"queryResult"],[67,23,46,19],[67,28,46,24],[67,33,46,29],[67,34,46,30],[67,36,46,32],[68,10,47,6],[68,17,47,13],[68,22,47,18],[68,23,47,19],[69,8,48,4],[70,8,49,4],[70,15,49,11,"OptimisticLocalStoreImpl"],[70,39,49,35],[70,40,49,36,"queryValue"],[70,50,49,46],[70,51,49,47,"queryResult"],[70,62,49,58],[70,63,49,59,"result"],[70,69,49,65],[70,70,49,66],[71,6,50,2],[72,4,50,3],[73,6,50,3,"key"],[73,9,50,3],[74,6,50,3,"value"],[74,11,50,3],[74,13,51,2],[74,22,51,2,"getAllQueries"],[74,35,51,15,"getAllQueries"],[74,36,51,16,"query"],[74,41,51,21],[74,43,51,23],[75,8,52,4],[75,12,52,10,"queriesWithName"],[75,27,52,25],[75,30,52,28],[75,32,52,30],[76,8,53,4],[76,12,53,10,"name"],[76,16,53,14],[76,19,53,17],[76,20,53,18],[76,21,53,19],[76,23,53,21,"import_api"],[76,33,53,31],[76,34,53,32,"getFunctionName"],[76,49,53,47],[76,51,53,49,"query"],[76,56,53,54],[76,57,53,55],[77,8,54,4],[77,13,54,9],[77,17,54,15,"queryResult"],[77,28,54,26],[77,32,54,30],[77,36,54,34],[77,37,54,35,"queryResults"],[77,49,54,47],[77,50,54,48,"values"],[77,56,54,54],[77,57,54,55],[77,58,54,56],[77,60,54,58],[78,10,55,6],[78,14,55,10,"queryResult"],[78,25,55,21],[78,26,55,22,"udfPath"],[78,33,55,29],[78,38,55,34],[78,39,55,35],[78,40,55,36],[78,42,55,38,"import_udf_path_utils"],[78,63,55,59],[78,64,55,60,"canonicalizeUdfPath"],[78,83,55,79],[78,85,55,81,"name"],[78,89,55,85],[78,90,55,86],[78,92,55,88],[79,12,56,8,"queriesWithName"],[79,27,56,23],[79,28,56,24,"push"],[79,32,56,28],[79,33,56,29],[80,14,57,10,"args"],[80,18,57,14],[80,20,57,16,"queryResult"],[80,31,57,27],[80,32,57,28,"args"],[80,36,57,32],[81,14,58,10,"value"],[81,19,58,15],[81,21,58,17,"OptimisticLocalStoreImpl"],[81,45,58,41],[81,46,58,42,"queryValue"],[81,56,58,52],[81,57,58,53,"queryResult"],[81,68,58,64],[81,69,58,65,"result"],[81,75,58,71],[82,12,59,8],[82,13,59,9],[82,14,59,10],[83,10,60,6],[84,8,61,4],[85,8,62,4],[85,15,62,11,"queriesWithName"],[85,30,62,26],[86,6,63,2],[87,4,63,3],[88,6,63,3,"key"],[88,9,63,3],[89,6,63,3,"value"],[89,11,63,3],[89,13,64,2],[89,22,64,2,"setQuery"],[89,30,64,10,"setQuery"],[89,31,64,11,"queryReference"],[89,45,64,25],[89,47,64,27,"args"],[89,51,64,31],[89,53,64,33,"value"],[89,58,64,38],[89,60,64,40],[90,8,65,4],[90,12,65,10,"queryArgs"],[90,21,65,19],[90,24,65,22],[90,25,65,23],[90,26,65,24],[90,28,65,26,"import_common"],[90,41,65,39],[90,42,65,40,"parseArgs"],[90,51,65,49],[90,53,65,51,"args"],[90,57,65,55],[90,58,65,56],[91,8,66,4],[91,12,66,10,"name"],[91,16,66,14],[91,19,66,17],[91,20,66,18],[91,21,66,19],[91,23,66,21,"import_api"],[91,33,66,31],[91,34,66,32,"getFunctionName"],[91,49,66,47],[91,51,66,49,"queryReference"],[91,65,66,63],[91,66,66,64],[92,8,67,4],[92,12,67,10,"queryToken"],[92,22,67,20],[92,25,67,23],[92,26,67,24],[92,27,67,25],[92,29,67,27,"import_udf_path_utils"],[92,50,67,48],[92,51,67,49,"serializePathAndArgs"],[92,71,67,69],[92,73,67,71,"name"],[92,77,67,75],[92,79,67,77,"queryArgs"],[92,88,67,86],[92,89,67,87],[93,8,68,4],[93,12,68,8,"result"],[93,18,68,14],[94,8,69,4],[94,12,69,8,"value"],[94,17,69,13],[94,22,69,18],[94,27,69,23],[94,28,69,24],[94,30,69,26],[95,10,70,6,"result"],[95,16,70,12],[95,19,70,15],[95,24,70,20],[95,25,70,21],[96,8,71,4],[96,9,71,5],[96,15,71,11],[97,10,72,6,"result"],[97,16,72,12],[97,19,72,15],[98,12,73,8,"success"],[98,19,73,15],[98,21,73,17],[98,25,73,21],[99,12,74,8,"value"],[99,17,74,13],[100,12,75,8],[101,12,76,8,"logLines"],[101,20,76,16],[101,22,76,18],[102,10,77,6],[102,11,77,7],[103,8,78,4],[104,8,79,4],[104,12,79,10,"query"],[104,17,79,15],[104,20,79,18],[105,10,80,6,"udfPath"],[105,17,80,13],[105,19,80,15,"name"],[105,23,80,19],[106,10,81,6,"args"],[106,14,81,10],[106,16,81,12,"queryArgs"],[106,25,81,21],[107,10,82,6,"result"],[108,8,83,4],[108,9,83,5],[109,8,84,4],[109,12,84,8],[109,13,84,9,"queryResults"],[109,25,84,21],[109,26,84,22,"set"],[109,29,84,25],[109,30,84,26,"queryToken"],[109,40,84,36],[109,42,84,38,"query"],[109,47,84,43],[109,48,84,44],[110,8,85,4],[110,12,85,8],[110,13,85,9,"modifiedQueries"],[110,28,85,24],[110,29,85,25,"push"],[110,33,85,29],[110,34,85,30,"queryToken"],[110,44,85,40],[110,45,85,41],[111,6,86,2],[112,4,86,3],[113,6,86,3,"key"],[113,9,86,3],[114,6,86,3,"value"],[114,11,86,3],[114,13,87,2],[114,22,87,9,"queryValue"],[114,32,87,19,"queryValue"],[114,33,87,20,"result"],[114,39,87,26],[114,41,87,28],[115,8,88,4],[115,12,88,8,"result"],[115,18,88,14],[115,23,88,19],[115,28,88,24],[115,29,88,25],[115,31,88,27],[116,10,89,6],[116,17,89,13],[116,22,89,18],[116,23,89,19],[117,8,90,4],[117,9,90,5],[117,15,90,11],[117,19,90,15,"result"],[117,25,90,21],[117,26,90,22,"success"],[117,33,90,29],[117,35,90,31],[118,10,91,6],[118,17,91,13,"result"],[118,23,91,19],[118,24,91,20,"value"],[118,29,91,25],[119,8,92,4],[119,9,92,5],[119,15,92,11],[120,10,93,6],[120,17,93,13],[120,22,93,18],[120,23,93,19],[121,8,94,4],[122,6,95,2],[123,4,95,3],[124,2,95,3],[125,2,95,3],[125,6,97,6,"OptimisticQueryResults"],[125,28,97,28],[126,4,98,2],[126,13,98,2,"OptimisticQueryResults"],[126,36,98,2],[126,38,98,16],[127,6,98,16,"_classCallCheck"],[127,21,98,16],[127,28,98,16,"OptimisticQueryResults"],[127,50,98,16],[128,6,99,4,"__publicField"],[128,19,99,17],[128,20,99,18],[128,24,99,22],[128,26,99,24],[128,40,99,38],[128,41,99,39],[129,6,100,4,"__publicField"],[129,19,100,17],[129,20,100,18],[129,24,100,22],[129,26,100,24],[129,45,100,43],[129,46,100,44],[130,6,101,4],[130,10,101,8],[130,11,101,9,"queryResults"],[130,23,101,21],[130,26,101,24],[130,41,101,40],[130,45,101,44,"Map"],[130,48,101,47],[130,49,101,48],[130,50,101,49],[131,6,102,4],[131,10,102,8],[131,11,102,9,"optimisticUpdates"],[131,28,102,26],[131,31,102,29],[131,33,102,31],[132,4,103,2],[133,4,104,2],[134,0,105,0],[135,0,106,0],[136,4,104,2],[136,11,104,2,"_createClass"],[136,23,104,2],[136,24,104,2,"OptimisticQueryResults"],[136,46,104,2],[137,6,104,2,"key"],[137,9,104,2],[138,6,104,2,"value"],[138,11,104,2],[138,13,107,2],[138,22,107,2,"ingestQueryResultsFromServer"],[138,50,107,30,"ingestQueryResultsFromServer"],[138,51,107,31,"serverQueryResults"],[138,69,107,49],[138,71,107,51,"optimisticUpdatesToDrop"],[138,94,107,74],[138,96,107,76],[139,8,108,4],[139,12,108,8],[139,13,108,9,"optimisticUpdates"],[139,30,108,26],[139,33,108,29],[139,37,108,33],[139,38,108,34,"optimisticUpdates"],[139,55,108,51],[139,56,108,52,"filter"],[139,62,108,58],[139,63,108,60,"updateAndId"],[139,74,108,71],[139,78,108,76],[140,10,109,6],[140,17,109,13],[140,18,109,14,"optimisticUpdatesToDrop"],[140,41,109,37],[140,42,109,38,"has"],[140,45,109,41],[140,46,109,42,"updateAndId"],[140,57,109,53],[140,58,109,54,"mutationId"],[140,68,109,64],[140,69,109,65],[141,8,110,4],[141,9,110,5],[141,10,110,6],[142,8,111,4],[142,12,111,10,"oldQueryResults"],[142,27,111,25],[142,30,111,28],[142,34,111,32],[142,35,111,33,"queryResults"],[142,47,111,45],[143,8,112,4],[143,12,112,8],[143,13,112,9,"queryResults"],[143,25,112,21],[143,28,112,24],[143,32,112,28,"Map"],[143,35,112,31],[143,36,112,32,"serverQueryResults"],[143,54,112,50],[143,55,112,51],[144,8,113,4],[144,12,113,10,"localStore"],[144,22,113,20],[144,25,113,23],[144,29,113,27,"OptimisticLocalStoreImpl"],[144,53,113,51],[144,54,113,52],[144,58,113,56],[144,59,113,57,"queryResults"],[144,71,113,69],[144,72,113,70],[145,8,114,4],[145,13,114,9],[145,17,114,15,"updateAndId"],[145,28,114,26],[145,32,114,30],[145,36,114,34],[145,37,114,35,"optimisticUpdates"],[145,54,114,52],[145,56,114,54],[146,10,115,6,"updateAndId"],[146,21,115,17],[146,22,115,18,"update"],[146,28,115,24],[146,29,115,25,"localStore"],[146,39,115,35],[146,40,115,36],[147,8,116,4],[148,8,117,4],[148,12,117,10,"changedQueries"],[148,26,117,24],[148,29,117,27],[148,31,117,29],[149,8,118,4],[149,17,118,4,"_ref"],[149,21,118,4],[149,25,118,38],[149,29,118,42],[149,30,118,43,"queryResults"],[149,42,118,55],[149,44,118,57],[150,10,118,57],[150,14,118,57,"_ref2"],[150,19,118,57],[150,22,118,57,"_slicedToArray"],[150,36,118,57],[150,37,118,57,"_ref"],[150,41,118,57],[151,10,118,57],[151,14,118,16,"queryToken"],[151,24,118,26],[151,27,118,26,"_ref2"],[151,32,118,26],[152,10,118,26],[152,14,118,28,"query"],[152,19,118,33],[152,22,118,33,"_ref2"],[152,27,118,33],[153,10,119,6],[153,14,119,12,"oldQuery"],[153,22,119,20],[153,25,119,23,"oldQueryResults"],[153,40,119,38],[153,41,119,39,"get"],[153,44,119,42],[153,45,119,43,"queryToken"],[153,55,119,53],[153,56,119,54],[154,10,120,6],[154,14,120,10,"oldQuery"],[154,22,120,18],[154,27,120,23],[154,32,120,28],[154,33,120,29],[154,37,120,33,"oldQuery"],[154,45,120,41],[154,46,120,42,"result"],[154,52,120,48],[154,57,120,53,"query"],[154,62,120,58],[154,63,120,59,"result"],[154,69,120,65],[154,71,120,67],[155,12,121,8,"changedQueries"],[155,26,121,22],[155,27,121,23,"push"],[155,31,121,27],[155,32,121,28,"queryToken"],[155,42,121,38],[155,43,121,39],[156,10,122,6],[157,8,123,4],[158,8,124,4],[158,15,124,11,"changedQueries"],[158,29,124,25],[159,6,125,2],[160,4,125,3],[161,6,125,3,"key"],[161,9,125,3],[162,6,125,3,"value"],[162,11,125,3],[162,13,126,2],[162,22,126,2,"applyOptimisticUpdate"],[162,43,126,23,"applyOptimisticUpdate"],[162,44,126,24,"update"],[162,50,126,30],[162,52,126,32,"mutationId"],[162,62,126,42],[162,64,126,44],[163,8,127,4],[163,12,127,8],[163,13,127,9,"optimisticUpdates"],[163,30,127,26],[163,31,127,27,"push"],[163,35,127,31],[163,36,127,32],[164,10,128,6,"update"],[164,16,128,12],[165,10,129,6,"mutationId"],[166,8,130,4],[166,9,130,5],[166,10,130,6],[167,8,131,4],[167,12,131,10,"localStore"],[167,22,131,20],[167,25,131,23],[167,29,131,27,"OptimisticLocalStoreImpl"],[167,53,131,51],[167,54,131,52],[167,58,131,56],[167,59,131,57,"queryResults"],[167,71,131,69],[167,72,131,70],[168,8,132,4,"update"],[168,14,132,10],[168,15,132,11,"localStore"],[168,25,132,21],[168,26,132,22],[169,8,133,4],[169,15,133,11,"localStore"],[169,25,133,21],[169,26,133,22,"modifiedQueries"],[169,41,133,37],[170,6,134,2],[171,6,135,2],[172,0,136,0],[173,0,137,0],[174,4,135,2],[175,6,135,2,"key"],[175,9,135,2],[176,6,135,2,"value"],[176,11,135,2],[176,13,138,2],[176,22,138,2,"rawQueryResult"],[176,36,138,16,"rawQueryResult"],[176,37,138,17,"queryToken"],[176,47,138,27],[176,49,138,29],[177,8,139,4],[177,15,139,11],[177,19,139,15],[177,20,139,16,"queryResults"],[177,32,139,28],[177,33,139,29,"get"],[177,36,139,32],[177,37,139,33,"queryToken"],[177,47,139,43],[177,48,139,44],[178,6,140,2],[179,4,140,3],[180,6,140,3,"key"],[180,9,140,3],[181,6,140,3,"value"],[181,11,140,3],[181,13,141,2],[181,22,141,2,"queryResult"],[181,33,141,13,"queryResult"],[181,34,141,14,"queryToken"],[181,44,141,24],[181,46,141,26],[182,8,142,4],[182,12,142,10,"query"],[182,17,142,15],[182,20,142,18],[182,24,142,22],[182,25,142,23,"queryResults"],[182,37,142,35],[182,38,142,36,"get"],[182,41,142,39],[182,42,142,40,"queryToken"],[182,52,142,50],[182,53,142,51],[183,8,143,4],[183,12,143,8,"query"],[183,17,143,13],[183,22,143,18],[183,27,143,23],[183,28,143,24],[183,30,143,26],[184,10,144,6],[184,17,144,13],[184,22,144,18],[184,23,144,19],[185,8,145,4],[186,8,146,4],[186,12,146,10,"result"],[186,18,146,16],[186,21,146,19,"query"],[186,26,146,24],[186,27,146,25,"result"],[186,33,146,31],[187,8,147,4],[187,12,147,8,"result"],[187,18,147,14],[187,23,147,19],[187,28,147,24],[187,29,147,25],[187,31,147,27],[188,10,148,6],[188,17,148,13],[188,22,148,18],[188,23,148,19],[189,8,149,4],[189,9,149,5],[189,15,149,11],[189,19,149,15,"result"],[189,25,149,21],[189,26,149,22,"success"],[189,33,149,29],[189,35,149,31],[190,10,150,6],[190,17,150,13,"result"],[190,23,150,19],[190,24,150,20,"value"],[190,29,150,25],[191,8,151,4],[191,9,151,5],[191,15,151,11],[192,10,152,6],[192,14,152,10,"result"],[192,20,152,16],[192,21,152,17,"errorData"],[192,30,152,26],[192,35,152,31],[192,40,152,36],[192,41,152,37],[192,43,152,39],[193,12,153,8],[193,18,153,14],[193,19,153,15],[193,20,153,16],[193,22,153,18,"import_logging"],[193,36,153,32],[193,37,153,33,"forwardData"],[193,48,153,44],[193,50,154,10,"result"],[193,56,154,16],[193,58,155,10],[193,62,155,14,"import_errors"],[193,75,155,27],[193,76,155,28,"ConvexError"],[193,87,155,39],[193,88,156,12],[193,89,156,13],[193,90,156,14],[193,92,156,16,"import_logging"],[193,106,156,30],[193,107,156,31,"createHybridErrorStacktrace"],[193,134,156,58],[193,136,156,60],[193,143,156,67],[193,145,156,69,"query"],[193,150,156,74],[193,151,156,75,"udfPath"],[193,158,156,82],[193,160,156,84,"result"],[193,166,156,90],[193,167,157,10],[193,168,158,8],[193,169,158,9],[194,10,159,6],[195,10,160,6],[195,16,160,12],[195,20,160,16,"Error"],[195,25,160,21],[195,26,161,8],[195,27,161,9],[195,28,161,10],[195,30,161,12,"import_logging"],[195,44,161,26],[195,45,161,27,"createHybridErrorStacktrace"],[195,72,161,54],[195,74,161,56],[195,81,161,63],[195,83,161,65,"query"],[195,88,161,70],[195,89,161,71,"udfPath"],[195,96,161,78],[195,98,161,80,"result"],[195,104,161,86],[195,105,162,6],[195,106,162,7],[196,8,163,4],[197,6,164,2],[198,4,164,3],[199,6,164,3,"key"],[199,9,164,3],[200,6,164,3,"value"],[200,11,164,3],[200,13,165,2],[200,22,165,2,"hasQueryResult"],[200,36,165,16,"hasQueryResult"],[200,37,165,17,"queryToken"],[200,47,165,27],[200,49,165,29],[201,8,166,4],[201,15,166,11],[201,19,166,15],[201,20,166,16,"queryResults"],[201,32,166,28],[201,33,166,29,"get"],[201,36,166,32],[201,37,166,33,"queryToken"],[201,47,166,43],[201,48,166,44],[201,53,166,49],[201,58,166,54],[201,59,166,55],[202,6,167,2],[203,6,168,2],[204,0,169,0],[205,0,170,0],[206,4,168,2],[207,6,168,2,"key"],[207,9,168,2],[208,6,168,2,"value"],[208,11,168,2],[208,13,171,2],[208,22,171,2,"queryLogs"],[208,31,171,11,"queryLogs"],[208,32,171,12,"queryToken"],[208,42,171,22],[208,44,171,24],[209,8,172,4],[209,12,172,10,"query"],[209,17,172,15],[209,20,172,18],[209,24,172,22],[209,25,172,23,"queryResults"],[209,37,172,35],[209,38,172,36,"get"],[209,41,172,39],[209,42,172,40,"queryToken"],[209,52,172,50],[209,53,172,51],[210,8,173,4],[210,15,173,11,"query"],[210,20,173,16],[210,22,173,18,"result"],[210,28,173,24],[210,30,173,26,"logLines"],[210,38,173,34],[211,6,174,2],[212,4,174,3],[213,2,174,3],[214,0,174,3],[214,3]],"functionMap":{"names":["<global>","__defNormalProp","__export","__copyProps","__defProp$argument_2.get","__toCommonJS","__publicField","__export$argument_1.OptimisticQueryResults","OptimisticLocalStoreImpl","OptimisticLocalStoreImpl#constructor","OptimisticLocalStoreImpl#getQuery","OptimisticLocalStoreImpl#getAllQueries","OptimisticLocalStoreImpl#setQuery","OptimisticLocalStoreImpl.queryValue","OptimisticQueryResults","OptimisticQueryResults#constructor","OptimisticQueryResults#ingestQueryResultsFromServer","optimisticUpdates.filter$argument_0","OptimisticQueryResults#applyOptimisticUpdate","OptimisticQueryResults#rawQueryResult","OptimisticQueryResults#queryResult","OptimisticQueryResults#hasQueryResult","OptimisticQueryResults#queryLogs"],"mappings":"AAA;sBCK,yID;eEC;CFG;kBGC;kCCI,eD;CHG;mBKC,uEL;oBMC,0FN;0BOG,4BP;AQQ;ECC;GDO;EEC;GFU;EGC;GHY;EIC;GJsB;EKC;GLQ;CRC;AcC;ECC;GDK;EEI;2DCC;KDE;GFe;EIC;GJQ;EKI;GLE;EMC;GNuB;EOC;GPE;EQI;GRG;CdC"},"hasCjsExports":true},"type":"js/module"}]}