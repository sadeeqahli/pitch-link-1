{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../common/index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":20,"index":1323},"end":{"line":27,"column":49,"index":1352}}],"key":"+dMPzOEbG0ps7baSMj3MqJbvg8c=","exportNames":["*"],"imports":1}},{"name":"./index.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":19,"index":1373},"end":{"line":28,"column":40,"index":1394}}],"key":"/+4zDL+zYiMsWd99XDrCt9hI2hE=","exportNames":["*"],"imports":1}},{"name":"../server/api.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":17,"index":1413},"end":{"line":29,"column":44,"index":1440}}],"key":"9uCDYdba/WXOZ3jXsahDq3geOrk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _asyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _objectWithoutProperties = require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\").default;\n  var _classCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\").default;\n  var _excluded = [\"disabled\"];\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value\n  }) : obj[key] = value;\n  var __export = (target, all) => {\n    for (var name in all) __defProp(target, name, {\n      get: all[name],\n      enumerable: true\n    });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      var _loop = function (key) {\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (var key of __getOwnPropNames(from)) {\n        _loop(key);\n      }\n    }\n    return to;\n  };\n  var __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n  var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  var simple_client_exports = {};\n  __export(simple_client_exports, {\n    ConvexClient: () => ConvexClient,\n    setDefaultWebSocketConstructor: () => setDefaultWebSocketConstructor\n  });\n  module.exports = __toCommonJS(simple_client_exports);\n  var import_common = require(_dependencyMap[4], \"../common/index.js\");\n  var import_index = require(_dependencyMap[5], \"./index.js\");\n  var import_api = require(_dependencyMap[6], \"../server/api.js\");\n  var defaultWebSocketConstructor;\n  function setDefaultWebSocketConstructor(ws) {\n    defaultWebSocketConstructor = ws;\n  }\n  var ConvexClient = /*#__PURE__*/function () {\n    /**\n     * Construct a client and immediately initiate a WebSocket connection to the passed address.\n     *\n     * @public\n     */\n    function ConvexClient(address) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, ConvexClient);\n      __publicField(this, \"listeners\");\n      __publicField(this, \"_client\");\n      // A synthetic server event to run callbacks the first time\n      __publicField(this, \"callNewListenersWithCurrentValuesTimer\");\n      __publicField(this, \"_closed\");\n      __publicField(this, \"_disabled\");\n      if (options.skipConvexDeploymentUrlCheck !== true) {\n        (0, import_common.validateDeploymentUrl)(address);\n      }\n      var disabled = options.disabled,\n        baseOptions = _objectWithoutProperties(options, _excluded);\n      this._closed = false;\n      this._disabled = !!disabled;\n      if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n        baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n      }\n      if (typeof window === \"undefined\" && !(\"unsavedChangesWarning\" in baseOptions)) {\n        baseOptions.unsavedChangesWarning = false;\n      }\n      if (!this.disabled) {\n        this._client = new import_index.BaseConvexClient(address, updatedQueries => this._transition(updatedQueries), baseOptions);\n      }\n      this.listeners = /* @__PURE__ */new Set();\n    }\n    /**\n     * Once closed no registered callbacks will fire again.\n     */\n    return _createClass(ConvexClient, [{\n      key: \"closed\",\n      get: function () {\n        return this._closed;\n      }\n    }, {\n      key: \"client\",\n      get: function () {\n        if (this._client) return this._client;\n        throw new Error(\"ConvexClient is disabled\");\n      }\n    }, {\n      key: \"disabled\",\n      get: function () {\n        return this._disabled;\n      }\n      /**\n       * Call a callback whenever a new result for a query is received. The callback\n       * will run soon after being registered if a result for the query is already\n       * in memory.\n       *\n       * The return value is an {@link Unsubscribe} object which is both a function\n       * an an object with properties. Both of the patterns below work with this object:\n       *\n       *```ts\n       * // call the return value as a function\n       * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n       *   console.log(messages);\n       * });\n       * unsubscribe();\n       *\n       * // unpack the return value into its properties\n       * const {\n       *   getCurrentValue,\n       *   unsubscribe,\n       * } = client.onUpdate(api.messages.list, {}, (messages) => {\n       *   console.log(messages);\n       * });\n       *```\n       *\n       * @param query - A {@link server.FunctionReference} for the public query to run.\n       * @param args - The arguments to run the query with.\n       * @param callback - Function to call when the query result updates.\n       * @param onError - Function to call when the query result updates with an error.\n       * If not provided, errors will be thrown instead of calling the callback.\n       *\n       * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n       */\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate(query, args, callback, onError) {\n        if (this.disabled) {\n          var disabledUnsubscribe = () => {};\n          var unsubscribeProps2 = {\n            unsubscribe: disabledUnsubscribe,\n            getCurrentValue: () => void 0,\n            getQueryLogs: () => void 0\n          };\n          Object.assign(disabledUnsubscribe, unsubscribeProps2);\n          return disabledUnsubscribe;\n        }\n        var _this$client$subscrib = this.client.subscribe((0, import_api.getFunctionName)(query), args),\n          queryToken = _this$client$subscrib.queryToken,\n          unsubscribe = _this$client$subscrib.unsubscribe;\n        var queryInfo = {\n          queryToken,\n          callback,\n          onError,\n          unsubscribe,\n          hasEverRun: false,\n          query,\n          args\n        };\n        this.listeners.add(queryInfo);\n        if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n          this.callNewListenersWithCurrentValuesTimer = setTimeout(() => this.callNewListenersWithCurrentValues(), 0);\n        }\n        var unsubscribeProps = {\n          unsubscribe: () => {\n            if (this.closed) {\n              return;\n            }\n            this.listeners.delete(queryInfo);\n            unsubscribe();\n          },\n          getCurrentValue: () => this.client.localQueryResultByToken(queryToken),\n          getQueryLogs: () => this.client.localQueryLogs(queryToken)\n        };\n        var ret = unsubscribeProps.unsubscribe;\n        Object.assign(ret, unsubscribeProps);\n        return ret;\n      }\n      // Run all callbacks that have never been run before if they have a query\n      // result available now.\n    }, {\n      key: \"callNewListenersWithCurrentValues\",\n      value: function callNewListenersWithCurrentValues() {\n        this.callNewListenersWithCurrentValuesTimer = void 0;\n        this._transition([], true);\n      }\n    }, {\n      key: \"queryResultReady\",\n      value: function queryResultReady(queryToken) {\n        return this.client.hasLocalQueryResultByToken(queryToken);\n      }\n    }, {\n      key: \"close\",\n      value: function () {\n        var _close = _asyncToGenerator(function* () {\n          if (this.disabled) return;\n          this.listeners.clear();\n          this._closed = true;\n          return this.client.close();\n        });\n        function close() {\n          return _close.apply(this, arguments);\n        }\n        return close;\n      }()\n      /**\n       * Set the authentication token to be used for subsequent queries and mutations.\n       * `fetchToken` will be called automatically again if a token expires.\n       * `fetchToken` should return `null` if the token cannot be retrieved, for example\n       * when the user's rights were permanently revoked.\n       * @param fetchToken - an async function returning the JWT (typically an OpenID Connect Identity Token)\n       * @param onChange - a callback that will be called when the authentication status changes\n       */\n    }, {\n      key: \"setAuth\",\n      value: function setAuth(fetchToken, onChange) {\n        if (this.disabled) return;\n        this.client.setAuth(fetchToken, onChange ?? (() => {}));\n      }\n      /**\n       * @internal\n       */\n    }, {\n      key: \"setAdminAuth\",\n      value: function setAdminAuth(token, identity) {\n        if (this.closed) {\n          throw new Error(\"ConvexClient has already been closed.\");\n        }\n        if (this.disabled) return;\n        this.client.setAdminAuth(token, identity);\n      }\n      /**\n       * @internal\n       */\n    }, {\n      key: \"_transition\",\n      value: function _transition(updatedQueries) {\n        var callNewListeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        for (var queryInfo of this.listeners) {\n          var callback = queryInfo.callback,\n            queryToken = queryInfo.queryToken,\n            onError = queryInfo.onError,\n            hasEverRun = queryInfo.hasEverRun;\n          if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n            queryInfo.hasEverRun = true;\n            var newValue = void 0;\n            try {\n              newValue = this.client.localQueryResultByToken(queryToken);\n            } catch (error) {\n              if (!(error instanceof Error)) throw error;\n              if (onError) {\n                onError(error, \"Second argument to onUpdate onError is reserved for later use\");\n              } else {\n                void Promise.reject(error);\n              }\n              continue;\n            }\n            callback(newValue, \"Second argument to onUpdate callback is reserved for later use\");\n          }\n        }\n      }\n      /**\n       * Execute a mutation function.\n       *\n       * @param mutation - A {@link server.FunctionReference} for the public mutation\n       * to run.\n       * @param args - An arguments object for the mutation.\n       * @param options - A {@link MutationOptions} options object for the mutation.\n       * @returns A promise of the mutation's result.\n       */\n    }, {\n      key: \"mutation\",\n      value: (function () {\n        var _mutation2 = _asyncToGenerator(function* (_mutation, args, options) {\n          if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n          return yield this.client.mutation((0, import_api.getFunctionName)(_mutation), args, options);\n        });\n        function mutation(_x, _x2, _x3) {\n          return _mutation2.apply(this, arguments);\n        }\n        return mutation;\n      }()\n      /**\n       * Execute an action function.\n       *\n       * @param action - A {@link server.FunctionReference} for the public action\n       * to run.\n       * @param args - An arguments object for the action.\n       * @returns A promise of the action's result.\n       */\n      )\n    }, {\n      key: \"action\",\n      value: (function () {\n        var _action2 = _asyncToGenerator(function* (_action, args) {\n          if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n          return yield this.client.action((0, import_api.getFunctionName)(_action), args);\n        });\n        function action(_x4, _x5) {\n          return _action2.apply(this, arguments);\n        }\n        return action;\n      }()\n      /**\n       * Fetch a query result once.\n       *\n       * @param query - A {@link server.FunctionReference} for the public query\n       * to run.\n       * @param args - An arguments object for the query.\n       * @returns A promise of the query's result.\n       */\n      )\n    }, {\n      key: \"query\",\n      value: (function () {\n        var _query2 = _asyncToGenerator(function* (_query, args) {\n          if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n          var value = this.client.localQueryResult((0, import_api.getFunctionName)(_query), args);\n          if (value !== void 0) return Promise.resolve(value);\n          return new Promise((resolve, reject) => {\n            var _this$onUpdate = this.onUpdate(_query, args, value2 => {\n                unsubscribe();\n                resolve(value2);\n              }, e => {\n                unsubscribe();\n                reject(e);\n              }),\n              unsubscribe = _this$onUpdate.unsubscribe;\n          });\n        });\n        function query(_x6, _x7) {\n          return _query2.apply(this, arguments);\n        }\n        return query;\n      }()\n      /**\n       * Get the current {@link ConnectionState} between the client and the Convex\n       * backend.\n       *\n       * @returns The {@link ConnectionState} with the Convex backend.\n       */\n      )\n    }, {\n      key: \"connectionState\",\n      value: function connectionState() {\n        if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n        return this.client.connectionState();\n      }\n      /**\n       * Subscribe to the {@link ConnectionState} between the client and the Convex\n       * backend, calling a callback each time it changes.\n       *\n       * Subscribed callbacks will be called when any part of ConnectionState changes.\n       * ConnectionState may grow in future versions (e.g. to provide a array of\n       * inflight requests) in which case callbacks would be called more frequently.\n       *\n       * @returns An unsubscribe function to stop listening.\n       */\n    }, {\n      key: \"subscribeToConnectionState\",\n      value: function subscribeToConnectionState(cb) {\n        if (this.disabled) return () => {};\n        return this.client.subscribeToConnectionState(cb);\n      }\n    }]);\n  }();\n});","lineCount":372,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"require"],[4,33,1,13],[4,34,1,13,"_dependencyMap"],[4,48,1,13],[4,96,1,13,"default"],[4,103,1,13],[5,2,1,13],[5,6,1,13,"_objectWithoutProperties"],[5,30,1,13],[5,33,1,13,"require"],[5,40,1,13],[5,41,1,13,"_dependencyMap"],[5,55,1,13],[5,110,1,13,"default"],[5,117,1,13],[6,2,1,13],[6,6,1,13,"_classCallCheck"],[6,21,1,13],[6,24,1,13,"require"],[6,31,1,13],[6,32,1,13,"_dependencyMap"],[6,46,1,13],[6,92,1,13,"default"],[6,99,1,13],[7,2,1,13],[7,6,1,13,"_createClass"],[7,18,1,13],[7,21,1,13,"require"],[7,28,1,13],[7,29,1,13,"_dependencyMap"],[7,43,1,13],[7,86,1,13,"default"],[7,93,1,13],[8,2,1,13],[8,6,1,13,"_excluded"],[8,15,1,13],[9,2,2,0],[9,6,2,4,"__defProp"],[9,15,2,13],[9,18,2,16,"Object"],[9,24,2,22],[9,25,2,23,"defineProperty"],[9,39,2,37],[10,2,3,0],[10,6,3,4,"__getOwnPropDesc"],[10,22,3,20],[10,25,3,23,"Object"],[10,31,3,29],[10,32,3,30,"getOwnPropertyDescriptor"],[10,56,3,54],[11,2,4,0],[11,6,4,4,"__getOwnPropNames"],[11,23,4,21],[11,26,4,24,"Object"],[11,32,4,30],[11,33,4,31,"getOwnPropertyNames"],[11,52,4,50],[12,2,5,0],[12,6,5,4,"__hasOwnProp"],[12,18,5,16],[12,21,5,19,"Object"],[12,27,5,25],[12,28,5,26,"prototype"],[12,37,5,35],[12,38,5,36,"hasOwnProperty"],[12,52,5,50],[13,2,6,0],[13,6,6,4,"__defNormalProp"],[13,21,6,19],[13,24,6,22,"__defNormalProp"],[13,25,6,23,"obj"],[13,28,6,26],[13,30,6,28,"key"],[13,33,6,31],[13,35,6,33,"value"],[13,40,6,38],[13,45,6,43,"key"],[13,48,6,46],[13,52,6,50,"obj"],[13,55,6,53],[13,58,6,56,"__defProp"],[13,67,6,65],[13,68,6,66,"obj"],[13,71,6,69],[13,73,6,71,"key"],[13,76,6,74],[13,78,6,76],[14,4,6,78,"enumerable"],[14,14,6,88],[14,16,6,90],[14,20,6,94],[15,4,6,96,"configurable"],[15,16,6,108],[15,18,6,110],[15,22,6,114],[16,4,6,116,"writable"],[16,12,6,124],[16,14,6,126],[16,18,6,130],[17,4,6,132,"value"],[18,2,6,138],[18,3,6,139],[18,4,6,140],[18,7,6,143,"obj"],[18,10,6,146],[18,11,6,147,"key"],[18,14,6,150],[18,15,6,151],[18,18,6,154,"value"],[18,23,6,159],[19,2,7,0],[19,6,7,4,"__export"],[19,14,7,12],[19,17,7,15,"__export"],[19,18,7,16,"target"],[19,24,7,22],[19,26,7,24,"all"],[19,29,7,27],[19,34,7,32],[20,4,8,2],[20,9,8,7],[20,13,8,11,"name"],[20,17,8,15],[20,21,8,19,"all"],[20,24,8,22],[20,26,9,4,"__defProp"],[20,35,9,13],[20,36,9,14,"target"],[20,42,9,20],[20,44,9,22,"name"],[20,48,9,26],[20,50,9,28],[21,6,9,30,"get"],[21,9,9,33],[21,11,9,35,"all"],[21,14,9,38],[21,15,9,39,"name"],[21,19,9,43],[21,20,9,44],[22,6,9,46,"enumerable"],[22,16,9,56],[22,18,9,58],[23,4,9,63],[23,5,9,64],[23,6,9,65],[24,2,10,0],[24,3,10,1],[25,2,11,0],[25,6,11,4,"__copyProps"],[25,17,11,15],[25,20,11,18,"__copyProps"],[25,21,11,19,"to"],[25,23,11,21],[25,25,11,23,"from"],[25,29,11,27],[25,31,11,29,"except"],[25,37,11,35],[25,39,11,37,"desc"],[25,43,11,41],[25,48,11,46],[26,4,12,2],[26,8,12,6,"from"],[26,12,12,10],[26,16,12,14],[26,23,12,21,"from"],[26,27,12,25],[26,32,12,30],[26,40,12,38],[26,44,12,42],[26,51,12,49,"from"],[26,55,12,53],[26,60,12,58],[26,70,12,68],[26,72,12,70],[27,6,12,70],[27,10,12,70,"_loop"],[27,15,12,70],[27,27,12,70,"_loop"],[27,28,12,70,"key"],[27,31,12,70],[28,8,14,6],[28,12,14,10],[28,13,14,11,"__hasOwnProp"],[28,25,14,23],[28,26,14,24,"call"],[28,30,14,28],[28,31,14,29,"to"],[28,33,14,31],[28,35,14,33,"key"],[28,38,14,36],[28,39,14,37],[28,43,14,41,"key"],[28,46,14,44],[28,51,14,49,"except"],[28,57,14,55],[28,59,15,8,"__defProp"],[28,68,15,17],[28,69,15,18,"to"],[28,71,15,20],[28,73,15,22,"key"],[28,76,15,25],[28,78,15,27],[29,10,15,29,"get"],[29,13,15,32],[29,15,15,34,"get"],[29,16,15,34],[29,21,15,40,"from"],[29,25,15,44],[29,26,15,45,"key"],[29,29,15,48],[29,30,15,49],[30,10,15,51,"enumerable"],[30,20,15,61],[30,22,15,63],[30,24,15,65,"desc"],[30,28,15,69],[30,31,15,72,"__getOwnPropDesc"],[30,47,15,88],[30,48,15,89,"from"],[30,52,15,93],[30,54,15,95,"key"],[30,57,15,98],[30,58,15,99],[30,59,15,100],[30,63,15,104,"desc"],[30,67,15,108],[30,68,15,109,"enumerable"],[31,8,15,120],[31,9,15,121],[31,10,15,122],[32,6,15,123],[33,6,13,4],[33,11,13,9],[33,15,13,13,"key"],[33,18,13,16],[33,22,13,20,"__getOwnPropNames"],[33,39,13,37],[33,40,13,38,"from"],[33,44,13,42],[33,45,13,43],[34,8,13,43,"_loop"],[34,13,13,43],[34,14,13,43,"key"],[34,17,13,43],[35,6,13,43],[36,4,16,2],[37,4,17,2],[37,11,17,9,"to"],[37,13,17,11],[38,2,18,0],[38,3,18,1],[39,2,19,0],[39,6,19,4,"__toCommonJS"],[39,18,19,16],[39,21,19,20,"mod"],[39,24,19,23],[39,28,19,28,"__copyProps"],[39,39,19,39],[39,40,19,40,"__defProp"],[39,49,19,49],[39,50,19,50],[39,51,19,51],[39,52,19,52],[39,54,19,54],[39,66,19,66],[39,68,19,68],[40,4,19,70,"value"],[40,9,19,75],[40,11,19,77],[41,2,19,82],[41,3,19,83],[41,4,19,84],[41,6,19,86,"mod"],[41,9,19,89],[41,10,19,90],[42,2,20,0],[42,6,20,4,"__publicField"],[42,19,20,17],[42,22,20,20,"__publicField"],[42,23,20,21,"obj"],[42,26,20,24],[42,28,20,26,"key"],[42,31,20,29],[42,33,20,31,"value"],[42,38,20,36],[42,43,20,41,"__defNormalProp"],[42,58,20,56],[42,59,20,57,"obj"],[42,62,20,60],[42,64,20,62],[42,71,20,69,"key"],[42,74,20,72],[42,79,20,77],[42,87,20,85],[42,90,20,88,"key"],[42,93,20,91],[42,96,20,94],[42,98,20,96],[42,101,20,99,"key"],[42,104,20,102],[42,106,20,104,"value"],[42,111,20,109],[42,112,20,110],[43,2,21,0],[43,6,21,4,"simple_client_exports"],[43,27,21,25],[43,30,21,28],[43,31,21,29],[43,32,21,30],[44,2,22,0,"__export"],[44,10,22,8],[44,11,22,9,"simple_client_exports"],[44,32,22,30],[44,34,22,32],[45,4,23,2,"ConvexClient"],[45,16,23,14],[45,18,23,16,"ConvexClient"],[45,19,23,16],[45,24,23,22,"ConvexClient"],[45,36,23,34],[46,4,24,2,"setDefaultWebSocketConstructor"],[46,34,24,32],[46,36,24,34,"setDefaultWebSocketConstructor"],[46,37,24,34],[46,42,24,40,"setDefaultWebSocketConstructor"],[47,2,25,0],[47,3,25,1],[47,4,25,2],[48,2,26,0,"module"],[48,8,26,6],[48,9,26,7,"exports"],[48,16,26,14],[48,19,26,17,"__toCommonJS"],[48,31,26,29],[48,32,26,30,"simple_client_exports"],[48,53,26,51],[48,54,26,52],[49,2,27,0],[49,6,27,4,"import_common"],[49,19,27,17],[49,22,27,20,"require"],[49,29,27,27],[49,30,27,27,"_dependencyMap"],[49,44,27,27],[49,69,27,48],[49,70,27,49],[50,2,28,0],[50,6,28,4,"import_index"],[50,18,28,16],[50,21,28,19,"require"],[50,28,28,26],[50,29,28,26,"_dependencyMap"],[50,43,28,26],[50,60,28,39],[50,61,28,40],[51,2,29,0],[51,6,29,4,"import_api"],[51,16,29,14],[51,19,29,17,"require"],[51,26,29,24],[51,27,29,24,"_dependencyMap"],[51,41,29,24],[51,64,29,43],[51,65,29,44],[52,2,30,0],[52,6,30,4,"defaultWebSocketConstructor"],[52,33,30,31],[53,2,31,0],[53,11,31,9,"setDefaultWebSocketConstructor"],[53,41,31,39,"setDefaultWebSocketConstructor"],[53,42,31,40,"ws"],[53,44,31,42],[53,46,31,44],[54,4,32,2,"defaultWebSocketConstructor"],[54,31,32,29],[54,34,32,32,"ws"],[54,36,32,34],[55,2,33,0],[56,2,33,1],[56,6,34,6,"ConvexClient"],[56,18,34,18],[57,4,35,2],[58,0,36,0],[59,0,37,0],[60,0,38,0],[61,0,39,0],[62,4,40,2],[62,13,40,2,"ConvexClient"],[62,26,40,14,"address"],[62,33,40,21],[62,35,40,37],[63,6,40,37],[63,10,40,23,"options"],[63,17,40,30],[63,20,40,30,"arguments"],[63,29,40,30],[63,30,40,30,"length"],[63,36,40,30],[63,44,40,30,"arguments"],[63,53,40,30],[63,61,40,30,"undefined"],[63,70,40,30],[63,73,40,30,"arguments"],[63,82,40,30],[63,88,40,33],[63,89,40,34],[63,90,40,35],[64,6,40,35,"_classCallCheck"],[64,21,40,35],[64,28,40,35,"ConvexClient"],[64,40,40,35],[65,6,41,4,"__publicField"],[65,19,41,17],[65,20,41,18],[65,24,41,22],[65,26,41,24],[65,37,41,35],[65,38,41,36],[66,6,42,4,"__publicField"],[66,19,42,17],[66,20,42,18],[66,24,42,22],[66,26,42,24],[66,35,42,33],[66,36,42,34],[67,6,43,4],[68,6,44,4,"__publicField"],[68,19,44,17],[68,20,44,18],[68,24,44,22],[68,26,44,24],[68,66,44,64],[68,67,44,65],[69,6,45,4,"__publicField"],[69,19,45,17],[69,20,45,18],[69,24,45,22],[69,26,45,24],[69,35,45,33],[69,36,45,34],[70,6,46,4,"__publicField"],[70,19,46,17],[70,20,46,18],[70,24,46,22],[70,26,46,24],[70,37,46,35],[70,38,46,36],[71,6,47,4],[71,10,47,8,"options"],[71,17,47,15],[71,18,47,16,"skipConvexDeploymentUrlCheck"],[71,46,47,44],[71,51,47,49],[71,55,47,53],[71,57,47,55],[72,8,48,6],[72,9,48,7],[72,10,48,8],[72,12,48,10,"import_common"],[72,25,48,23],[72,26,48,24,"validateDeploymentUrl"],[72,47,48,45],[72,49,48,47,"address"],[72,56,48,54],[72,57,48,55],[73,6,49,4],[74,6,50,4],[74,10,50,12,"disabled"],[74,18,50,20],[74,21,50,41,"options"],[74,28,50,48],[74,29,50,12,"disabled"],[74,37,50,20],[75,8,50,25,"baseOptions"],[75,19,50,36],[75,22,50,36,"_objectWithoutProperties"],[75,46,50,36],[75,47,50,41,"options"],[75,54,50,48],[75,56,50,48,"_excluded"],[75,65,50,48],[76,6,51,4],[76,10,51,8],[76,11,51,9,"_closed"],[76,18,51,16],[76,21,51,19],[76,26,51,24],[77,6,52,4],[77,10,52,8],[77,11,52,9,"_disabled"],[77,20,52,18],[77,23,52,21],[77,24,52,22],[77,25,52,23,"disabled"],[77,33,52,31],[78,6,53,4],[78,10,53,8,"defaultWebSocketConstructor"],[78,37,53,35],[78,41,53,39],[78,43,53,41],[78,65,53,63],[78,69,53,67,"baseOptions"],[78,80,53,78],[78,81,53,79],[78,85,53,83],[78,92,53,90,"WebSocket"],[78,101,53,99],[78,106,53,104],[78,117,53,115],[78,119,53,117],[79,8,54,6,"baseOptions"],[79,19,54,17],[79,20,54,18,"webSocketConstructor"],[79,40,54,38],[79,43,54,41,"defaultWebSocketConstructor"],[79,70,54,68],[80,6,55,4],[81,6,56,4],[81,10,56,8],[81,17,56,15,"window"],[81,23,56,21],[81,28,56,26],[81,39,56,37],[81,43,56,41],[81,45,56,43],[81,68,56,66],[81,72,56,70,"baseOptions"],[81,83,56,81],[81,84,56,82],[81,86,56,84],[82,8,57,6,"baseOptions"],[82,19,57,17],[82,20,57,18,"unsavedChangesWarning"],[82,41,57,39],[82,44,57,42],[82,49,57,47],[83,6,58,4],[84,6,59,4],[84,10,59,8],[84,11,59,9],[84,15,59,13],[84,16,59,14,"disabled"],[84,24,59,22],[84,26,59,24],[85,8,60,6],[85,12,60,10],[85,13,60,11,"_client"],[85,20,60,18],[85,23,60,21],[85,27,60,25,"import_index"],[85,39,60,37],[85,40,60,38,"BaseConvexClient"],[85,56,60,54],[85,57,61,8,"address"],[85,64,61,15],[85,66,62,9,"updatedQueries"],[85,80,62,23],[85,84,62,28],[85,88,62,32],[85,89,62,33,"_transition"],[85,100,62,44],[85,101,62,45,"updatedQueries"],[85,115,62,59],[85,116,62,60],[85,118,63,8,"baseOptions"],[85,129,64,6],[85,130,64,7],[86,6,65,4],[87,6,66,4],[87,10,66,8],[87,11,66,9,"listeners"],[87,20,66,18],[87,23,66,21],[87,38,66,37],[87,42,66,41,"Set"],[87,45,66,44],[87,46,66,45],[87,47,66,46],[88,4,67,2],[89,4,68,2],[90,0,69,0],[91,0,70,0],[92,4,68,2],[92,11,68,2,"_createClass"],[92,23,68,2],[92,24,68,2,"ConvexClient"],[92,36,68,2],[93,6,68,2,"key"],[93,9,68,2],[94,6,68,2,"get"],[94,9,68,2],[94,11,71,2],[94,20,71,2,"get"],[94,21,71,2],[94,23,71,15],[95,8,72,4],[95,15,72,11],[95,19,72,15],[95,20,72,16,"_closed"],[95,27,72,23],[96,6,73,2],[97,4,73,3],[98,6,73,3,"key"],[98,9,73,3],[99,6,73,3,"get"],[99,9,73,3],[99,11,74,2],[99,20,74,2,"get"],[99,21,74,2],[99,23,74,15],[100,8,75,4],[100,12,75,8],[100,16,75,12],[100,17,75,13,"_client"],[100,24,75,20],[100,26,75,22],[100,33,75,29],[100,37,75,33],[100,38,75,34,"_client"],[100,45,75,41],[101,8,76,4],[101,14,76,10],[101,18,76,14,"Error"],[101,23,76,19],[101,24,76,20],[101,50,76,46],[101,51,76,47],[102,6,77,2],[103,4,77,3],[104,6,77,3,"key"],[104,9,77,3],[105,6,77,3,"get"],[105,9,77,3],[105,11,78,2],[105,20,78,2,"get"],[105,21,78,2],[105,23,78,17],[106,8,79,4],[106,15,79,11],[106,19,79,15],[106,20,79,16,"_disabled"],[106,29,79,25],[107,6,80,2],[108,6,81,2],[109,0,82,0],[110,0,83,0],[111,0,84,0],[112,0,85,0],[113,0,86,0],[114,0,87,0],[115,0,88,0],[116,0,89,0],[117,0,90,0],[118,0,91,0],[119,0,92,0],[120,0,93,0],[121,0,94,0],[122,0,95,0],[123,0,96,0],[124,0,97,0],[125,0,98,0],[126,0,99,0],[127,0,100,0],[128,0,101,0],[129,0,102,0],[130,0,103,0],[131,0,104,0],[132,0,105,0],[133,0,106,0],[134,0,107,0],[135,0,108,0],[136,0,109,0],[137,0,110,0],[138,0,111,0],[139,0,112,0],[140,4,81,2],[141,6,81,2,"key"],[141,9,81,2],[142,6,81,2,"value"],[142,11,81,2],[142,13,113,2],[142,22,113,2,"onUpdate"],[142,30,113,10,"onUpdate"],[142,31,113,11,"query"],[142,36,113,16],[142,38,113,18,"args"],[142,42,113,22],[142,44,113,24,"callback"],[142,52,113,32],[142,54,113,34,"onError"],[142,61,113,41],[142,63,113,43],[143,8,114,4],[143,12,114,8],[143,16,114,12],[143,17,114,13,"disabled"],[143,25,114,21],[143,27,114,23],[144,10,115,6],[144,14,115,12,"disabledUnsubscribe"],[144,33,115,31],[144,36,115,34,"disabledUnsubscribe"],[144,37,115,34],[144,42,115,40],[144,43,116,6],[144,44,116,7],[145,10,117,6],[145,14,117,12,"unsubscribeProps2"],[145,31,117,29],[145,34,117,32],[146,12,118,8,"unsubscribe"],[146,23,118,19],[146,25,118,21,"disabledUnsubscribe"],[146,44,118,40],[147,12,119,8,"getCurrentValue"],[147,27,119,23],[147,29,119,25,"getCurrentValue"],[147,30,119,25],[147,35,119,31],[147,40,119,36],[147,41,119,37],[148,12,120,8,"getQueryLogs"],[148,24,120,20],[148,26,120,22,"getQueryLogs"],[148,27,120,22],[148,32,120,28],[148,37,120,33],[149,10,121,6],[149,11,121,7],[150,10,122,6,"Object"],[150,16,122,12],[150,17,122,13,"assign"],[150,23,122,19],[150,24,122,20,"disabledUnsubscribe"],[150,43,122,39],[150,45,122,41,"unsubscribeProps2"],[150,62,122,58],[150,63,122,59],[151,10,123,6],[151,17,123,13,"disabledUnsubscribe"],[151,36,123,32],[152,8,124,4],[153,8,125,4],[153,12,125,4,"_this$client$subscrib"],[153,33,125,4],[153,36,125,40],[153,40,125,44],[153,41,125,45,"client"],[153,47,125,51],[153,48,125,52,"subscribe"],[153,57,125,61],[153,58,126,6],[153,59,126,7],[153,60,126,8],[153,62,126,10,"import_api"],[153,72,126,20],[153,73,126,21,"getFunctionName"],[153,88,126,36],[153,90,126,38,"query"],[153,95,126,43],[153,96,126,44],[153,98,127,6,"args"],[153,102,128,4],[153,103,128,5],[154,10,125,12,"queryToken"],[154,20,125,22],[154,23,125,22,"_this$client$subscrib"],[154,44,125,22],[154,45,125,12,"queryToken"],[154,55,125,22],[155,10,125,24,"unsubscribe"],[155,21,125,35],[155,24,125,35,"_this$client$subscrib"],[155,45,125,35],[155,46,125,24,"unsubscribe"],[155,57,125,35],[156,8,129,4],[156,12,129,10,"queryInfo"],[156,21,129,19],[156,24,129,22],[157,10,130,6,"queryToken"],[157,20,130,16],[158,10,131,6,"callback"],[158,18,131,14],[159,10,132,6,"onError"],[159,17,132,13],[160,10,133,6,"unsubscribe"],[160,21,133,17],[161,10,134,6,"hasEverRun"],[161,20,134,16],[161,22,134,18],[161,27,134,23],[162,10,135,6,"query"],[162,15,135,11],[163,10,136,6,"args"],[164,8,137,4],[164,9,137,5],[165,8,138,4],[165,12,138,8],[165,13,138,9,"listeners"],[165,22,138,18],[165,23,138,19,"add"],[165,26,138,22],[165,27,138,23,"queryInfo"],[165,36,138,32],[165,37,138,33],[166,8,139,4],[166,12,139,8],[166,16,139,12],[166,17,139,13,"queryResultReady"],[166,33,139,29],[166,34,139,30,"queryToken"],[166,44,139,40],[166,45,139,41],[166,49,139,45],[166,53,139,49],[166,54,139,50,"callNewListenersWithCurrentValuesTimer"],[166,92,139,88],[166,97,139,93],[166,102,139,98],[166,103,139,99],[166,105,139,101],[167,10,140,6],[167,14,140,10],[167,15,140,11,"callNewListenersWithCurrentValuesTimer"],[167,53,140,49],[167,56,140,52,"setTimeout"],[167,66,140,62],[167,67,141,8],[167,73,141,14],[167,77,141,18],[167,78,141,19,"callNewListenersWithCurrentValues"],[167,111,141,52],[167,112,141,53],[167,113,141,54],[167,115,142,8],[167,116,143,6],[167,117,143,7],[168,8,144,4],[169,8,145,4],[169,12,145,10,"unsubscribeProps"],[169,28,145,26],[169,31,145,29],[170,10,146,6,"unsubscribe"],[170,21,146,17],[170,23,146,19,"unsubscribe"],[170,24,146,19],[170,29,146,25],[171,12,147,8],[171,16,147,12],[171,20,147,16],[171,21,147,17,"closed"],[171,27,147,23],[171,29,147,25],[172,14,148,10],[173,12,149,8],[174,12,150,8],[174,16,150,12],[174,17,150,13,"listeners"],[174,26,150,22],[174,27,150,23,"delete"],[174,33,150,29],[174,34,150,30,"queryInfo"],[174,43,150,39],[174,44,150,40],[175,12,151,8,"unsubscribe"],[175,23,151,19],[175,24,151,20],[175,25,151,21],[176,10,152,6],[176,11,152,7],[177,10,153,6,"getCurrentValue"],[177,25,153,21],[177,27,153,23,"getCurrentValue"],[177,28,153,23],[177,33,153,29],[177,37,153,33],[177,38,153,34,"client"],[177,44,153,40],[177,45,153,41,"localQueryResultByToken"],[177,68,153,64],[177,69,153,65,"queryToken"],[177,79,153,75],[177,80,153,76],[178,10,154,6,"getQueryLogs"],[178,22,154,18],[178,24,154,20,"getQueryLogs"],[178,25,154,20],[178,30,154,26],[178,34,154,30],[178,35,154,31,"client"],[178,41,154,37],[178,42,154,38,"localQueryLogs"],[178,56,154,52],[178,57,154,53,"queryToken"],[178,67,154,63],[179,8,155,4],[179,9,155,5],[180,8,156,4],[180,12,156,10,"ret"],[180,15,156,13],[180,18,156,16,"unsubscribeProps"],[180,34,156,32],[180,35,156,33,"unsubscribe"],[180,46,156,44],[181,8,157,4,"Object"],[181,14,157,10],[181,15,157,11,"assign"],[181,21,157,17],[181,22,157,18,"ret"],[181,25,157,21],[181,27,157,23,"unsubscribeProps"],[181,43,157,39],[181,44,157,40],[182,8,158,4],[182,15,158,11,"ret"],[182,18,158,14],[183,6,159,2],[184,6,160,2],[185,6,161,2],[186,4,161,2],[187,6,161,2,"key"],[187,9,161,2],[188,6,161,2,"value"],[188,11,161,2],[188,13,162,2],[188,22,162,2,"callNewListenersWithCurrentValues"],[188,55,162,35,"callNewListenersWithCurrentValues"],[188,56,162,35],[188,58,162,38],[189,8,163,4],[189,12,163,8],[189,13,163,9,"callNewListenersWithCurrentValuesTimer"],[189,51,163,47],[189,54,163,50],[189,59,163,55],[189,60,163,56],[190,8,164,4],[190,12,164,8],[190,13,164,9,"_transition"],[190,24,164,20],[190,25,164,21],[190,27,164,23],[190,29,164,25],[190,33,164,29],[190,34,164,30],[191,6,165,2],[192,4,165,3],[193,6,165,3,"key"],[193,9,165,3],[194,6,165,3,"value"],[194,11,165,3],[194,13,166,2],[194,22,166,2,"queryResultReady"],[194,38,166,18,"queryResultReady"],[194,39,166,19,"queryToken"],[194,49,166,29],[194,51,166,31],[195,8,167,4],[195,15,167,11],[195,19,167,15],[195,20,167,16,"client"],[195,26,167,22],[195,27,167,23,"hasLocalQueryResultByToken"],[195,53,167,49],[195,54,167,50,"queryToken"],[195,64,167,60],[195,65,167,61],[196,6,168,2],[197,4,168,3],[198,6,168,3,"key"],[198,9,168,3],[199,6,168,3,"value"],[199,11,168,3],[200,8,168,3],[200,12,168,3,"_close"],[200,18,168,3],[200,21,168,3,"_asyncToGenerator"],[200,38,168,3],[200,39,169,2],[200,52,169,16],[201,10,170,4],[201,14,170,8],[201,18,170,12],[201,19,170,13,"disabled"],[201,27,170,21],[201,29,170,23],[202,10,171,4],[202,14,171,8],[202,15,171,9,"listeners"],[202,24,171,18],[202,25,171,19,"clear"],[202,30,171,24],[202,31,171,25],[202,32,171,26],[203,10,172,4],[203,14,172,8],[203,15,172,9,"_closed"],[203,22,172,16],[203,25,172,19],[203,29,172,23],[204,10,173,4],[204,17,173,11],[204,21,173,15],[204,22,173,16,"client"],[204,28,173,22],[204,29,173,23,"close"],[204,34,173,28],[204,35,173,29],[204,36,173,30],[205,8,174,2],[205,9,174,3],[206,8,174,3],[206,17,169,8,"close"],[206,22,169,13,"close"],[206,23,169,13],[207,10,169,13],[207,17,169,13,"_close"],[207,23,169,13],[207,24,169,13,"apply"],[207,29,169,13],[207,36,169,13,"arguments"],[207,45,169,13],[208,8,169,13],[209,8,169,13],[209,15,169,8,"close"],[209,20,169,13],[210,6,169,13],[211,6,175,2],[212,0,176,0],[213,0,177,0],[214,0,178,0],[215,0,179,0],[216,0,180,0],[217,0,181,0],[218,0,182,0],[219,4,175,2],[220,6,175,2,"key"],[220,9,175,2],[221,6,175,2,"value"],[221,11,175,2],[221,13,183,2],[221,22,183,2,"setAuth"],[221,29,183,9,"setAuth"],[221,30,183,10,"fetchToken"],[221,40,183,20],[221,42,183,22,"onChange"],[221,50,183,30],[221,52,183,32],[222,8,184,4],[222,12,184,8],[222,16,184,12],[222,17,184,13,"disabled"],[222,25,184,21],[222,27,184,23],[223,8,185,4],[223,12,185,8],[223,13,185,9,"client"],[223,19,185,15],[223,20,185,16,"setAuth"],[223,27,185,23],[223,28,186,6,"fetchToken"],[223,38,186,16],[223,40,187,6,"onChange"],[223,48,187,14],[223,53,187,19],[223,59,187,25],[223,60,188,6],[223,61,188,7],[223,62,189,4],[223,63,189,5],[224,6,190,2],[225,6,191,2],[226,0,192,0],[227,0,193,0],[228,4,191,2],[229,6,191,2,"key"],[229,9,191,2],[230,6,191,2,"value"],[230,11,191,2],[230,13,194,2],[230,22,194,2,"setAdminAuth"],[230,34,194,14,"setAdminAuth"],[230,35,194,15,"token"],[230,40,194,20],[230,42,194,22,"identity"],[230,50,194,30],[230,52,194,32],[231,8,195,4],[231,12,195,8],[231,16,195,12],[231,17,195,13,"closed"],[231,23,195,19],[231,25,195,21],[232,10,196,6],[232,16,196,12],[232,20,196,16,"Error"],[232,25,196,21],[232,26,196,22],[232,65,196,61],[232,66,196,62],[233,8,197,4],[234,8,198,4],[234,12,198,8],[234,16,198,12],[234,17,198,13,"disabled"],[234,25,198,21],[234,27,198,23],[235,8,199,4],[235,12,199,8],[235,13,199,9,"client"],[235,19,199,15],[235,20,199,16,"setAdminAuth"],[235,32,199,28],[235,33,199,29,"token"],[235,38,199,34],[235,40,199,36,"identity"],[235,48,199,44],[235,49,199,45],[236,6,200,2],[237,6,201,2],[238,0,202,0],[239,0,203,0],[240,4,201,2],[241,6,201,2,"key"],[241,9,201,2],[242,6,201,2,"value"],[242,11,201,2],[242,13,204,2],[242,22,204,2,"_transition"],[242,33,204,13,"_transition"],[242,34,204,14,"updatedQueries"],[242,48,204,28],[242,50,204,56],[243,8,204,56],[243,12,204,30,"callNewListeners"],[243,28,204,46],[243,31,204,46,"arguments"],[243,40,204,46],[243,41,204,46,"length"],[243,47,204,46],[243,55,204,46,"arguments"],[243,64,204,46],[243,72,204,46,"undefined"],[243,81,204,46],[243,84,204,46,"arguments"],[243,93,204,46],[243,99,204,49],[243,104,204,54],[244,8,205,4],[244,13,205,9],[244,17,205,15,"queryInfo"],[244,26,205,24],[244,30,205,28],[244,34,205,32],[244,35,205,33,"listeners"],[244,44,205,42],[244,46,205,44],[245,10,206,6],[245,14,206,14,"callback"],[245,22,206,22],[245,25,206,60,"queryInfo"],[245,34,206,69],[245,35,206,14,"callback"],[245,43,206,22],[246,12,206,24,"queryToken"],[246,22,206,34],[246,25,206,60,"queryInfo"],[246,34,206,69],[246,35,206,24,"queryToken"],[246,45,206,34],[247,12,206,36,"onError"],[247,19,206,43],[247,22,206,60,"queryInfo"],[247,31,206,69],[247,32,206,36,"onError"],[247,39,206,43],[248,12,206,45,"hasEverRun"],[248,22,206,55],[248,25,206,60,"queryInfo"],[248,34,206,69],[248,35,206,45,"hasEverRun"],[248,45,206,55],[249,10,207,6],[249,14,207,10,"updatedQueries"],[249,28,207,24],[249,29,207,25,"includes"],[249,37,207,33],[249,38,207,34,"queryToken"],[249,48,207,44],[249,49,207,45],[249,53,207,49,"callNewListeners"],[249,69,207,65],[249,73,207,69],[249,74,207,70,"hasEverRun"],[249,84,207,80],[249,88,207,84],[249,92,207,88],[249,93,207,89,"client"],[249,99,207,95],[249,100,207,96,"hasLocalQueryResultByToken"],[249,126,207,122],[249,127,207,123,"queryToken"],[249,137,207,133],[249,138,207,134],[249,140,207,136],[250,12,208,8,"queryInfo"],[250,21,208,17],[250,22,208,18,"hasEverRun"],[250,32,208,28],[250,35,208,31],[250,39,208,35],[251,12,209,8],[251,16,209,12,"newValue"],[251,24,209,20],[252,12,210,8],[252,16,210,12],[253,14,211,10,"newValue"],[253,22,211,18],[253,25,211,21],[253,29,211,25],[253,30,211,26,"client"],[253,36,211,32],[253,37,211,33,"localQueryResultByToken"],[253,60,211,56],[253,61,211,57,"queryToken"],[253,71,211,67],[253,72,211,68],[254,12,212,8],[254,13,212,9],[254,14,212,10],[254,21,212,17,"error"],[254,26,212,22],[254,28,212,24],[255,14,213,10],[255,18,213,14],[255,20,213,16,"error"],[255,25,213,21],[255,37,213,33,"Error"],[255,42,213,38],[255,43,213,39],[255,45,213,41],[255,51,213,47,"error"],[255,56,213,52],[256,14,214,10],[256,18,214,14,"onError"],[256,25,214,21],[256,27,214,23],[257,16,215,12,"onError"],[257,23,215,19],[257,24,216,14,"error"],[257,29,216,19],[257,31,217,14],[257,94,218,12],[257,95,218,13],[258,14,219,10],[258,15,219,11],[258,21,219,17],[259,16,220,12],[259,21,220,17,"Promise"],[259,28,220,24],[259,29,220,25,"reject"],[259,35,220,31],[259,36,220,32,"error"],[259,41,220,37],[259,42,220,38],[260,14,221,10],[261,14,222,10],[262,12,223,8],[263,12,224,8,"callback"],[263,20,224,16],[263,21,225,10,"newValue"],[263,29,225,18],[263,31,226,10],[263,95,227,8],[263,96,227,9],[264,10,228,6],[265,8,229,4],[266,6,230,2],[267,6,231,2],[268,0,232,0],[269,0,233,0],[270,0,234,0],[271,0,235,0],[272,0,236,0],[273,0,237,0],[274,0,238,0],[275,0,239,0],[276,4,231,2],[277,6,231,2,"key"],[277,9,231,2],[278,6,231,2,"value"],[278,11,231,2],[279,8,231,2],[279,12,231,2,"_mutation2"],[279,22,231,2],[279,25,231,2,"_asyncToGenerator"],[279,42,231,2],[279,43,240,2],[279,54,240,17,"mutation"],[279,63,240,25],[279,65,240,27,"args"],[279,69,240,31],[279,71,240,33,"options"],[279,78,240,40],[279,80,240,42],[280,10,241,4],[280,14,241,8],[280,18,241,12],[280,19,241,13,"disabled"],[280,27,241,21],[280,29,241,23],[280,35,241,29],[280,39,241,33,"Error"],[280,44,241,38],[280,45,241,39],[280,71,241,65],[280,72,241,66],[281,10,242,4],[281,23,242,17],[281,27,242,21],[281,28,242,22,"client"],[281,34,242,28],[281,35,242,29,"mutation"],[281,43,242,37],[281,44,242,38],[281,45,242,39],[281,46,242,40],[281,48,242,42,"import_api"],[281,58,242,52],[281,59,242,53,"getFunctionName"],[281,74,242,68],[281,76,242,70,"mutation"],[281,85,242,78],[281,86,242,79],[281,88,242,81,"args"],[281,92,242,85],[281,94,242,87,"options"],[281,101,242,94],[281,102,242,95],[282,8,243,2],[282,9,243,3],[283,8,243,3],[283,17,240,8,"mutation"],[283,25,240,16,"mutation"],[283,26,240,16,"_x"],[283,28,240,16],[283,30,240,16,"_x2"],[283,33,240,16],[283,35,240,16,"_x3"],[283,38,240,16],[284,10,240,16],[284,17,240,16,"_mutation2"],[284,27,240,16],[284,28,240,16,"apply"],[284,33,240,16],[284,40,240,16,"arguments"],[284,49,240,16],[285,8,240,16],[286,8,240,16],[286,15,240,8,"mutation"],[286,23,240,16],[287,6,240,16],[288,6,244,2],[289,0,245,0],[290,0,246,0],[291,0,247,0],[292,0,248,0],[293,0,249,0],[294,0,250,0],[295,0,251,0],[296,6,244,2],[297,4,244,2],[298,6,244,2,"key"],[298,9,244,2],[299,6,244,2,"value"],[299,11,244,2],[300,8,244,2],[300,12,244,2,"_action2"],[300,20,244,2],[300,23,244,2,"_asyncToGenerator"],[300,40,244,2],[300,41,252,2],[300,52,252,15,"action"],[300,59,252,21],[300,61,252,23,"args"],[300,65,252,27],[300,67,252,29],[301,10,253,4],[301,14,253,8],[301,18,253,12],[301,19,253,13,"disabled"],[301,27,253,21],[301,29,253,23],[301,35,253,29],[301,39,253,33,"Error"],[301,44,253,38],[301,45,253,39],[301,71,253,65],[301,72,253,66],[302,10,254,4],[302,23,254,17],[302,27,254,21],[302,28,254,22,"client"],[302,34,254,28],[302,35,254,29,"action"],[302,41,254,35],[302,42,254,36],[302,43,254,37],[302,44,254,38],[302,46,254,40,"import_api"],[302,56,254,50],[302,57,254,51,"getFunctionName"],[302,72,254,66],[302,74,254,68,"action"],[302,81,254,74],[302,82,254,75],[302,84,254,77,"args"],[302,88,254,81],[302,89,254,82],[303,8,255,2],[303,9,255,3],[304,8,255,3],[304,17,252,8,"action"],[304,23,252,14,"action"],[304,24,252,14,"_x4"],[304,27,252,14],[304,29,252,14,"_x5"],[304,32,252,14],[305,10,252,14],[305,17,252,14,"_action2"],[305,25,252,14],[305,26,252,14,"apply"],[305,31,252,14],[305,38,252,14,"arguments"],[305,47,252,14],[306,8,252,14],[307,8,252,14],[307,15,252,8,"action"],[307,21,252,14],[308,6,252,14],[309,6,256,2],[310,0,257,0],[311,0,258,0],[312,0,259,0],[313,0,260,0],[314,0,261,0],[315,0,262,0],[316,0,263,0],[317,6,256,2],[318,4,256,2],[319,6,256,2,"key"],[319,9,256,2],[320,6,256,2,"value"],[320,11,256,2],[321,8,256,2],[321,12,256,2,"_query2"],[321,19,256,2],[321,22,256,2,"_asyncToGenerator"],[321,39,256,2],[321,40,264,2],[321,51,264,14,"query"],[321,57,264,19],[321,59,264,21,"args"],[321,63,264,25],[321,65,264,27],[322,10,265,4],[322,14,265,8],[322,18,265,12],[322,19,265,13,"disabled"],[322,27,265,21],[322,29,265,23],[322,35,265,29],[322,39,265,33,"Error"],[322,44,265,38],[322,45,265,39],[322,71,265,65],[322,72,265,66],[323,10,266,4],[323,14,266,10,"value"],[323,19,266,15],[323,22,266,18],[323,26,266,22],[323,27,266,23,"client"],[323,33,266,29],[323,34,266,30,"localQueryResult"],[323,50,266,46],[323,51,266,47],[323,52,266,48],[323,53,266,49],[323,55,266,51,"import_api"],[323,65,266,61],[323,66,266,62,"getFunctionName"],[323,81,266,77],[323,83,266,79,"query"],[323,89,266,84],[323,90,266,85],[323,92,266,87,"args"],[323,96,266,91],[323,97,266,92],[324,10,267,4],[324,14,267,8,"value"],[324,19,267,13],[324,24,267,18],[324,29,267,23],[324,30,267,24],[324,32,267,26],[324,39,267,33,"Promise"],[324,46,267,40],[324,47,267,41,"resolve"],[324,54,267,48],[324,55,267,49,"value"],[324,60,267,54],[324,61,267,55],[325,10,268,4],[325,17,268,11],[325,21,268,15,"Promise"],[325,28,268,22],[325,29,268,23],[325,30,268,24,"resolve"],[325,37,268,31],[325,39,268,33,"reject"],[325,45,268,39],[325,50,268,44],[326,12,269,6],[326,16,269,6,"_this$onUpdate"],[326,30,269,6],[326,33,269,30],[326,37,269,34],[326,38,269,35,"onUpdate"],[326,46,269,43],[326,47,270,8,"query"],[326,53,270,13],[326,55,271,8,"args"],[326,59,271,12],[326,61,272,9,"value2"],[326,67,272,15],[326,71,272,20],[327,16,273,10,"unsubscribe"],[327,27,273,21],[327,28,273,22],[327,29,273,23],[328,16,274,10,"resolve"],[328,23,274,17],[328,24,274,18,"value2"],[328,30,274,24],[328,31,274,25],[329,14,275,8],[329,15,275,9],[329,17,276,9,"e"],[329,18,276,10],[329,22,276,15],[330,16,277,10,"unsubscribe"],[330,27,277,21],[330,28,277,22],[330,29,277,23],[331,16,278,10,"reject"],[331,22,278,16],[331,23,278,17,"e"],[331,24,278,18],[331,25,278,19],[332,14,279,8],[332,15,280,6],[332,16,280,7],[333,14,269,14,"unsubscribe"],[333,25,269,25],[333,28,269,25,"_this$onUpdate"],[333,42,269,25],[333,43,269,14,"unsubscribe"],[333,54,269,25],[334,10,281,4],[334,11,281,5],[334,12,281,6],[335,8,282,2],[335,9,282,3],[336,8,282,3],[336,17,264,8,"query"],[336,22,264,13,"query"],[336,23,264,13,"_x6"],[336,26,264,13],[336,28,264,13,"_x7"],[336,31,264,13],[337,10,264,13],[337,17,264,13,"_query2"],[337,24,264,13],[337,25,264,13,"apply"],[337,30,264,13],[337,37,264,13,"arguments"],[337,46,264,13],[338,8,264,13],[339,8,264,13],[339,15,264,8,"query"],[339,20,264,13],[340,6,264,13],[341,6,283,2],[342,0,284,0],[343,0,285,0],[344,0,286,0],[345,0,287,0],[346,0,288,0],[347,6,283,2],[348,4,283,2],[349,6,283,2,"key"],[349,9,283,2],[350,6,283,2,"value"],[350,11,283,2],[350,13,289,2],[350,22,289,2,"connectionState"],[350,37,289,17,"connectionState"],[350,38,289,17],[350,40,289,20],[351,8,290,4],[351,12,290,8],[351,16,290,12],[351,17,290,13,"disabled"],[351,25,290,21],[351,27,290,23],[351,33,290,29],[351,37,290,33,"Error"],[351,42,290,38],[351,43,290,39],[351,69,290,65],[351,70,290,66],[352,8,291,4],[352,15,291,11],[352,19,291,15],[352,20,291,16,"client"],[352,26,291,22],[352,27,291,23,"connectionState"],[352,42,291,38],[352,43,291,39],[352,44,291,40],[353,6,292,2],[354,6,293,2],[355,0,294,0],[356,0,295,0],[357,0,296,0],[358,0,297,0],[359,0,298,0],[360,0,299,0],[361,0,300,0],[362,0,301,0],[363,0,302,0],[364,4,293,2],[365,6,293,2,"key"],[365,9,293,2],[366,6,293,2,"value"],[366,11,293,2],[366,13,303,2],[366,22,303,2,"subscribeToConnectionState"],[366,48,303,28,"subscribeToConnectionState"],[366,49,303,29,"cb"],[366,51,303,31],[366,53,303,33],[367,8,304,4],[367,12,304,8],[367,16,304,12],[367,17,304,13,"disabled"],[367,25,304,21],[367,27,304,23],[367,34,304,30],[367,40,304,36],[367,41,305,4],[367,42,305,5],[368,8,306,4],[368,15,306,11],[368,19,306,15],[368,20,306,16,"client"],[368,26,306,22],[368,27,306,23,"subscribeToConnectionState"],[368,53,306,49],[368,54,306,50,"cb"],[368,56,306,52],[368,57,306,53],[369,6,307,2],[370,4,307,3],[371,2,307,3],[372,0,307,3],[372,3]],"functionMap":{"names":["<global>","__defNormalProp","__export","__copyProps","__defProp$argument_2.get","__toCommonJS","__publicField","__export$argument_1.ConvexClient","__export$argument_1.setDefaultWebSocketConstructor","setDefaultWebSocketConstructor","ConvexClient","ConvexClient#constructor","import_index.BaseConvexClient$argument_1","ConvexClient#get__closed","ConvexClient#get__client","ConvexClient#get__disabled","ConvexClient#onUpdate","disabledUnsubscribe","unsubscribeProps2.getCurrentValue","unsubscribeProps2.getQueryLogs","setTimeout$argument_0","unsubscribeProps.unsubscribe","unsubscribeProps.getCurrentValue","unsubscribeProps.getQueryLogs","ConvexClient#callNewListenersWithCurrentValues","ConvexClient#queryResultReady","ConvexClient#close","ConvexClient#setAuth","<anonymous>","ConvexClient#setAdminAuth","ConvexClient#_transition","ConvexClient#mutation","ConvexClient#action","ConvexClient#query","Promise$argument_0","onUpdate$argument_2","onUpdate$argument_3","ConvexClient#connectionState","ConvexClient#subscribeToConnectionState"],"mappings":"AAA;sBCK,yID;eEC;CFG;kBGC;kCCI,eD;CHG;mBKC,uEL;oBMC,0FN;gBOG,kBP;kCQC,oCR;ASO;CTE;AUC;ECM;QCsB,oDD;GDK;EGI;GHE;EIC;GJG;EKC;GLE;EMiC;kCCE;ODC;yBEG,YF;sBGC,YH;QIqB,8CJ;mBKK;OLM;uBMC,qDN;oBOC,4CP;GNK;EcG;GdG;EeC;GfE;EgBC;GhBK;EiBS;mBCI;ODC;GjBE;EmBI;GnBM;EoBI;GpB0B;EqBU;GrBG;EsBS;GtBG;EuBS;uBCI;QCI;SDG;QEC;SFG;KDE;GvBC;E2BO;G3BG;E4BW;8BVC;KUC;G5BE;CVC"},"hasCjsExports":true},"type":"js/module"}]}