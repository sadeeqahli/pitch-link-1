{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":49,"index":83}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"../types/models","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":84},"end":{"line":7,"column":25,"index":179}}],"key":"6CW05S6UbbIp1w7eV7QZ1u+mDuA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useSubscriptionStore\", {\n    enumerable: true,\n    get: function () {\n      return useSubscriptionStore;\n    }\n  });\n  Object.defineProperty(exports, \"useUserPreferencesStore\", {\n    enumerable: true,\n    get: function () {\n      return useUserPreferencesStore;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoVirtualEnv = require(_dependencyMap[1], \"expo/virtual/env\");\n  var _zustand = require(_dependencyMap[2], \"zustand\");\n  var _expoSecureStore = require(_dependencyMap[3], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _typesModels = require(_dependencyMap[4], \"../types/models\");\n  // Storage keys for secure persistence\n  var SUBSCRIPTION_KEY = `${_expoVirtualEnv.env.EXPO_PUBLIC_PROJECT_GROUP_ID}-subscription`;\n  var USER_PREFERENCES_KEY = `${_expoVirtualEnv.env.EXPO_PUBLIC_PROJECT_GROUP_ID}-user-preferences`;\n\n  /**\n   * Subscription Store\n   * Manages user subscription status, premium features access, and payment integration\n   */\n  var useSubscriptionStore = (0, _zustand.create)((set, get) => ({\n    // Subscription state\n    isReady: false,\n    isPremium: false,\n    subscriptionTier: _typesModels.ACCESS_LEVEL.FREE,\n    subscriptionStatus: _typesModels.SUBSCRIPTION_STATUS.INACTIVE,\n    subscription: null,\n    currentPeriodEnd: null,\n    firstPurchaseDate: null,\n    stripeCustomerId: null,\n    stripeSubscriptionId: null,\n    // Payment state\n    isProcessingPayment: false,\n    paymentError: null,\n    // Loading states\n    isLoadingSubscription: false,\n    isLoadingPayment: false,\n    // UI states\n    isPaywallVisible: false,\n    // Pricing configuration\n    pricing: _typesModels.DEFAULT_PRICING,\n    /**\n     * Initialize subscription store by loading persisted data\n     */\n    initialize: function () {\n      var _ref = (0, _asyncToGenerator.default)(function* () {\n        try {\n          set({\n            isLoadingSubscription: true\n          });\n          var storedSubscription = yield SecureStore.getItemAsync(SUBSCRIPTION_KEY);\n          if (storedSubscription) {\n            var subscriptionData = JSON.parse(storedSubscription);\n\n            // Check if subscription is still valid\n            var isValidSubscription = get().validateSubscription(subscriptionData);\n            if (isValidSubscription) {\n              set({\n                ...subscriptionData,\n                isReady: true,\n                isLoadingSubscription: false\n              });\n            } else {\n              // Clear invalid subscription\n              yield get().clearSubscription();\n            }\n          } else {\n            set({\n              isReady: true,\n              isLoadingSubscription: false\n            });\n          }\n        } catch (error) {\n          console.error('Failed to initialize subscription store:', error);\n          set({\n            isReady: true,\n            isLoadingSubscription: false,\n            paymentError: 'Failed to load subscription data'\n          });\n        }\n      });\n      return function initialize() {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Validate subscription data\n     */\n    validateSubscription: subscriptionData => {\n      if (!subscriptionData || !subscriptionData.currentPeriodEnd) {\n        return false;\n      }\n      var currentDate = new Date();\n      var periodEnd = new Date(subscriptionData.currentPeriodEnd);\n\n      // Check if subscription has expired\n      if (currentDate > periodEnd && subscriptionData.subscriptionStatus === _typesModels.SUBSCRIPTION_STATUS.ACTIVE) {\n        return false;\n      }\n      return true;\n    },\n    /**\n     * Set subscription data and persist to secure storage\n     */\n    setSubscription: function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* (subscriptionData) {\n        try {\n          var updatedState = {\n            isPremium: subscriptionData.status === _typesModels.SUBSCRIPTION_STATUS.ACTIVE,\n            subscriptionTier: subscriptionData.status === _typesModels.SUBSCRIPTION_STATUS.ACTIVE ? 'premium' : _typesModels.ACCESS_LEVEL.FREE,\n            subscriptionStatus: subscriptionData.status,\n            subscription: subscriptionData,\n            currentPeriodEnd: subscriptionData.currentPeriodEnd,\n            firstPurchaseDate: subscriptionData.firstPurchaseDate || get().firstPurchaseDate,\n            stripeCustomerId: subscriptionData.stripeCustomerId,\n            stripeSubscriptionId: subscriptionData.stripeSubscriptionId,\n            paymentError: null\n          };\n\n          // Persist to secure storage\n          yield SecureStore.setItemAsync(SUBSCRIPTION_KEY, JSON.stringify(updatedState));\n          set(updatedState);\n          return true;\n        } catch (error) {\n          console.error('Failed to set subscription:', error);\n          set({\n            paymentError: 'Failed to save subscription data'\n          });\n          return false;\n        }\n      });\n      return function setSubscription(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Clear subscription data and remove from storage\n     */\n    clearSubscription: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          yield SecureStore.deleteItemAsync(SUBSCRIPTION_KEY);\n          set({\n            isPremium: false,\n            subscriptionTier: _typesModels.ACCESS_LEVEL.FREE,\n            subscriptionStatus: _typesModels.SUBSCRIPTION_STATUS.INACTIVE,\n            subscription: null,\n            currentPeriodEnd: null,\n            stripeCustomerId: null,\n            stripeSubscriptionId: null,\n            paymentError: null\n          });\n          return true;\n        } catch (error) {\n          console.error('Failed to clear subscription:', error);\n          return false;\n        }\n      });\n      return function clearSubscription() {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Update subscription status (for webhook updates)\n     */\n    updateSubscriptionStatus: function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (status) {\n        var periodEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        try {\n          var currentState = get();\n          var updatedState = {\n            ...currentState,\n            subscriptionStatus: status,\n            isPremium: status === _typesModels.SUBSCRIPTION_STATUS.ACTIVE,\n            subscriptionTier: status === _typesModels.SUBSCRIPTION_STATUS.ACTIVE ? 'premium' : _typesModels.ACCESS_LEVEL.FREE,\n            currentPeriodEnd: periodEnd || currentState.currentPeriodEnd\n          };\n\n          // Update subscription object if it exists\n          if (currentState.subscription) {\n            updatedState.subscription = {\n              ...currentState.subscription,\n              status,\n              currentPeriodEnd: periodEnd || currentState.subscription.currentPeriodEnd\n            };\n          }\n          yield SecureStore.setItemAsync(SUBSCRIPTION_KEY, JSON.stringify(updatedState));\n          set(updatedState);\n          return true;\n        } catch (error) {\n          console.error('Failed to update subscription status:', error);\n          return false;\n        }\n      });\n      return function updateSubscriptionStatus(_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Check if user is eligible for first-time discount\n     */\n    isEligibleForFirstTimeDiscount: () => {\n      var _get = get(),\n        firstPurchaseDate = _get.firstPurchaseDate;\n      return !firstPurchaseDate;\n    },\n    /**\n     * Get applicable pricing for user\n     */\n    getApplicablePricing: () => {\n      var _get2 = get(),\n        pricing = _get2.pricing,\n        isEligibleForFirstTimeDiscount = _get2.isEligibleForFirstTimeDiscount;\n      if (isEligibleForFirstTimeDiscount()) {\n        return {\n          ...pricing,\n          monthly: pricing.firstTimeMonthly,\n          isFirstTimeDiscount: true,\n          discountAmount: pricing.monthly - pricing.firstTimeMonthly,\n          discountPercentage: Math.round((pricing.monthly - pricing.firstTimeMonthly) / pricing.monthly * 100)\n        };\n      }\n      return {\n        ...pricing,\n        isFirstTimeDiscount: false,\n        discountAmount: 0,\n        discountPercentage: 0\n      };\n    },\n    /**\n     * Calculate price for subscription plan\n     */\n    calculatePrice: function () {\n      var plan = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'monthly';\n      var applicablePricing = get().getApplicablePricing();\n      if (plan === 'yearly') {\n        return {\n          amount: applicablePricing.yearly,\n          currency: applicablePricing.currency,\n          period: 'yearly',\n          monthlyEquivalent: Math.round(applicablePricing.yearly / 12),\n          savings: applicablePricing.monthly * 12 - applicablePricing.yearly,\n          discountPercentage: applicablePricing.yearlyDiscountPercent\n        };\n      }\n      return {\n        amount: applicablePricing.monthly,\n        currency: applicablePricing.currency,\n        period: 'monthly',\n        monthlyEquivalent: applicablePricing.monthly,\n        savings: applicablePricing.isFirstTimeDiscount ? applicablePricing.discountAmount : 0,\n        discountPercentage: applicablePricing.isFirstTimeDiscount ? applicablePricing.discountPercentage : 0\n      };\n    },\n    /**\n     * Set payment processing state\n     */\n    setPaymentProcessing: function (isProcessing) {\n      var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      set({\n        isProcessingPayment: isProcessing,\n        paymentError: error,\n        isLoadingPayment: isProcessing\n      });\n    },\n    /**\n     * Set first purchase date (for tracking discount eligibility)\n     */\n    setFirstPurchaseDate: function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* () {\n        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n        try {\n          var currentState = get();\n          if (!currentState.firstPurchaseDate) {\n            var updatedState = {\n              ...currentState,\n              firstPurchaseDate: date\n            };\n            yield SecureStore.setItemAsync(SUBSCRIPTION_KEY, JSON.stringify(updatedState));\n            set({\n              firstPurchaseDate: date\n            });\n          }\n          return true;\n        } catch (error) {\n          console.error('Failed to set first purchase date:', error);\n          return false;\n        }\n      });\n      return function setFirstPurchaseDate() {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Check if subscription will expire soon (within 7 days)\n     */\n    isSubscriptionExpiringSoon: () => {\n      var _get3 = get(),\n        currentPeriodEnd = _get3.currentPeriodEnd,\n        subscriptionStatus = _get3.subscriptionStatus;\n      if (!currentPeriodEnd || subscriptionStatus !== _typesModels.SUBSCRIPTION_STATUS.ACTIVE) {\n        return false;\n      }\n      var currentDate = new Date();\n      var periodEnd = new Date(currentPeriodEnd);\n      var daysUntilExpiry = Math.ceil((periodEnd - currentDate) / (1000 * 60 * 60 * 24));\n      return daysUntilExpiry <= 7 && daysUntilExpiry >= 0;\n    },\n    /**\n     * Check if subscription has expired\n     */\n    isSubscriptionExpired: () => {\n      var _get4 = get(),\n        currentPeriodEnd = _get4.currentPeriodEnd,\n        subscriptionStatus = _get4.subscriptionStatus;\n      if (!currentPeriodEnd) {\n        return subscriptionStatus !== _typesModels.SUBSCRIPTION_STATUS.ACTIVE;\n      }\n      var currentDate = new Date();\n      var periodEnd = new Date(currentPeriodEnd);\n      return currentDate > periodEnd;\n    },\n    /**\n     * Get subscription summary for display\n     */\n    getSubscriptionSummary: () => {\n      var _get5 = get(),\n        isPremium = _get5.isPremium,\n        subscriptionStatus = _get5.subscriptionStatus,\n        currentPeriodEnd = _get5.currentPeriodEnd,\n        subscription = _get5.subscription,\n        isSubscriptionExpiringSoon = _get5.isSubscriptionExpiringSoon,\n        isSubscriptionExpired = _get5.isSubscriptionExpired;\n      if (!isPremium) {\n        return {\n          status: 'free',\n          displayStatus: 'Free Plan',\n          message: 'Upgrade to Premium for exclusive content and live streaming',\n          showUpgrade: true,\n          isExpired: false,\n          isExpiringSoon: false\n        };\n      }\n      var expired = isSubscriptionExpired();\n      var expiringSoon = isSubscriptionExpiringSoon();\n      var displayStatus = 'Premium Active';\n      var message = 'Enjoying premium features';\n      var showUpgrade = false;\n      if (expired) {\n        displayStatus = 'Subscription Expired';\n        message = 'Your premium subscription has expired. Renew to continue enjoying premium features.';\n        showUpgrade = true;\n      } else if (expiringSoon) {\n        var daysLeft = Math.ceil((new Date(currentPeriodEnd) - new Date()) / (1000 * 60 * 60 * 24));\n        displayStatus = 'Premium Active';\n        message = `Your subscription expires in ${daysLeft} day${daysLeft === 1 ? '' : 's'}`;\n        showUpgrade = false;\n      } else if (subscriptionStatus === _typesModels.SUBSCRIPTION_STATUS.PAST_DUE) {\n        displayStatus = 'Payment Past Due';\n        message = 'Please update your payment method to continue premium access';\n        showUpgrade = true;\n      }\n      return {\n        status: subscriptionStatus,\n        displayStatus,\n        message,\n        showUpgrade,\n        isExpired: expired,\n        isExpiringSoon: expiringSoon,\n        nextBillingDate: currentPeriodEnd,\n        plan: subscription?.tier || 'premium'\n      };\n    },\n    /**\n     * Clear payment error\n     */\n    clearPaymentError: () => {\n      set({\n        paymentError: null\n      });\n    },\n    /**\n     * Sync subscription with server\n     */\n    syncSubscription: function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          set({\n            isLoadingSubscription: true\n          });\n\n          // This would make an API call to sync subscription status\n          // For now, we'll just validate the current subscription\n          var currentState = get();\n          var isValid = get().validateSubscription(currentState);\n          if (!isValid && currentState.subscription) {\n            yield get().clearSubscription();\n          }\n          set({\n            isLoadingSubscription: false\n          });\n          return true;\n        } catch (error) {\n          console.error('Failed to sync subscription:', error);\n          set({\n            isLoadingSubscription: false,\n            paymentError: 'Failed to sync subscription status'\n          });\n          return false;\n        }\n      });\n      return function syncSubscription() {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Paywall methods\n    showPaywall: () => {\n      set({\n        isPaywallVisible: true\n      });\n    },\n    hidePaywall: () => {\n      set({\n        isPaywallVisible: false\n      });\n    },\n    // Subscription status methods\n    loadSubscriptionStatus: function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* () {\n        var _get6 = get(),\n          initialize = _get6.initialize;\n        yield initialize();\n      });\n      return function loadSubscriptionStatus() {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    get isSubscribed() {\n      return get().isPremium;\n    }\n  }));\n\n  /**\n   * User Preferences Store\n   * Manages user content preferences and personalization settings\n   */\n  var useUserPreferencesStore = (0, _zustand.create)((set, get) => ({\n    // Initialization state\n    isReady: false,\n    isLoading: false,\n    // Club preferences\n    favoriteClub: null,\n    hasSelectedClub: false,\n    // Content preferences\n    preferredCategories: [],\n    preferredCompetitions: [],\n    contentLanguage: 'en',\n    // Notification preferences\n    notificationSettings: {\n      liveMatchAlerts: true,\n      newsUpdates: true,\n      subscriptionReminders: true,\n      clubNewsUpdates: true\n    },\n    // Usage tracking\n    contentInteractions: {\n      articlesRead: 0,\n      streamingMinutes: 0,\n      lastActiveDate: null,\n      recentCategories: [],\n      premiumContentAccessed: 0\n    },\n    /**\n     * Initialize preferences store\n     */\n    initialize: function () {\n      var _ref8 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          set({\n            isLoading: true\n          });\n          var storedPreferences = yield SecureStore.getItemAsync(USER_PREFERENCES_KEY);\n          if (storedPreferences) {\n            var preferencesData = JSON.parse(storedPreferences);\n            set({\n              ...preferencesData,\n              isReady: true,\n              isLoading: false\n            });\n          } else {\n            set({\n              isReady: true,\n              isLoading: false\n            });\n          }\n        } catch (error) {\n          console.error('Failed to initialize user preferences:', error);\n          set({\n            isReady: true,\n            isLoading: false\n          });\n        }\n      });\n      return function initialize() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Set favorite club\n     */\n    setFavoriteClub: function () {\n      var _ref9 = (0, _asyncToGenerator.default)(function* (club) {\n        try {\n          var updatedState = {\n            favoriteClub: club,\n            hasSelectedClub: !!club\n          };\n          var currentState = get();\n          var newState = {\n            ...currentState,\n            ...updatedState\n          };\n          yield SecureStore.setItemAsync(USER_PREFERENCES_KEY, JSON.stringify(newState));\n          set(updatedState);\n          return true;\n        } catch (error) {\n          console.error('Failed to set favorite club:', error);\n          return false;\n        }\n      });\n      return function setFavoriteClub(_x3) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Update content interactions\n     */\n    updateContentInteractions: function () {\n      var _ref0 = (0, _asyncToGenerator.default)(function* (updates) {\n        try {\n          var currentState = get();\n          var currentInteractions = currentState.contentInteractions;\n          var updatedInteractions = {\n            ...currentInteractions,\n            ...updates,\n            lastActiveDate: new Date()\n          };\n\n          // Update recent categories if category is provided\n          if (updates.category) {\n            var recentCategories = [...(currentInteractions.recentCategories || [])];\n            if (!recentCategories.includes(updates.category)) {\n              recentCategories.unshift(updates.category);\n              // Keep only last 10 categories\n              updatedInteractions.recentCategories = recentCategories.slice(0, 10);\n            }\n          }\n          var updatedState = {\n            ...currentState,\n            contentInteractions: updatedInteractions\n          };\n          yield SecureStore.setItemAsync(USER_PREFERENCES_KEY, JSON.stringify(updatedState));\n          set({\n            contentInteractions: updatedInteractions\n          });\n          return true;\n        } catch (error) {\n          console.error('Failed to update content interactions:', error);\n          return false;\n        }\n      });\n      return function updateContentInteractions(_x4) {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Update notification settings\n     */\n    updateNotificationSettings: function () {\n      var _ref1 = (0, _asyncToGenerator.default)(function* (settings) {\n        try {\n          var currentState = get();\n          var updatedSettings = {\n            ...currentState.notificationSettings,\n            ...settings\n          };\n          var updatedState = {\n            ...currentState,\n            notificationSettings: updatedSettings\n          };\n          yield SecureStore.setItemAsync(USER_PREFERENCES_KEY, JSON.stringify(updatedState));\n          set({\n            notificationSettings: updatedSettings\n          });\n          return true;\n        } catch (error) {\n          console.error('Failed to update notification settings:', error);\n          return false;\n        }\n      });\n      return function updateNotificationSettings(_x5) {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    /**\n     * Get personalized content filters\n     */\n    getPersonalizedFilters: () => {\n      var _get7 = get(),\n        favoriteClub = _get7.favoriteClub,\n        preferredCategories = _get7.preferredCategories,\n        preferredCompetitions = _get7.preferredCompetitions;\n      var filters = {};\n      if (favoriteClub) {\n        filters.clubs = [favoriteClub.id];\n      }\n      if (preferredCategories.length > 0) {\n        filters.categories = preferredCategories;\n      }\n      if (preferredCompetitions.length > 0) {\n        filters.competitions = preferredCompetitions;\n      }\n      return filters;\n    },\n    /**\n     * Clear all preferences\n     */\n    clearPreferences: function () {\n      var _ref10 = (0, _asyncToGenerator.default)(function* () {\n        try {\n          yield SecureStore.deleteItemAsync(USER_PREFERENCES_KEY);\n          set({\n            favoriteClub: null,\n            hasSelectedClub: false,\n            preferredCategories: [],\n            preferredCompetitions: [],\n            contentLanguage: 'en',\n            notificationSettings: {\n              liveMatchAlerts: true,\n              newsUpdates: true,\n              subscriptionReminders: true,\n              clubNewsUpdates: true\n            },\n            contentInteractions: {\n              articlesRead: 0,\n              streamingMinutes: 0,\n              lastActiveDate: null,\n              recentCategories: [],\n              premiumContentAccessed: 0\n            }\n          });\n          return true;\n        } catch (error) {\n          console.error('Failed to clear preferences:', error);\n          return false;\n        }\n      });\n      return function clearPreferences() {\n        return _ref10.apply(this, arguments);\n      };\n    }()\n  }));\n});","lineCount":696,"map":[[27,2,17,0,"Object"],[27,8,17,0],[27,9,17,0,"defineProperty"],[27,23,17,0],[27,24,17,0,"exports"],[27,31,17,0],[28,4,17,0,"enumerable"],[28,14,17,0],[29,4,17,0,"get"],[29,7,17,0],[29,18,17,0,"get"],[29,19,17,0],[30,6,17,0],[30,13,17,0,"useSubscriptionStore"],[30,33,17,0],[31,4,17,0],[32,2,17,0],[33,2,434,0,"Object"],[33,8,434,0],[33,9,434,0,"defineProperty"],[33,23,434,0],[33,24,434,0,"exports"],[33,31,434,0],[34,4,434,0,"enumerable"],[34,14,434,0],[35,4,434,0,"get"],[35,7,434,0],[35,18,434,0,"get"],[35,19,434,0],[36,6,434,0],[36,13,434,0,"useUserPreferencesStore"],[36,36,434,0],[37,4,434,0],[38,2,434,0],[39,2,640,4],[39,6,640,4,"_babelRuntimeHelpersAsyncToGenerator"],[39,42,640,4],[39,45,640,4,"require"],[39,52,640,4],[39,53,640,4,"_dependencyMap"],[39,67,640,4],[40,2,640,4],[40,6,640,4,"_asyncToGenerator"],[40,23,640,4],[40,26,640,4,"_interopDefault"],[40,41,640,4],[40,42,640,4,"_babelRuntimeHelpersAsyncToGenerator"],[40,78,640,4],[41,2,640,4],[41,6,640,4,"_expoVirtualEnv"],[41,21,640,4],[41,24,640,4,"require"],[41,31,640,4],[41,32,640,4,"_dependencyMap"],[41,46,640,4],[42,2,1,0],[42,6,1,0,"_zustand"],[42,14,1,0],[42,17,1,0,"require"],[42,24,1,0],[42,25,1,0,"_dependencyMap"],[42,39,1,0],[43,2,2,0],[43,6,2,0,"_expoSecureStore"],[43,22,2,0],[43,25,2,0,"require"],[43,32,2,0],[43,33,2,0,"_dependencyMap"],[43,47,2,0],[44,2,2,0],[44,6,2,0,"SecureStore"],[44,17,2,0],[44,20,2,0,"_interopNamespace"],[44,37,2,0],[44,38,2,0,"_expoSecureStore"],[44,54,2,0],[45,2,3,0],[45,6,3,0,"_typesModels"],[45,18,3,0],[45,21,3,0,"require"],[45,28,3,0],[45,29,3,0,"_dependencyMap"],[45,43,3,0],[46,2,9,0],[47,2,10,0],[47,6,10,6,"SUBSCRIPTION_KEY"],[47,22,10,22],[47,25,10,25],[47,28,10,25,"_expoVirtualEnv"],[47,43,10,25],[47,44,10,25,"env"],[47,47,10,25],[47,48,10,25,"EXPO_PUBLIC_PROJECT_GROUP_ID"],[47,76,10,25],[47,91,10,83],[48,2,11,0],[48,6,11,6,"USER_PREFERENCES_KEY"],[48,26,11,26],[48,29,11,29],[48,32,11,29,"_expoVirtualEnv"],[48,47,11,29],[48,48,11,29,"env"],[48,51,11,29],[48,52,11,29,"EXPO_PUBLIC_PROJECT_GROUP_ID"],[48,80,11,29],[48,99,11,91],[50,2,13,0],[51,0,14,0],[52,0,15,0],[53,0,16,0],[54,2,17,7],[54,6,17,13,"useSubscriptionStore"],[54,26,17,33],[54,29,17,36],[54,33,17,36,"create"],[54,41,17,42],[54,42,17,42,"create"],[54,48,17,42],[54,50,17,43],[54,51,17,44,"set"],[54,54,17,47],[54,56,17,49,"get"],[54,59,17,52],[54,65,17,58],[55,4,18,2],[56,4,19,2,"isReady"],[56,11,19,9],[56,13,19,11],[56,18,19,16],[57,4,20,2,"isPremium"],[57,13,20,11],[57,15,20,13],[57,20,20,18],[58,4,21,2,"subscriptionTier"],[58,20,21,18],[58,22,21,20,"ACCESS_LEVEL"],[58,34,21,32],[58,35,21,32,"ACCESS_LEVEL"],[58,47,21,32],[58,48,21,33,"FREE"],[58,52,21,37],[59,4,22,2,"subscriptionStatus"],[59,22,22,20],[59,24,22,22,"SUBSCRIPTION_STATUS"],[59,36,22,41],[59,37,22,41,"SUBSCRIPTION_STATUS"],[59,56,22,41],[59,57,22,42,"INACTIVE"],[59,65,22,50],[60,4,23,2,"subscription"],[60,16,23,14],[60,18,23,16],[60,22,23,20],[61,4,24,2,"currentPeriodEnd"],[61,20,24,18],[61,22,24,20],[61,26,24,24],[62,4,25,2,"firstPurchaseDate"],[62,21,25,19],[62,23,25,21],[62,27,25,25],[63,4,26,2,"stripeCustomerId"],[63,20,26,18],[63,22,26,20],[63,26,26,24],[64,4,27,2,"stripeSubscriptionId"],[64,24,27,22],[64,26,27,24],[64,30,27,28],[65,4,29,2],[66,4,30,2,"isProcessingPayment"],[66,23,30,21],[66,25,30,23],[66,30,30,28],[67,4,31,2,"paymentError"],[67,16,31,14],[67,18,31,16],[67,22,31,20],[68,4,33,2],[69,4,34,2,"isLoadingSubscription"],[69,25,34,23],[69,27,34,25],[69,32,34,30],[70,4,35,2,"isLoadingPayment"],[70,20,35,18],[70,22,35,20],[70,27,35,25],[71,4,37,2],[72,4,38,2,"isPaywallVisible"],[72,20,38,18],[72,22,38,20],[72,27,38,25],[73,4,40,2],[74,4,41,2,"pricing"],[74,11,41,9],[74,13,41,11,"DEFAULT_PRICING"],[74,25,41,26],[74,26,41,26,"DEFAULT_PRICING"],[74,41,41,26],[75,4,43,2],[76,0,44,0],[77,0,45,0],[78,4,46,2,"initialize"],[78,14,46,12],[79,6,46,12],[79,10,46,12,"_ref"],[79,14,46,12],[79,21,46,12,"_asyncToGenerator"],[79,38,46,12],[79,39,46,12,"default"],[79,46,46,12],[79,48,46,14],[79,61,46,26],[80,8,47,4],[80,12,47,8],[81,10,48,6,"set"],[81,13,48,9],[81,14,48,10],[82,12,48,12,"isLoadingSubscription"],[82,33,48,33],[82,35,48,35],[83,10,48,40],[83,11,48,41],[83,12,48,42],[84,10,50,6],[84,14,50,12,"storedSubscription"],[84,32,50,30],[84,41,50,39,"SecureStore"],[84,52,50,50],[84,53,50,51,"getItemAsync"],[84,65,50,63],[84,66,50,64,"SUBSCRIPTION_KEY"],[84,82,50,80],[84,83,50,81],[85,10,51,6],[85,14,51,10,"storedSubscription"],[85,32,51,28],[85,34,51,30],[86,12,52,8],[86,16,52,14,"subscriptionData"],[86,32,52,30],[86,35,52,33,"JSON"],[86,39,52,37],[86,40,52,38,"parse"],[86,45,52,43],[86,46,52,44,"storedSubscription"],[86,64,52,62],[86,65,52,63],[88,12,54,8],[89,12,55,8],[89,16,55,14,"isValidSubscription"],[89,35,55,33],[89,38,55,36,"get"],[89,41,55,39],[89,42,55,40],[89,43,55,41],[89,44,55,42,"validateSubscription"],[89,64,55,62],[89,65,55,63,"subscriptionData"],[89,81,55,79],[89,82,55,80],[90,12,57,8],[90,16,57,12,"isValidSubscription"],[90,35,57,31],[90,37,57,33],[91,14,58,10,"set"],[91,17,58,13],[91,18,58,14],[92,16,59,12],[92,19,59,15,"subscriptionData"],[92,35,59,31],[93,16,60,12,"isReady"],[93,23,60,19],[93,25,60,21],[93,29,60,25],[94,16,61,12,"isLoadingSubscription"],[94,37,61,33],[94,39,61,35],[95,14,62,10],[95,15,62,11],[95,16,62,12],[96,12,63,8],[96,13,63,9],[96,19,63,15],[97,14,64,10],[98,14,65,10],[98,20,65,16,"get"],[98,23,65,19],[98,24,65,20],[98,25,65,21],[98,26,65,22,"clearSubscription"],[98,43,65,39],[98,44,65,40],[98,45,65,41],[99,12,66,8],[100,10,67,6],[100,11,67,7],[100,17,67,13],[101,12,68,8,"set"],[101,15,68,11],[101,16,68,12],[102,14,69,10,"isReady"],[102,21,69,17],[102,23,69,19],[102,27,69,23],[103,14,70,10,"isLoadingSubscription"],[103,35,70,31],[103,37,70,33],[104,12,71,8],[104,13,71,9],[104,14,71,10],[105,10,72,6],[106,8,73,4],[106,9,73,5],[106,10,73,6],[106,17,73,13,"error"],[106,22,73,18],[106,24,73,20],[107,10,74,6,"console"],[107,17,74,13],[107,18,74,14,"error"],[107,23,74,19],[107,24,74,20],[107,66,74,62],[107,68,74,64,"error"],[107,73,74,69],[107,74,74,70],[108,10,75,6,"set"],[108,13,75,9],[108,14,75,10],[109,12,76,8,"isReady"],[109,19,76,15],[109,21,76,17],[109,25,76,21],[110,12,77,8,"isLoadingSubscription"],[110,33,77,29],[110,35,77,31],[110,40,77,36],[111,12,78,8,"paymentError"],[111,24,78,20],[111,26,78,22],[112,10,79,6],[112,11,79,7],[112,12,79,8],[113,8,80,4],[114,6,81,2],[114,7,81,3],[115,6,81,3],[115,22,46,2,"initialize"],[115,32,46,12,"initialize"],[115,33,46,12],[116,8,46,12],[116,15,46,12,"_ref"],[116,19,46,12],[116,20,46,12,"apply"],[116,25,46,12],[116,32,46,12,"arguments"],[116,41,46,12],[117,6,46,12],[118,4,46,12],[118,7,81,3],[119,4,83,2],[120,0,84,0],[121,0,85,0],[122,4,86,2,"validateSubscription"],[122,24,86,22],[122,26,86,25,"subscriptionData"],[122,42,86,41],[122,46,86,46],[123,6,87,4],[123,10,87,8],[123,11,87,9,"subscriptionData"],[123,27,87,25],[123,31,87,29],[123,32,87,30,"subscriptionData"],[123,48,87,46],[123,49,87,47,"currentPeriodEnd"],[123,65,87,63],[123,67,87,65],[124,8,88,6],[124,15,88,13],[124,20,88,18],[125,6,89,4],[126,6,91,4],[126,10,91,10,"currentDate"],[126,21,91,21],[126,24,91,24],[126,28,91,28,"Date"],[126,32,91,32],[126,33,91,33],[126,34,91,34],[127,6,92,4],[127,10,92,10,"periodEnd"],[127,19,92,19],[127,22,92,22],[127,26,92,26,"Date"],[127,30,92,30],[127,31,92,31,"subscriptionData"],[127,47,92,47],[127,48,92,48,"currentPeriodEnd"],[127,64,92,64],[127,65,92,65],[129,6,94,4],[130,6,95,4],[130,10,95,8,"currentDate"],[130,21,95,19],[130,24,95,22,"periodEnd"],[130,33,95,31],[130,37,95,35,"subscriptionData"],[130,53,95,51],[130,54,95,52,"subscriptionStatus"],[130,72,95,70],[130,77,95,75,"SUBSCRIPTION_STATUS"],[130,89,95,94],[130,90,95,94,"SUBSCRIPTION_STATUS"],[130,109,95,94],[130,110,95,95,"ACTIVE"],[130,116,95,101],[130,118,95,103],[131,8,96,6],[131,15,96,13],[131,20,96,18],[132,6,97,4],[133,6,99,4],[133,13,99,11],[133,17,99,15],[134,4,100,2],[134,5,100,3],[135,4,102,2],[136,0,103,0],[137,0,104,0],[138,4,105,2,"setSubscription"],[138,19,105,17],[139,6,105,17],[139,10,105,17,"_ref2"],[139,15,105,17],[139,22,105,17,"_asyncToGenerator"],[139,39,105,17],[139,40,105,17,"default"],[139,47,105,17],[139,49,105,19],[139,60,105,26,"subscriptionData"],[139,76,105,42],[139,78,105,47],[140,8,106,4],[140,12,106,8],[141,10,107,6],[141,14,107,12,"updatedState"],[141,26,107,24],[141,29,107,27],[142,12,108,8,"isPremium"],[142,21,108,17],[142,23,108,19,"subscriptionData"],[142,39,108,35],[142,40,108,36,"status"],[142,46,108,42],[142,51,108,47,"SUBSCRIPTION_STATUS"],[142,63,108,66],[142,64,108,66,"SUBSCRIPTION_STATUS"],[142,83,108,66],[142,84,108,67,"ACTIVE"],[142,90,108,73],[143,12,109,8,"subscriptionTier"],[143,28,109,24],[143,30,109,26,"subscriptionData"],[143,46,109,42],[143,47,109,43,"status"],[143,53,109,49],[143,58,109,54,"SUBSCRIPTION_STATUS"],[143,70,109,73],[143,71,109,73,"SUBSCRIPTION_STATUS"],[143,90,109,73],[143,91,109,74,"ACTIVE"],[143,97,109,80],[143,100,109,83],[143,109,109,92],[143,112,109,95,"ACCESS_LEVEL"],[143,124,109,107],[143,125,109,107,"ACCESS_LEVEL"],[143,137,109,107],[143,138,109,108,"FREE"],[143,142,109,112],[144,12,110,8,"subscriptionStatus"],[144,30,110,26],[144,32,110,28,"subscriptionData"],[144,48,110,44],[144,49,110,45,"status"],[144,55,110,51],[145,12,111,8,"subscription"],[145,24,111,20],[145,26,111,22,"subscriptionData"],[145,42,111,38],[146,12,112,8,"currentPeriodEnd"],[146,28,112,24],[146,30,112,26,"subscriptionData"],[146,46,112,42],[146,47,112,43,"currentPeriodEnd"],[146,63,112,59],[147,12,113,8,"firstPurchaseDate"],[147,29,113,25],[147,31,113,27,"subscriptionData"],[147,47,113,43],[147,48,113,44,"firstPurchaseDate"],[147,65,113,61],[147,69,113,65,"get"],[147,72,113,68],[147,73,113,69],[147,74,113,70],[147,75,113,71,"firstPurchaseDate"],[147,92,113,88],[148,12,114,8,"stripeCustomerId"],[148,28,114,24],[148,30,114,26,"subscriptionData"],[148,46,114,42],[148,47,114,43,"stripeCustomerId"],[148,63,114,59],[149,12,115,8,"stripeSubscriptionId"],[149,32,115,28],[149,34,115,30,"subscriptionData"],[149,50,115,46],[149,51,115,47,"stripeSubscriptionId"],[149,71,115,67],[150,12,116,8,"paymentError"],[150,24,116,20],[150,26,116,22],[151,10,117,6],[151,11,117,7],[153,10,119,6],[154,10,120,6],[154,16,120,12,"SecureStore"],[154,27,120,23],[154,28,120,24,"setItemAsync"],[154,40,120,36],[154,41,120,37,"SUBSCRIPTION_KEY"],[154,57,120,53],[154,59,120,55,"JSON"],[154,63,120,59],[154,64,120,60,"stringify"],[154,73,120,69],[154,74,120,70,"updatedState"],[154,86,120,82],[154,87,120,83],[154,88,120,84],[155,10,122,6,"set"],[155,13,122,9],[155,14,122,10,"updatedState"],[155,26,122,22],[155,27,122,23],[156,10,124,6],[156,17,124,13],[156,21,124,17],[157,8,125,4],[157,9,125,5],[157,10,125,6],[157,17,125,13,"error"],[157,22,125,18],[157,24,125,20],[158,10,126,6,"console"],[158,17,126,13],[158,18,126,14,"error"],[158,23,126,19],[158,24,126,20],[158,53,126,49],[158,55,126,51,"error"],[158,60,126,56],[158,61,126,57],[159,10,127,6,"set"],[159,13,127,9],[159,14,127,10],[160,12,127,12,"paymentError"],[160,24,127,24],[160,26,127,26],[161,10,127,61],[161,11,127,62],[161,12,127,63],[162,10,128,6],[162,17,128,13],[162,22,128,18],[163,8,129,4],[164,6,130,2],[164,7,130,3],[165,6,130,3],[165,22,105,2,"setSubscription"],[165,37,105,17,"setSubscription"],[165,38,105,17,"_x"],[165,40,105,17],[166,8,105,17],[166,15,105,17,"_ref2"],[166,20,105,17],[166,21,105,17,"apply"],[166,26,105,17],[166,33,105,17,"arguments"],[166,42,105,17],[167,6,105,17],[168,4,105,17],[168,7,130,3],[169,4,132,2],[170,0,133,0],[171,0,134,0],[172,4,135,2,"clearSubscription"],[172,21,135,19],[173,6,135,19],[173,10,135,19,"_ref3"],[173,15,135,19],[173,22,135,19,"_asyncToGenerator"],[173,39,135,19],[173,40,135,19,"default"],[173,47,135,19],[173,49,135,21],[173,62,135,33],[174,8,136,4],[174,12,136,8],[175,10,137,6],[175,16,137,12,"SecureStore"],[175,27,137,23],[175,28,137,24,"deleteItemAsync"],[175,43,137,39],[175,44,137,40,"SUBSCRIPTION_KEY"],[175,60,137,56],[175,61,137,57],[176,10,139,6,"set"],[176,13,139,9],[176,14,139,10],[177,12,140,8,"isPremium"],[177,21,140,17],[177,23,140,19],[177,28,140,24],[178,12,141,8,"subscriptionTier"],[178,28,141,24],[178,30,141,26,"ACCESS_LEVEL"],[178,42,141,38],[178,43,141,38,"ACCESS_LEVEL"],[178,55,141,38],[178,56,141,39,"FREE"],[178,60,141,43],[179,12,142,8,"subscriptionStatus"],[179,30,142,26],[179,32,142,28,"SUBSCRIPTION_STATUS"],[179,44,142,47],[179,45,142,47,"SUBSCRIPTION_STATUS"],[179,64,142,47],[179,65,142,48,"INACTIVE"],[179,73,142,56],[180,12,143,8,"subscription"],[180,24,143,20],[180,26,143,22],[180,30,143,26],[181,12,144,8,"currentPeriodEnd"],[181,28,144,24],[181,30,144,26],[181,34,144,30],[182,12,145,8,"stripeCustomerId"],[182,28,145,24],[182,30,145,26],[182,34,145,30],[183,12,146,8,"stripeSubscriptionId"],[183,32,146,28],[183,34,146,30],[183,38,146,34],[184,12,147,8,"paymentError"],[184,24,147,20],[184,26,147,22],[185,10,148,6],[185,11,148,7],[185,12,148,8],[186,10,150,6],[186,17,150,13],[186,21,150,17],[187,8,151,4],[187,9,151,5],[187,10,151,6],[187,17,151,13,"error"],[187,22,151,18],[187,24,151,20],[188,10,152,6,"console"],[188,17,152,13],[188,18,152,14,"error"],[188,23,152,19],[188,24,152,20],[188,55,152,51],[188,57,152,53,"error"],[188,62,152,58],[188,63,152,59],[189,10,153,6],[189,17,153,13],[189,22,153,18],[190,8,154,4],[191,6,155,2],[191,7,155,3],[192,6,155,3],[192,22,135,2,"clearSubscription"],[192,39,135,19,"clearSubscription"],[192,40,135,19],[193,8,135,19],[193,15,135,19,"_ref3"],[193,20,135,19],[193,21,135,19,"apply"],[193,26,135,19],[193,33,135,19,"arguments"],[193,42,135,19],[194,6,135,19],[195,4,135,19],[195,7,155,3],[196,4,157,2],[197,0,158,0],[198,0,159,0],[199,4,160,2,"updateSubscriptionStatus"],[199,28,160,26],[200,6,160,26],[200,10,160,26,"_ref4"],[200,15,160,26],[200,22,160,26,"_asyncToGenerator"],[200,39,160,26],[200,40,160,26,"default"],[200,47,160,26],[200,49,160,28],[200,60,160,35,"status"],[200,66,160,41],[200,68,160,64],[201,8,160,64],[201,12,160,43,"periodEnd"],[201,21,160,52],[201,24,160,52,"arguments"],[201,33,160,52],[201,34,160,52,"length"],[201,40,160,52],[201,48,160,52,"arguments"],[201,57,160,52],[201,65,160,52,"undefined"],[201,74,160,52],[201,77,160,52,"arguments"],[201,86,160,52],[201,92,160,55],[201,96,160,59],[202,8,161,4],[202,12,161,8],[203,10,162,6],[203,14,162,12,"currentState"],[203,26,162,24],[203,29,162,27,"get"],[203,32,162,30],[203,33,162,31],[203,34,162,32],[204,10,163,6],[204,14,163,12,"updatedState"],[204,26,163,24],[204,29,163,27],[205,12,164,8],[205,15,164,11,"currentState"],[205,27,164,23],[206,12,165,8,"subscriptionStatus"],[206,30,165,26],[206,32,165,28,"status"],[206,38,165,34],[207,12,166,8,"isPremium"],[207,21,166,17],[207,23,166,19,"status"],[207,29,166,25],[207,34,166,30,"SUBSCRIPTION_STATUS"],[207,46,166,49],[207,47,166,49,"SUBSCRIPTION_STATUS"],[207,66,166,49],[207,67,166,50,"ACTIVE"],[207,73,166,56],[208,12,167,8,"subscriptionTier"],[208,28,167,24],[208,30,167,26,"status"],[208,36,167,32],[208,41,167,37,"SUBSCRIPTION_STATUS"],[208,53,167,56],[208,54,167,56,"SUBSCRIPTION_STATUS"],[208,73,167,56],[208,74,167,57,"ACTIVE"],[208,80,167,63],[208,83,167,66],[208,92,167,75],[208,95,167,78,"ACCESS_LEVEL"],[208,107,167,90],[208,108,167,90,"ACCESS_LEVEL"],[208,120,167,90],[208,121,167,91,"FREE"],[208,125,167,95],[209,12,168,8,"currentPeriodEnd"],[209,28,168,24],[209,30,168,26,"periodEnd"],[209,39,168,35],[209,43,168,39,"currentState"],[209,55,168,51],[209,56,168,52,"currentPeriodEnd"],[210,10,169,6],[210,11,169,7],[212,10,171,6],[213,10,172,6],[213,14,172,10,"currentState"],[213,26,172,22],[213,27,172,23,"subscription"],[213,39,172,35],[213,41,172,37],[214,12,173,8,"updatedState"],[214,24,173,20],[214,25,173,21,"subscription"],[214,37,173,33],[214,40,173,36],[215,14,174,10],[215,17,174,13,"currentState"],[215,29,174,25],[215,30,174,26,"subscription"],[215,42,174,38],[216,14,175,10,"status"],[216,20,175,16],[217,14,176,10,"currentPeriodEnd"],[217,30,176,26],[217,32,176,28,"periodEnd"],[217,41,176,37],[217,45,176,41,"currentState"],[217,57,176,53],[217,58,176,54,"subscription"],[217,70,176,66],[217,71,176,67,"currentPeriodEnd"],[218,12,177,8],[218,13,177,9],[219,10,178,6],[220,10,180,6],[220,16,180,12,"SecureStore"],[220,27,180,23],[220,28,180,24,"setItemAsync"],[220,40,180,36],[220,41,180,37,"SUBSCRIPTION_KEY"],[220,57,180,53],[220,59,180,55,"JSON"],[220,63,180,59],[220,64,180,60,"stringify"],[220,73,180,69],[220,74,180,70,"updatedState"],[220,86,180,82],[220,87,180,83],[220,88,180,84],[221,10,181,6,"set"],[221,13,181,9],[221,14,181,10,"updatedState"],[221,26,181,22],[221,27,181,23],[222,10,183,6],[222,17,183,13],[222,21,183,17],[223,8,184,4],[223,9,184,5],[223,10,184,6],[223,17,184,13,"error"],[223,22,184,18],[223,24,184,20],[224,10,185,6,"console"],[224,17,185,13],[224,18,185,14,"error"],[224,23,185,19],[224,24,185,20],[224,63,185,59],[224,65,185,61,"error"],[224,70,185,66],[224,71,185,67],[225,10,186,6],[225,17,186,13],[225,22,186,18],[226,8,187,4],[227,6,188,2],[227,7,188,3],[228,6,188,3],[228,22,160,2,"updateSubscriptionStatus"],[228,46,160,26,"updateSubscriptionStatus"],[228,47,160,26,"_x2"],[228,50,160,26],[229,8,160,26],[229,15,160,26,"_ref4"],[229,20,160,26],[229,21,160,26,"apply"],[229,26,160,26],[229,33,160,26,"arguments"],[229,42,160,26],[230,6,160,26],[231,4,160,26],[231,7,188,3],[232,4,190,2],[233,0,191,0],[234,0,192,0],[235,4,193,2,"isEligibleForFirstTimeDiscount"],[235,34,193,32],[235,36,193,34,"isEligibleForFirstTimeDiscount"],[235,37,193,34],[235,42,193,40],[236,6,194,4],[236,10,194,4,"_get"],[236,14,194,4],[236,17,194,34,"get"],[236,20,194,37],[236,21,194,38],[236,22,194,39],[237,8,194,12,"firstPurchaseDate"],[237,25,194,29],[237,28,194,29,"_get"],[237,32,194,29],[237,33,194,12,"firstPurchaseDate"],[237,50,194,29],[238,6,195,4],[238,13,195,11],[238,14,195,12,"firstPurchaseDate"],[238,31,195,29],[239,4,196,2],[239,5,196,3],[240,4,198,2],[241,0,199,0],[242,0,200,0],[243,4,201,2,"getApplicablePricing"],[243,24,201,22],[243,26,201,24,"getApplicablePricing"],[243,27,201,24],[243,32,201,30],[244,6,202,4],[244,10,202,4,"_get2"],[244,15,202,4],[244,18,202,56,"get"],[244,21,202,59],[244,22,202,60],[244,23,202,61],[245,8,202,12,"pricing"],[245,15,202,19],[245,18,202,19,"_get2"],[245,23,202,19],[245,24,202,12,"pricing"],[245,31,202,19],[246,8,202,21,"isEligibleForFirstTimeDiscount"],[246,38,202,51],[246,41,202,51,"_get2"],[246,46,202,51],[246,47,202,21,"isEligibleForFirstTimeDiscount"],[246,77,202,51],[247,6,204,4],[247,10,204,8,"isEligibleForFirstTimeDiscount"],[247,40,204,38],[247,41,204,39],[247,42,204,40],[247,44,204,42],[248,8,205,6],[248,15,205,13],[249,10,206,8],[249,13,206,11,"pricing"],[249,20,206,18],[250,10,207,8,"monthly"],[250,17,207,15],[250,19,207,17,"pricing"],[250,26,207,24],[250,27,207,25,"firstTimeMonthly"],[250,43,207,41],[251,10,208,8,"isFirstTimeDiscount"],[251,29,208,27],[251,31,208,29],[251,35,208,33],[252,10,209,8,"discountAmount"],[252,24,209,22],[252,26,209,24,"pricing"],[252,33,209,31],[252,34,209,32,"monthly"],[252,41,209,39],[252,44,209,42,"pricing"],[252,51,209,49],[252,52,209,50,"firstTimeMonthly"],[252,68,209,66],[253,10,210,8,"discountPercentage"],[253,28,210,26],[253,30,210,28,"Math"],[253,34,210,32],[253,35,210,33,"round"],[253,40,210,38],[253,41,210,40],[253,42,210,41,"pricing"],[253,49,210,48],[253,50,210,49,"monthly"],[253,57,210,56],[253,60,210,59,"pricing"],[253,67,210,66],[253,68,210,67,"firstTimeMonthly"],[253,84,210,83],[253,88,210,87,"pricing"],[253,95,210,94],[253,96,210,95,"monthly"],[253,103,210,102],[253,106,210,106],[253,109,210,109],[254,8,211,6],[254,9,211,7],[255,6,212,4],[256,6,214,4],[256,13,214,11],[257,8,215,6],[257,11,215,9,"pricing"],[257,18,215,16],[258,8,216,6,"isFirstTimeDiscount"],[258,27,216,25],[258,29,216,27],[258,34,216,32],[259,8,217,6,"discountAmount"],[259,22,217,20],[259,24,217,22],[259,25,217,23],[260,8,218,6,"discountPercentage"],[260,26,218,24],[260,28,218,26],[261,6,219,4],[261,7,219,5],[262,4,220,2],[262,5,220,3],[263,4,222,2],[264,0,223,0],[265,0,224,0],[266,4,225,2,"calculatePrice"],[266,18,225,16],[266,20,225,18],[266,29,225,18,"calculatePrice"],[266,30,225,18],[266,32,225,40],[267,6,225,40],[267,10,225,19,"plan"],[267,14,225,23],[267,17,225,23,"arguments"],[267,26,225,23],[267,27,225,23,"length"],[267,33,225,23],[267,41,225,23,"arguments"],[267,50,225,23],[267,58,225,23,"undefined"],[267,67,225,23],[267,70,225,23,"arguments"],[267,79,225,23],[267,85,225,26],[267,94,225,35],[268,6,226,4],[268,10,226,10,"applicablePricing"],[268,27,226,27],[268,30,226,30,"get"],[268,33,226,33],[268,34,226,34],[268,35,226,35],[268,36,226,36,"getApplicablePricing"],[268,56,226,56],[268,57,226,57],[268,58,226,58],[269,6,228,4],[269,10,228,8,"plan"],[269,14,228,12],[269,19,228,17],[269,27,228,25],[269,29,228,27],[270,8,229,6],[270,15,229,13],[271,10,230,8,"amount"],[271,16,230,14],[271,18,230,16,"applicablePricing"],[271,35,230,33],[271,36,230,34,"yearly"],[271,42,230,40],[272,10,231,8,"currency"],[272,18,231,16],[272,20,231,18,"applicablePricing"],[272,37,231,35],[272,38,231,36,"currency"],[272,46,231,44],[273,10,232,8,"period"],[273,16,232,14],[273,18,232,16],[273,26,232,24],[274,10,233,8,"monthlyEquivalent"],[274,27,233,25],[274,29,233,27,"Math"],[274,33,233,31],[274,34,233,32,"round"],[274,39,233,37],[274,40,233,38,"applicablePricing"],[274,57,233,55],[274,58,233,56,"yearly"],[274,64,233,62],[274,67,233,65],[274,69,233,67],[274,70,233,68],[275,10,234,8,"savings"],[275,17,234,15],[275,19,234,18,"applicablePricing"],[275,36,234,35],[275,37,234,36,"monthly"],[275,44,234,43],[275,47,234,46],[275,49,234,48],[275,52,234,52,"applicablePricing"],[275,69,234,69],[275,70,234,70,"yearly"],[275,76,234,76],[276,10,235,8,"discountPercentage"],[276,28,235,26],[276,30,235,28,"applicablePricing"],[276,47,235,45],[276,48,235,46,"yearlyDiscountPercent"],[277,8,236,6],[277,9,236,7],[278,6,237,4],[279,6,239,4],[279,13,239,11],[280,8,240,6,"amount"],[280,14,240,12],[280,16,240,14,"applicablePricing"],[280,33,240,31],[280,34,240,32,"monthly"],[280,41,240,39],[281,8,241,6,"currency"],[281,16,241,14],[281,18,241,16,"applicablePricing"],[281,35,241,33],[281,36,241,34,"currency"],[281,44,241,42],[282,8,242,6,"period"],[282,14,242,12],[282,16,242,14],[282,25,242,23],[283,8,243,6,"monthlyEquivalent"],[283,25,243,23],[283,27,243,25,"applicablePricing"],[283,44,243,42],[283,45,243,43,"monthly"],[283,52,243,50],[284,8,244,6,"savings"],[284,15,244,13],[284,17,244,15,"applicablePricing"],[284,34,244,32],[284,35,244,33,"isFirstTimeDiscount"],[284,54,244,52],[284,57,244,55,"applicablePricing"],[284,74,244,72],[284,75,244,73,"discountAmount"],[284,89,244,87],[284,92,244,90],[284,93,244,91],[285,8,245,6,"discountPercentage"],[285,26,245,24],[285,28,245,26,"applicablePricing"],[285,45,245,43],[285,46,245,44,"isFirstTimeDiscount"],[285,65,245,63],[285,68,245,66,"applicablePricing"],[285,85,245,83],[285,86,245,84,"discountPercentage"],[285,104,245,102],[285,107,245,105],[286,6,246,4],[286,7,246,5],[287,4,247,2],[287,5,247,3],[288,4,249,2],[289,0,250,0],[290,0,251,0],[291,4,252,2,"setPaymentProcessing"],[291,24,252,22],[291,26,252,24],[291,35,252,24,"setPaymentProcessing"],[291,36,252,25,"isProcessing"],[291,48,252,37],[291,50,252,56],[292,6,252,56],[292,10,252,39,"error"],[292,15,252,44],[292,18,252,44,"arguments"],[292,27,252,44],[292,28,252,44,"length"],[292,34,252,44],[292,42,252,44,"arguments"],[292,51,252,44],[292,59,252,44,"undefined"],[292,68,252,44],[292,71,252,44,"arguments"],[292,80,252,44],[292,86,252,47],[292,90,252,51],[293,6,253,4,"set"],[293,9,253,7],[293,10,253,8],[294,8,254,6,"isProcessingPayment"],[294,27,254,25],[294,29,254,27,"isProcessing"],[294,41,254,39],[295,8,255,6,"paymentError"],[295,20,255,18],[295,22,255,20,"error"],[295,27,255,25],[296,8,256,6,"isLoadingPayment"],[296,24,256,22],[296,26,256,24,"isProcessing"],[297,6,257,4],[297,7,257,5],[297,8,257,6],[298,4,258,2],[298,5,258,3],[299,4,260,2],[300,0,261,0],[301,0,262,0],[302,4,263,2,"setFirstPurchaseDate"],[302,24,263,22],[303,6,263,22],[303,10,263,22,"_ref5"],[303,15,263,22],[303,22,263,22,"_asyncToGenerator"],[303,39,263,22],[303,40,263,22,"default"],[303,47,263,22],[303,49,263,24],[303,62,263,53],[304,8,263,53],[304,12,263,31,"date"],[304,16,263,35],[304,19,263,35,"arguments"],[304,28,263,35],[304,29,263,35,"length"],[304,35,263,35],[304,43,263,35,"arguments"],[304,52,263,35],[304,60,263,35,"undefined"],[304,69,263,35],[304,72,263,35,"arguments"],[304,81,263,35],[304,87,263,38],[304,91,263,42,"Date"],[304,95,263,46],[304,96,263,47],[304,97,263,48],[305,8,264,4],[305,12,264,8],[306,10,265,6],[306,14,265,12,"currentState"],[306,26,265,24],[306,29,265,27,"get"],[306,32,265,30],[306,33,265,31],[306,34,265,32],[307,10,267,6],[307,14,267,10],[307,15,267,11,"currentState"],[307,27,267,23],[307,28,267,24,"firstPurchaseDate"],[307,45,267,41],[307,47,267,43],[308,12,268,8],[308,16,268,14,"updatedState"],[308,28,268,26],[308,31,268,29],[309,14,269,10],[309,17,269,13,"currentState"],[309,29,269,25],[310,14,270,10,"firstPurchaseDate"],[310,31,270,27],[310,33,270,29,"date"],[311,12,271,8],[311,13,271,9],[312,12,273,8],[312,18,273,14,"SecureStore"],[312,29,273,25],[312,30,273,26,"setItemAsync"],[312,42,273,38],[312,43,273,39,"SUBSCRIPTION_KEY"],[312,59,273,55],[312,61,273,57,"JSON"],[312,65,273,61],[312,66,273,62,"stringify"],[312,75,273,71],[312,76,273,72,"updatedState"],[312,88,273,84],[312,89,273,85],[312,90,273,86],[313,12,274,8,"set"],[313,15,274,11],[313,16,274,12],[314,14,274,14,"firstPurchaseDate"],[314,31,274,31],[314,33,274,33,"date"],[315,12,274,38],[315,13,274,39],[315,14,274,40],[316,10,275,6],[317,10,277,6],[317,17,277,13],[317,21,277,17],[318,8,278,4],[318,9,278,5],[318,10,278,6],[318,17,278,13,"error"],[318,22,278,18],[318,24,278,20],[319,10,279,6,"console"],[319,17,279,13],[319,18,279,14,"error"],[319,23,279,19],[319,24,279,20],[319,60,279,56],[319,62,279,58,"error"],[319,67,279,63],[319,68,279,64],[320,10,280,6],[320,17,280,13],[320,22,280,18],[321,8,281,4],[322,6,282,2],[322,7,282,3],[323,6,282,3],[323,22,263,2,"setFirstPurchaseDate"],[323,42,263,22,"setFirstPurchaseDate"],[323,43,263,22],[324,8,263,22],[324,15,263,22,"_ref5"],[324,20,263,22],[324,21,263,22,"apply"],[324,26,263,22],[324,33,263,22,"arguments"],[324,42,263,22],[325,6,263,22],[326,4,263,22],[326,7,282,3],[327,4,284,2],[328,0,285,0],[329,0,286,0],[330,4,287,2,"isSubscriptionExpiringSoon"],[330,30,287,28],[330,32,287,30,"isSubscriptionExpiringSoon"],[330,33,287,30],[330,38,287,36],[331,6,288,4],[331,10,288,4,"_get3"],[331,15,288,4],[331,18,288,53,"get"],[331,21,288,56],[331,22,288,57],[331,23,288,58],[332,8,288,12,"currentPeriodEnd"],[332,24,288,28],[332,27,288,28,"_get3"],[332,32,288,28],[332,33,288,12,"currentPeriodEnd"],[332,49,288,28],[333,8,288,30,"subscriptionStatus"],[333,26,288,48],[333,29,288,48,"_get3"],[333,34,288,48],[333,35,288,30,"subscriptionStatus"],[333,53,288,48],[334,6,290,4],[334,10,290,8],[334,11,290,9,"currentPeriodEnd"],[334,27,290,25],[334,31,290,29,"subscriptionStatus"],[334,49,290,47],[334,54,290,52,"SUBSCRIPTION_STATUS"],[334,66,290,71],[334,67,290,71,"SUBSCRIPTION_STATUS"],[334,86,290,71],[334,87,290,72,"ACTIVE"],[334,93,290,78],[334,95,290,80],[335,8,291,6],[335,15,291,13],[335,20,291,18],[336,6,292,4],[337,6,294,4],[337,10,294,10,"currentDate"],[337,21,294,21],[337,24,294,24],[337,28,294,28,"Date"],[337,32,294,32],[337,33,294,33],[337,34,294,34],[338,6,295,4],[338,10,295,10,"periodEnd"],[338,19,295,19],[338,22,295,22],[338,26,295,26,"Date"],[338,30,295,30],[338,31,295,31,"currentPeriodEnd"],[338,47,295,47],[338,48,295,48],[339,6,296,4],[339,10,296,10,"daysUntilExpiry"],[339,25,296,25],[339,28,296,28,"Math"],[339,32,296,32],[339,33,296,33,"ceil"],[339,37,296,37],[339,38,296,38],[339,39,296,39,"periodEnd"],[339,48,296,48],[339,51,296,51,"currentDate"],[339,62,296,62],[339,67,296,67],[339,71,296,71],[339,74,296,74],[339,76,296,76],[339,79,296,79],[339,81,296,81],[339,84,296,84],[339,86,296,86],[339,87,296,87],[339,88,296,88],[340,6,298,4],[340,13,298,11,"daysUntilExpiry"],[340,28,298,26],[340,32,298,30],[340,33,298,31],[340,37,298,35,"daysUntilExpiry"],[340,52,298,50],[340,56,298,54],[340,57,298,55],[341,4,299,2],[341,5,299,3],[342,4,301,2],[343,0,302,0],[344,0,303,0],[345,4,304,2,"isSubscriptionExpired"],[345,25,304,23],[345,27,304,25,"isSubscriptionExpired"],[345,28,304,25],[345,33,304,31],[346,6,305,4],[346,10,305,4,"_get4"],[346,15,305,4],[346,18,305,53,"get"],[346,21,305,56],[346,22,305,57],[346,23,305,58],[347,8,305,12,"currentPeriodEnd"],[347,24,305,28],[347,27,305,28,"_get4"],[347,32,305,28],[347,33,305,12,"currentPeriodEnd"],[347,49,305,28],[348,8,305,30,"subscriptionStatus"],[348,26,305,48],[348,29,305,48,"_get4"],[348,34,305,48],[348,35,305,30,"subscriptionStatus"],[348,53,305,48],[349,6,307,4],[349,10,307,8],[349,11,307,9,"currentPeriodEnd"],[349,27,307,25],[349,29,307,27],[350,8,308,6],[350,15,308,13,"subscriptionStatus"],[350,33,308,31],[350,38,308,36,"SUBSCRIPTION_STATUS"],[350,50,308,55],[350,51,308,55,"SUBSCRIPTION_STATUS"],[350,70,308,55],[350,71,308,56,"ACTIVE"],[350,77,308,62],[351,6,309,4],[352,6,311,4],[352,10,311,10,"currentDate"],[352,21,311,21],[352,24,311,24],[352,28,311,28,"Date"],[352,32,311,32],[352,33,311,33],[352,34,311,34],[353,6,312,4],[353,10,312,10,"periodEnd"],[353,19,312,19],[353,22,312,22],[353,26,312,26,"Date"],[353,30,312,30],[353,31,312,31,"currentPeriodEnd"],[353,47,312,47],[353,48,312,48],[354,6,314,4],[354,13,314,11,"currentDate"],[354,24,314,22],[354,27,314,25,"periodEnd"],[354,36,314,34],[355,4,315,2],[355,5,315,3],[356,4,317,2],[357,0,318,0],[358,0,319,0],[359,4,320,2,"getSubscriptionSummary"],[359,26,320,24],[359,28,320,26,"getSubscriptionSummary"],[359,29,320,26],[359,34,320,32],[360,6,321,4],[360,10,321,4,"_get5"],[360,15,321,4],[360,18,328,8,"get"],[360,21,328,11],[360,22,328,12],[360,23,328,13],[361,8,322,6,"isPremium"],[361,17,322,15],[361,20,322,15,"_get5"],[361,25,322,15],[361,26,322,6,"isPremium"],[361,35,322,15],[362,8,323,6,"subscriptionStatus"],[362,26,323,24],[362,29,323,24,"_get5"],[362,34,323,24],[362,35,323,6,"subscriptionStatus"],[362,53,323,24],[363,8,324,6,"currentPeriodEnd"],[363,24,324,22],[363,27,324,22,"_get5"],[363,32,324,22],[363,33,324,6,"currentPeriodEnd"],[363,49,324,22],[364,8,325,6,"subscription"],[364,20,325,18],[364,23,325,18,"_get5"],[364,28,325,18],[364,29,325,6,"subscription"],[364,41,325,18],[365,8,326,6,"isSubscriptionExpiringSoon"],[365,34,326,32],[365,37,326,32,"_get5"],[365,42,326,32],[365,43,326,6,"isSubscriptionExpiringSoon"],[365,69,326,32],[366,8,327,6,"isSubscriptionExpired"],[366,29,327,27],[366,32,327,27,"_get5"],[366,37,327,27],[366,38,327,6,"isSubscriptionExpired"],[366,59,327,27],[367,6,330,4],[367,10,330,8],[367,11,330,9,"isPremium"],[367,20,330,18],[367,22,330,20],[368,8,331,6],[368,15,331,13],[369,10,332,8,"status"],[369,16,332,14],[369,18,332,16],[369,24,332,22],[370,10,333,8,"displayStatus"],[370,23,333,21],[370,25,333,23],[370,36,333,34],[371,10,334,8,"message"],[371,17,334,15],[371,19,334,17],[371,80,334,78],[372,10,335,8,"showUpgrade"],[372,21,335,19],[372,23,335,21],[372,27,335,25],[373,10,336,8,"isExpired"],[373,19,336,17],[373,21,336,19],[373,26,336,24],[374,10,337,8,"isExpiringSoon"],[374,24,337,22],[374,26,337,24],[375,8,338,6],[375,9,338,7],[376,6,339,4],[377,6,341,4],[377,10,341,10,"expired"],[377,17,341,17],[377,20,341,20,"isSubscriptionExpired"],[377,41,341,41],[377,42,341,42],[377,43,341,43],[378,6,342,4],[378,10,342,10,"expiringSoon"],[378,22,342,22],[378,25,342,25,"isSubscriptionExpiringSoon"],[378,51,342,51],[378,52,342,52],[378,53,342,53],[379,6,344,4],[379,10,344,8,"displayStatus"],[379,23,344,21],[379,26,344,24],[379,42,344,40],[380,6,345,4],[380,10,345,8,"message"],[380,17,345,15],[380,20,345,18],[380,47,345,45],[381,6,346,4],[381,10,346,8,"showUpgrade"],[381,21,346,19],[381,24,346,22],[381,29,346,27],[382,6,348,4],[382,10,348,8,"expired"],[382,17,348,15],[382,19,348,17],[383,8,349,6,"displayStatus"],[383,21,349,19],[383,24,349,22],[383,46,349,44],[384,8,350,6,"message"],[384,15,350,13],[384,18,350,16],[384,103,350,101],[385,8,351,6,"showUpgrade"],[385,19,351,17],[385,22,351,20],[385,26,351,24],[386,6,352,4],[386,7,352,5],[386,13,352,11],[386,17,352,15,"expiringSoon"],[386,29,352,27],[386,31,352,29],[387,8,353,6],[387,12,353,12,"daysLeft"],[387,20,353,20],[387,23,353,23,"Math"],[387,27,353,27],[387,28,353,28,"ceil"],[387,32,353,32],[387,33,353,33],[387,34,353,34],[387,38,353,38,"Date"],[387,42,353,42],[387,43,353,43,"currentPeriodEnd"],[387,59,353,59],[387,60,353,60],[387,63,353,63],[387,67,353,67,"Date"],[387,71,353,71],[387,72,353,72],[387,73,353,73],[387,78,353,78],[387,82,353,82],[387,85,353,85],[387,87,353,87],[387,90,353,90],[387,92,353,92],[387,95,353,95],[387,97,353,97],[387,98,353,98],[387,99,353,99],[388,8,354,6,"displayStatus"],[388,21,354,19],[388,24,354,22],[388,40,354,38],[389,8,355,6,"message"],[389,15,355,13],[389,18,355,16],[389,50,355,48,"daysLeft"],[389,58,355,56],[389,65,355,63,"daysLeft"],[389,73,355,71],[389,78,355,76],[389,79,355,77],[389,82,355,80],[389,84,355,82],[389,87,355,85],[389,90,355,88],[389,92,355,90],[390,8,356,6,"showUpgrade"],[390,19,356,17],[390,22,356,20],[390,27,356,25],[391,6,357,4],[391,7,357,5],[391,13,357,11],[391,17,357,15,"subscriptionStatus"],[391,35,357,33],[391,40,357,38,"SUBSCRIPTION_STATUS"],[391,52,357,57],[391,53,357,57,"SUBSCRIPTION_STATUS"],[391,72,357,57],[391,73,357,58,"PAST_DUE"],[391,81,357,66],[391,83,357,68],[392,8,358,6,"displayStatus"],[392,21,358,19],[392,24,358,22],[392,42,358,40],[393,8,359,6,"message"],[393,15,359,13],[393,18,359,16],[393,80,359,78],[394,8,360,6,"showUpgrade"],[394,19,360,17],[394,22,360,20],[394,26,360,24],[395,6,361,4],[396,6,363,4],[396,13,363,11],[397,8,364,6,"status"],[397,14,364,12],[397,16,364,14,"subscriptionStatus"],[397,34,364,32],[398,8,365,6,"displayStatus"],[398,21,365,19],[399,8,366,6,"message"],[399,15,366,13],[400,8,367,6,"showUpgrade"],[400,19,367,17],[401,8,368,6,"isExpired"],[401,17,368,15],[401,19,368,17,"expired"],[401,26,368,24],[402,8,369,6,"isExpiringSoon"],[402,22,369,20],[402,24,369,22,"expiringSoon"],[402,36,369,34],[403,8,370,6,"nextBillingDate"],[403,23,370,21],[403,25,370,23,"currentPeriodEnd"],[403,41,370,39],[404,8,371,6,"plan"],[404,12,371,10],[404,14,371,12,"subscription"],[404,26,371,24],[404,28,371,26,"tier"],[404,32,371,30],[404,36,371,34],[405,6,372,4],[405,7,372,5],[406,4,373,2],[406,5,373,3],[407,4,375,2],[408,0,376,0],[409,0,377,0],[410,4,378,2,"clearPaymentError"],[410,21,378,19],[410,23,378,21,"clearPaymentError"],[410,24,378,21],[410,29,378,27],[411,6,379,4,"set"],[411,9,379,7],[411,10,379,8],[412,8,379,10,"paymentError"],[412,20,379,22],[412,22,379,24],[413,6,379,29],[413,7,379,30],[413,8,379,31],[414,4,380,2],[414,5,380,3],[415,4,382,2],[416,0,383,0],[417,0,384,0],[418,4,385,2,"syncSubscription"],[418,20,385,18],[419,6,385,18],[419,10,385,18,"_ref6"],[419,15,385,18],[419,22,385,18,"_asyncToGenerator"],[419,39,385,18],[419,40,385,18,"default"],[419,47,385,18],[419,49,385,20],[419,62,385,32],[420,8,386,4],[420,12,386,8],[421,10,387,6,"set"],[421,13,387,9],[421,14,387,10],[422,12,387,12,"isLoadingSubscription"],[422,33,387,33],[422,35,387,35],[423,10,387,40],[423,11,387,41],[423,12,387,42],[425,10,389,6],[426,10,390,6],[427,10,391,6],[427,14,391,12,"currentState"],[427,26,391,24],[427,29,391,27,"get"],[427,32,391,30],[427,33,391,31],[427,34,391,32],[428,10,392,6],[428,14,392,12,"isValid"],[428,21,392,19],[428,24,392,22,"get"],[428,27,392,25],[428,28,392,26],[428,29,392,27],[428,30,392,28,"validateSubscription"],[428,50,392,48],[428,51,392,49,"currentState"],[428,63,392,61],[428,64,392,62],[429,10,394,6],[429,14,394,10],[429,15,394,11,"isValid"],[429,22,394,18],[429,26,394,22,"currentState"],[429,38,394,34],[429,39,394,35,"subscription"],[429,51,394,47],[429,53,394,49],[430,12,395,8],[430,18,395,14,"get"],[430,21,395,17],[430,22,395,18],[430,23,395,19],[430,24,395,20,"clearSubscription"],[430,41,395,37],[430,42,395,38],[430,43,395,39],[431,10,396,6],[432,10,398,6,"set"],[432,13,398,9],[432,14,398,10],[433,12,398,12,"isLoadingSubscription"],[433,33,398,33],[433,35,398,35],[434,10,398,41],[434,11,398,42],[434,12,398,43],[435,10,399,6],[435,17,399,13],[435,21,399,17],[436,8,400,4],[436,9,400,5],[436,10,400,6],[436,17,400,13,"error"],[436,22,400,18],[436,24,400,20],[437,10,401,6,"console"],[437,17,401,13],[437,18,401,14,"error"],[437,23,401,19],[437,24,401,20],[437,54,401,50],[437,56,401,52,"error"],[437,61,401,57],[437,62,401,58],[438,10,402,6,"set"],[438,13,402,9],[438,14,402,10],[439,12,403,8,"isLoadingSubscription"],[439,33,403,29],[439,35,403,31],[439,40,403,36],[440,12,404,8,"paymentError"],[440,24,404,20],[440,26,404,22],[441,10,405,6],[441,11,405,7],[441,12,405,8],[442,10,406,6],[442,17,406,13],[442,22,406,18],[443,8,407,4],[444,6,408,2],[444,7,408,3],[445,6,408,3],[445,22,385,2,"syncSubscription"],[445,38,385,18,"syncSubscription"],[445,39,385,18],[446,8,385,18],[446,15,385,18,"_ref6"],[446,20,385,18],[446,21,385,18,"apply"],[446,26,385,18],[446,33,385,18,"arguments"],[446,42,385,18],[447,6,385,18],[448,4,385,18],[448,7,408,3],[449,4,410,2],[450,4,411,2,"showPaywall"],[450,15,411,13],[450,17,411,15,"showPaywall"],[450,18,411,15],[450,23,411,21],[451,6,412,4,"set"],[451,9,412,7],[451,10,412,8],[452,8,412,10,"isPaywallVisible"],[452,24,412,26],[452,26,412,28],[453,6,412,33],[453,7,412,34],[453,8,412,35],[454,4,413,2],[454,5,413,3],[455,4,415,2,"hidePaywall"],[455,15,415,13],[455,17,415,15,"hidePaywall"],[455,18,415,15],[455,23,415,21],[456,6,416,4,"set"],[456,9,416,7],[456,10,416,8],[457,8,416,10,"isPaywallVisible"],[457,24,416,26],[457,26,416,28],[458,6,416,34],[458,7,416,35],[458,8,416,36],[459,4,417,2],[459,5,417,3],[460,4,419,2],[461,4,420,2,"loadSubscriptionStatus"],[461,26,420,24],[462,6,420,24],[462,10,420,24,"_ref7"],[462,15,420,24],[462,22,420,24,"_asyncToGenerator"],[462,39,420,24],[462,40,420,24,"default"],[462,47,420,24],[462,49,420,26],[462,62,420,38],[463,8,421,4],[463,12,421,4,"_get6"],[463,17,421,4],[463,20,421,27,"get"],[463,23,421,30],[463,24,421,31],[463,25,421,32],[464,10,421,12,"initialize"],[464,20,421,22],[464,23,421,22,"_get6"],[464,28,421,22],[464,29,421,12,"initialize"],[464,39,421,22],[465,8,422,4],[465,14,422,10,"initialize"],[465,24,422,20],[465,25,422,21],[465,26,422,22],[466,6,423,2],[466,7,423,3],[467,6,423,3],[467,22,420,2,"loadSubscriptionStatus"],[467,44,420,24,"loadSubscriptionStatus"],[467,45,420,24],[468,8,420,24],[468,15,420,24,"_ref7"],[468,20,420,24],[468,21,420,24,"apply"],[468,26,420,24],[468,33,420,24,"arguments"],[468,42,420,24],[469,6,420,24],[470,4,420,24],[470,7,423,3],[471,4,425,2],[471,8,425,6,"isSubscribed"],[471,20,425,18,"isSubscribed"],[471,21,425,18],[471,23,425,21],[472,6,426,4],[472,13,426,11,"get"],[472,16,426,14],[472,17,426,15],[472,18,426,16],[472,19,426,17,"isPremium"],[472,28,426,26],[473,4,427,2],[474,2,428,0],[474,3,428,1],[474,4,428,2],[474,5,428,3],[476,2,430,0],[477,0,431,0],[478,0,432,0],[479,0,433,0],[480,2,434,7],[480,6,434,13,"useUserPreferencesStore"],[480,29,434,36],[480,32,434,39],[480,36,434,39,"create"],[480,44,434,45],[480,45,434,45,"create"],[480,51,434,45],[480,53,434,46],[480,54,434,47,"set"],[480,57,434,50],[480,59,434,52,"get"],[480,62,434,55],[480,68,434,61],[481,4,435,2],[482,4,436,2,"isReady"],[482,11,436,9],[482,13,436,11],[482,18,436,16],[483,4,437,2,"isLoading"],[483,13,437,11],[483,15,437,13],[483,20,437,18],[484,4,439,2],[485,4,440,2,"favoriteClub"],[485,16,440,14],[485,18,440,16],[485,22,440,20],[486,4,441,2,"hasSelectedClub"],[486,19,441,17],[486,21,441,19],[486,26,441,24],[487,4,443,2],[488,4,444,2,"preferredCategories"],[488,23,444,21],[488,25,444,23],[488,27,444,25],[489,4,445,2,"preferredCompetitions"],[489,25,445,23],[489,27,445,25],[489,29,445,27],[490,4,446,2,"contentLanguage"],[490,19,446,17],[490,21,446,19],[490,25,446,23],[491,4,448,2],[492,4,449,2,"notificationSettings"],[492,24,449,22],[492,26,449,24],[493,6,450,4,"liveMatchAlerts"],[493,21,450,19],[493,23,450,21],[493,27,450,25],[494,6,451,4,"newsUpdates"],[494,17,451,15],[494,19,451,17],[494,23,451,21],[495,6,452,4,"subscriptionReminders"],[495,27,452,25],[495,29,452,27],[495,33,452,31],[496,6,453,4,"clubNewsUpdates"],[496,21,453,19],[496,23,453,21],[497,4,454,2],[497,5,454,3],[498,4,456,2],[499,4,457,2,"contentInteractions"],[499,23,457,21],[499,25,457,23],[500,6,458,4,"articlesRead"],[500,18,458,16],[500,20,458,18],[500,21,458,19],[501,6,459,4,"streamingMinutes"],[501,22,459,20],[501,24,459,22],[501,25,459,23],[502,6,460,4,"lastActiveDate"],[502,20,460,18],[502,22,460,20],[502,26,460,24],[503,6,461,4,"recentCategories"],[503,22,461,20],[503,24,461,22],[503,26,461,24],[504,6,462,4,"premiumContentAccessed"],[504,28,462,26],[504,30,462,28],[505,4,463,2],[505,5,463,3],[506,4,465,2],[507,0,466,0],[508,0,467,0],[509,4,468,2,"initialize"],[509,14,468,12],[510,6,468,12],[510,10,468,12,"_ref8"],[510,15,468,12],[510,22,468,12,"_asyncToGenerator"],[510,39,468,12],[510,40,468,12,"default"],[510,47,468,12],[510,49,468,14],[510,62,468,26],[511,8,469,4],[511,12,469,8],[512,10,470,6,"set"],[512,13,470,9],[512,14,470,10],[513,12,470,12,"isLoading"],[513,21,470,21],[513,23,470,23],[514,10,470,28],[514,11,470,29],[514,12,470,30],[515,10,472,6],[515,14,472,12,"storedPreferences"],[515,31,472,29],[515,40,472,38,"SecureStore"],[515,51,472,49],[515,52,472,50,"getItemAsync"],[515,64,472,62],[515,65,472,63,"USER_PREFERENCES_KEY"],[515,85,472,83],[515,86,472,84],[516,10,473,6],[516,14,473,10,"storedPreferences"],[516,31,473,27],[516,33,473,29],[517,12,474,8],[517,16,474,14,"preferencesData"],[517,31,474,29],[517,34,474,32,"JSON"],[517,38,474,36],[517,39,474,37,"parse"],[517,44,474,42],[517,45,474,43,"storedPreferences"],[517,62,474,60],[517,63,474,61],[518,12,475,8,"set"],[518,15,475,11],[518,16,475,12],[519,14,476,10],[519,17,476,13,"preferencesData"],[519,32,476,28],[520,14,477,10,"isReady"],[520,21,477,17],[520,23,477,19],[520,27,477,23],[521,14,478,10,"isLoading"],[521,23,478,19],[521,25,478,21],[522,12,479,8],[522,13,479,9],[522,14,479,10],[523,10,480,6],[523,11,480,7],[523,17,480,13],[524,12,481,8,"set"],[524,15,481,11],[524,16,481,12],[525,14,482,10,"isReady"],[525,21,482,17],[525,23,482,19],[525,27,482,23],[526,14,483,10,"isLoading"],[526,23,483,19],[526,25,483,21],[527,12,484,8],[527,13,484,9],[527,14,484,10],[528,10,485,6],[529,8,486,4],[529,9,486,5],[529,10,486,6],[529,17,486,13,"error"],[529,22,486,18],[529,24,486,20],[530,10,487,6,"console"],[530,17,487,13],[530,18,487,14,"error"],[530,23,487,19],[530,24,487,20],[530,64,487,60],[530,66,487,62,"error"],[530,71,487,67],[530,72,487,68],[531,10,488,6,"set"],[531,13,488,9],[531,14,488,10],[532,12,489,8,"isReady"],[532,19,489,15],[532,21,489,17],[532,25,489,21],[533,12,490,8,"isLoading"],[533,21,490,17],[533,23,490,19],[534,10,491,6],[534,11,491,7],[534,12,491,8],[535,8,492,4],[536,6,493,2],[536,7,493,3],[537,6,493,3],[537,22,468,2,"initialize"],[537,32,468,12,"initialize"],[537,33,468,12],[538,8,468,12],[538,15,468,12,"_ref8"],[538,20,468,12],[538,21,468,12,"apply"],[538,26,468,12],[538,33,468,12,"arguments"],[538,42,468,12],[539,6,468,12],[540,4,468,12],[540,7,493,3],[541,4,495,2],[542,0,496,0],[543,0,497,0],[544,4,498,2,"setFavoriteClub"],[544,19,498,17],[545,6,498,17],[545,10,498,17,"_ref9"],[545,15,498,17],[545,22,498,17,"_asyncToGenerator"],[545,39,498,17],[545,40,498,17,"default"],[545,47,498,17],[545,49,498,19],[545,60,498,26,"club"],[545,64,498,30],[545,66,498,35],[546,8,499,4],[546,12,499,8],[547,10,500,6],[547,14,500,12,"updatedState"],[547,26,500,24],[547,29,500,27],[548,12,501,8,"favoriteClub"],[548,24,501,20],[548,26,501,22,"club"],[548,30,501,26],[549,12,502,8,"hasSelectedClub"],[549,27,502,23],[549,29,502,25],[549,30,502,26],[549,31,502,27,"club"],[550,10,503,6],[550,11,503,7],[551,10,505,6],[551,14,505,12,"currentState"],[551,26,505,24],[551,29,505,27,"get"],[551,32,505,30],[551,33,505,31],[551,34,505,32],[552,10,506,6],[552,14,506,12,"newState"],[552,22,506,20],[552,25,506,23],[553,12,506,25],[553,15,506,28,"currentState"],[553,27,506,40],[554,12,506,42],[554,15,506,45,"updatedState"],[555,10,506,58],[555,11,506,59],[556,10,508,6],[556,16,508,12,"SecureStore"],[556,27,508,23],[556,28,508,24,"setItemAsync"],[556,40,508,36],[556,41,508,37,"USER_PREFERENCES_KEY"],[556,61,508,57],[556,63,508,59,"JSON"],[556,67,508,63],[556,68,508,64,"stringify"],[556,77,508,73],[556,78,508,74,"newState"],[556,86,508,82],[556,87,508,83],[556,88,508,84],[557,10,509,6,"set"],[557,13,509,9],[557,14,509,10,"updatedState"],[557,26,509,22],[557,27,509,23],[558,10,511,6],[558,17,511,13],[558,21,511,17],[559,8,512,4],[559,9,512,5],[559,10,512,6],[559,17,512,13,"error"],[559,22,512,18],[559,24,512,20],[560,10,513,6,"console"],[560,17,513,13],[560,18,513,14,"error"],[560,23,513,19],[560,24,513,20],[560,54,513,50],[560,56,513,52,"error"],[560,61,513,57],[560,62,513,58],[561,10,514,6],[561,17,514,13],[561,22,514,18],[562,8,515,4],[563,6,516,2],[563,7,516,3],[564,6,516,3],[564,22,498,2,"setFavoriteClub"],[564,37,498,17,"setFavoriteClub"],[564,38,498,17,"_x3"],[564,41,498,17],[565,8,498,17],[565,15,498,17,"_ref9"],[565,20,498,17],[565,21,498,17,"apply"],[565,26,498,17],[565,33,498,17,"arguments"],[565,42,498,17],[566,6,498,17],[567,4,498,17],[567,7,516,3],[568,4,518,2],[569,0,519,0],[570,0,520,0],[571,4,521,2,"updateContentInteractions"],[571,29,521,27],[572,6,521,27],[572,10,521,27,"_ref0"],[572,15,521,27],[572,22,521,27,"_asyncToGenerator"],[572,39,521,27],[572,40,521,27,"default"],[572,47,521,27],[572,49,521,29],[572,60,521,36,"updates"],[572,67,521,43],[572,69,521,48],[573,8,522,4],[573,12,522,8],[574,10,523,6],[574,14,523,12,"currentState"],[574,26,523,24],[574,29,523,27,"get"],[574,32,523,30],[574,33,523,31],[574,34,523,32],[575,10,524,6],[575,14,524,12,"currentInteractions"],[575,33,524,31],[575,36,524,34,"currentState"],[575,48,524,46],[575,49,524,47,"contentInteractions"],[575,68,524,66],[576,10,526,6],[576,14,526,12,"updatedInteractions"],[576,33,526,31],[576,36,526,34],[577,12,527,8],[577,15,527,11,"currentInteractions"],[577,34,527,30],[578,12,528,8],[578,15,528,11,"updates"],[578,22,528,18],[579,12,529,8,"lastActiveDate"],[579,26,529,22],[579,28,529,24],[579,32,529,28,"Date"],[579,36,529,32],[579,37,529,33],[580,10,530,6],[580,11,530,7],[582,10,532,6],[583,10,533,6],[583,14,533,10,"updates"],[583,21,533,17],[583,22,533,18,"category"],[583,30,533,26],[583,32,533,28],[584,12,534,8],[584,16,534,14,"recentCategories"],[584,32,534,30],[584,35,534,33],[584,36,534,34],[584,40,534,38,"currentInteractions"],[584,59,534,57],[584,60,534,58,"recentCategories"],[584,76,534,74],[584,80,534,78],[584,82,534,80],[584,83,534,81],[584,84,534,82],[585,12,535,8],[585,16,535,12],[585,17,535,13,"recentCategories"],[585,33,535,29],[585,34,535,30,"includes"],[585,42,535,38],[585,43,535,39,"updates"],[585,50,535,46],[585,51,535,47,"category"],[585,59,535,55],[585,60,535,56],[585,62,535,58],[586,14,536,10,"recentCategories"],[586,30,536,26],[586,31,536,27,"unshift"],[586,38,536,34],[586,39,536,35,"updates"],[586,46,536,42],[586,47,536,43,"category"],[586,55,536,51],[586,56,536,52],[587,14,537,10],[588,14,538,10,"updatedInteractions"],[588,33,538,29],[588,34,538,30,"recentCategories"],[588,50,538,46],[588,53,538,49,"recentCategories"],[588,69,538,65],[588,70,538,66,"slice"],[588,75,538,71],[588,76,538,72],[588,77,538,73],[588,79,538,75],[588,81,538,77],[588,82,538,78],[589,12,539,8],[590,10,540,6],[591,10,542,6],[591,14,542,12,"updatedState"],[591,26,542,24],[591,29,542,27],[592,12,543,8],[592,15,543,11,"currentState"],[592,27,543,23],[593,12,544,8,"contentInteractions"],[593,31,544,27],[593,33,544,29,"updatedInteractions"],[594,10,545,6],[594,11,545,7],[595,10,547,6],[595,16,547,12,"SecureStore"],[595,27,547,23],[595,28,547,24,"setItemAsync"],[595,40,547,36],[595,41,547,37,"USER_PREFERENCES_KEY"],[595,61,547,57],[595,63,547,59,"JSON"],[595,67,547,63],[595,68,547,64,"stringify"],[595,77,547,73],[595,78,547,74,"updatedState"],[595,90,547,86],[595,91,547,87],[595,92,547,88],[596,10,548,6,"set"],[596,13,548,9],[596,14,548,10],[597,12,548,12,"contentInteractions"],[597,31,548,31],[597,33,548,33,"updatedInteractions"],[598,10,548,53],[598,11,548,54],[598,12,548,55],[599,10,550,6],[599,17,550,13],[599,21,550,17],[600,8,551,4],[600,9,551,5],[600,10,551,6],[600,17,551,13,"error"],[600,22,551,18],[600,24,551,20],[601,10,552,6,"console"],[601,17,552,13],[601,18,552,14,"error"],[601,23,552,19],[601,24,552,20],[601,64,552,60],[601,66,552,62,"error"],[601,71,552,67],[601,72,552,68],[602,10,553,6],[602,17,553,13],[602,22,553,18],[603,8,554,4],[604,6,555,2],[604,7,555,3],[605,6,555,3],[605,22,521,2,"updateContentInteractions"],[605,47,521,27,"updateContentInteractions"],[605,48,521,27,"_x4"],[605,51,521,27],[606,8,521,27],[606,15,521,27,"_ref0"],[606,20,521,27],[606,21,521,27,"apply"],[606,26,521,27],[606,33,521,27,"arguments"],[606,42,521,27],[607,6,521,27],[608,4,521,27],[608,7,555,3],[609,4,557,2],[610,0,558,0],[611,0,559,0],[612,4,560,2,"updateNotificationSettings"],[612,30,560,28],[613,6,560,28],[613,10,560,28,"_ref1"],[613,15,560,28],[613,22,560,28,"_asyncToGenerator"],[613,39,560,28],[613,40,560,28,"default"],[613,47,560,28],[613,49,560,30],[613,60,560,37,"settings"],[613,68,560,45],[613,70,560,50],[614,8,561,4],[614,12,561,8],[615,10,562,6],[615,14,562,12,"currentState"],[615,26,562,24],[615,29,562,27,"get"],[615,32,562,30],[615,33,562,31],[615,34,562,32],[616,10,563,6],[616,14,563,12,"updatedSettings"],[616,29,563,27],[616,32,563,30],[617,12,564,8],[617,15,564,11,"currentState"],[617,27,564,23],[617,28,564,24,"notificationSettings"],[617,48,564,44],[618,12,565,8],[618,15,565,11,"settings"],[619,10,566,6],[619,11,566,7],[620,10,568,6],[620,14,568,12,"updatedState"],[620,26,568,24],[620,29,568,27],[621,12,569,8],[621,15,569,11,"currentState"],[621,27,569,23],[622,12,570,8,"notificationSettings"],[622,32,570,28],[622,34,570,30,"updatedSettings"],[623,10,571,6],[623,11,571,7],[624,10,573,6],[624,16,573,12,"SecureStore"],[624,27,573,23],[624,28,573,24,"setItemAsync"],[624,40,573,36],[624,41,573,37,"USER_PREFERENCES_KEY"],[624,61,573,57],[624,63,573,59,"JSON"],[624,67,573,63],[624,68,573,64,"stringify"],[624,77,573,73],[624,78,573,74,"updatedState"],[624,90,573,86],[624,91,573,87],[624,92,573,88],[625,10,574,6,"set"],[625,13,574,9],[625,14,574,10],[626,12,574,12,"notificationSettings"],[626,32,574,32],[626,34,574,34,"updatedSettings"],[627,10,574,50],[627,11,574,51],[627,12,574,52],[628,10,576,6],[628,17,576,13],[628,21,576,17],[629,8,577,4],[629,9,577,5],[629,10,577,6],[629,17,577,13,"error"],[629,22,577,18],[629,24,577,20],[630,10,578,6,"console"],[630,17,578,13],[630,18,578,14,"error"],[630,23,578,19],[630,24,578,20],[630,65,578,61],[630,67,578,63,"error"],[630,72,578,68],[630,73,578,69],[631,10,579,6],[631,17,579,13],[631,22,579,18],[632,8,580,4],[633,6,581,2],[633,7,581,3],[634,6,581,3],[634,22,560,2,"updateNotificationSettings"],[634,48,560,28,"updateNotificationSettings"],[634,49,560,28,"_x5"],[634,52,560,28],[635,8,560,28],[635,15,560,28,"_ref1"],[635,20,560,28],[635,21,560,28,"apply"],[635,26,560,28],[635,33,560,28,"arguments"],[635,42,560,28],[636,6,560,28],[637,4,560,28],[637,7,581,3],[638,4,583,2],[639,0,584,0],[640,0,585,0],[641,4,586,2,"getPersonalizedFilters"],[641,26,586,24],[641,28,586,26,"getPersonalizedFilters"],[641,29,586,26],[641,34,586,32],[642,6,587,4],[642,10,587,4,"_get7"],[642,15,587,4],[642,18,587,73,"get"],[642,21,587,76],[642,22,587,77],[642,23,587,78],[643,8,587,12,"favoriteClub"],[643,20,587,24],[643,23,587,24,"_get7"],[643,28,587,24],[643,29,587,12,"favoriteClub"],[643,41,587,24],[644,8,587,26,"preferredCategories"],[644,27,587,45],[644,30,587,45,"_get7"],[644,35,587,45],[644,36,587,26,"preferredCategories"],[644,55,587,45],[645,8,587,47,"preferredCompetitions"],[645,29,587,68],[645,32,587,68,"_get7"],[645,37,587,68],[645,38,587,47,"preferredCompetitions"],[645,59,587,68],[646,6,589,4],[646,10,589,10,"filters"],[646,17,589,17],[646,20,589,20],[646,21,589,21],[646,22,589,22],[647,6,591,4],[647,10,591,8,"favoriteClub"],[647,22,591,20],[647,24,591,22],[648,8,592,6,"filters"],[648,15,592,13],[648,16,592,14,"clubs"],[648,21,592,19],[648,24,592,22],[648,25,592,23,"favoriteClub"],[648,37,592,35],[648,38,592,36,"id"],[648,40,592,38],[648,41,592,39],[649,6,593,4],[650,6,595,4],[650,10,595,8,"preferredCategories"],[650,29,595,27],[650,30,595,28,"length"],[650,36,595,34],[650,39,595,37],[650,40,595,38],[650,42,595,40],[651,8,596,6,"filters"],[651,15,596,13],[651,16,596,14,"categories"],[651,26,596,24],[651,29,596,27,"preferredCategories"],[651,48,596,46],[652,6,597,4],[653,6,599,4],[653,10,599,8,"preferredCompetitions"],[653,31,599,29],[653,32,599,30,"length"],[653,38,599,36],[653,41,599,39],[653,42,599,40],[653,44,599,42],[654,8,600,6,"filters"],[654,15,600,13],[654,16,600,14,"competitions"],[654,28,600,26],[654,31,600,29,"preferredCompetitions"],[654,52,600,50],[655,6,601,4],[656,6,603,4],[656,13,603,11,"filters"],[656,20,603,18],[657,4,604,2],[657,5,604,3],[658,4,606,2],[659,0,607,0],[660,0,608,0],[661,4,609,2,"clearPreferences"],[661,20,609,18],[662,6,609,18],[662,10,609,18,"_ref10"],[662,16,609,18],[662,23,609,18,"_asyncToGenerator"],[662,40,609,18],[662,41,609,18,"default"],[662,48,609,18],[662,50,609,20],[662,63,609,32],[663,8,610,4],[663,12,610,8],[664,10,611,6],[664,16,611,12,"SecureStore"],[664,27,611,23],[664,28,611,24,"deleteItemAsync"],[664,43,611,39],[664,44,611,40,"USER_PREFERENCES_KEY"],[664,64,611,60],[664,65,611,61],[665,10,613,6,"set"],[665,13,613,9],[665,14,613,10],[666,12,614,8,"favoriteClub"],[666,24,614,20],[666,26,614,22],[666,30,614,26],[667,12,615,8,"hasSelectedClub"],[667,27,615,23],[667,29,615,25],[667,34,615,30],[668,12,616,8,"preferredCategories"],[668,31,616,27],[668,33,616,29],[668,35,616,31],[669,12,617,8,"preferredCompetitions"],[669,33,617,29],[669,35,617,31],[669,37,617,33],[670,12,618,8,"contentLanguage"],[670,27,618,23],[670,29,618,25],[670,33,618,29],[671,12,619,8,"notificationSettings"],[671,32,619,28],[671,34,619,30],[672,14,620,10,"liveMatchAlerts"],[672,29,620,25],[672,31,620,27],[672,35,620,31],[673,14,621,10,"newsUpdates"],[673,25,621,21],[673,27,621,23],[673,31,621,27],[674,14,622,10,"subscriptionReminders"],[674,35,622,31],[674,37,622,33],[674,41,622,37],[675,14,623,10,"clubNewsUpdates"],[675,29,623,25],[675,31,623,27],[676,12,624,8],[676,13,624,9],[677,12,625,8,"contentInteractions"],[677,31,625,27],[677,33,625,29],[678,14,626,10,"articlesRead"],[678,26,626,22],[678,28,626,24],[678,29,626,25],[679,14,627,10,"streamingMinutes"],[679,30,627,26],[679,32,627,28],[679,33,627,29],[680,14,628,10,"lastActiveDate"],[680,28,628,24],[680,30,628,26],[680,34,628,30],[681,14,629,10,"recentCategories"],[681,30,629,26],[681,32,629,28],[681,34,629,30],[682,14,630,10,"premiumContentAccessed"],[682,36,630,32],[682,38,630,34],[683,12,631,8],[684,10,632,6],[684,11,632,7],[684,12,632,8],[685,10,634,6],[685,17,634,13],[685,21,634,17],[686,8,635,4],[686,9,635,5],[686,10,635,6],[686,17,635,13,"error"],[686,22,635,18],[686,24,635,20],[687,10,636,6,"console"],[687,17,636,13],[687,18,636,14,"error"],[687,23,636,19],[687,24,636,20],[687,54,636,50],[687,56,636,52,"error"],[687,61,636,57],[687,62,636,58],[688,10,637,6],[688,17,637,13],[688,22,637,18],[689,8,638,4],[690,6,639,2],[690,7,639,3],[691,6,639,3],[691,22,609,2,"clearPreferences"],[691,38,609,18,"clearPreferences"],[691,39,609,18],[692,8,609,18],[692,15,609,18,"_ref10"],[692,21,609,18],[692,22,609,18,"apply"],[692,27,609,18],[692,34,609,18,"arguments"],[692,43,609,18],[693,6,609,18],[694,4,609,18],[695,2,640,0],[695,3,640,1],[695,4,640,2],[695,5,640,3],[696,0,640,4],[696,3]],"functionMap":{"names":["<global>","create$argument_0","initialize","validateSubscription","setSubscription","clearSubscription","updateSubscriptionStatus","isEligibleForFirstTimeDiscount","getApplicablePricing","calculatePrice","setPaymentProcessing","setFirstPurchaseDate","isSubscriptionExpiringSoon","isSubscriptionExpired","getSubscriptionSummary","clearPaymentError","syncSubscription","showPaywall","hidePaywall","loadSubscriptionStatus","get__isSubscribed","setFavoriteClub","updateContentInteractions","updateNotificationSettings","getPersonalizedFilters","clearPreferences"],"mappings":"AAA;2CCgB;cC6B;GDmC;wBEK;GFc;mBGK;GHyB;qBIK;GJoB;4BKK;GL4B;kCMK;GNG;wBOK;GPmB;kBQK;GRsB;wBSK;GTM;wBUK;GVmB;8BWK;GXY;yBYK;GZW;0BaK;GbqD;qBcK;GdE;oBeK;GfuB;egBG;GhBE;eiBE;GjBE;0BkBG;GlBG;EmBE;GnBE;EDC;8CCM;cCkC;GDyB;mBoBK;GpBkB;6BqBK;GrBkC;8BsBK;GtBqB;0BuBK;GvBkB;oBwBK;GxB8B;EDC"},"hasCjsExports":false},"type":"js/module"}]}