{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./BadgeModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":40,"index":97}}],"key":"r7fk+7ZxSOstJNjSYSB8oukiur0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return getBadgeCountAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _BadgeModule = require(_dependencyMap[2], \"./BadgeModule\");\n  var BadgeModule = _interopDefault(_BadgeModule);\n  /**\n   * Fetches the number currently set as the badge of the app icon on device's home screen. A `0` value means that the badge is not displayed.\n   * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will always resolve to `0`.\n   * @return Returns a Promise resolving to a number that represents the current badge of the app icon.\n   * @header badge\n   */\n  function getBadgeCountAsync() {\n    return _getBadgeCountAsync.apply(this, arguments);\n  }\n  function _getBadgeCountAsync() {\n    _getBadgeCountAsync = (0, _asyncToGenerator.default)(function* () {\n      if (!BadgeModule.default.getBadgeCountAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'getBadgeCountAsync');\n      }\n      return yield BadgeModule.default.getBadgeCountAsync();\n    });\n    return _getBadgeCountAsync.apply(this, arguments);\n  }\n});","lineCount":41,"map":[[20,2,1,0],[20,6,1,0,"_expoModulesCore"],[20,22,1,0],[20,25,1,0,"require"],[20,32,1,0],[20,33,1,0,"_dependencyMap"],[20,47,1,0],[21,2,2,0],[21,6,2,0,"_BadgeModule"],[21,18,2,0],[21,21,2,0,"require"],[21,28,2,0],[21,29,2,0,"_dependencyMap"],[21,43,2,0],[22,2,2,0],[22,6,2,0,"BadgeModule"],[22,17,2,0],[22,20,2,0,"_interopDefault"],[22,35,2,0],[22,36,2,0,"_BadgeModule"],[22,48,2,0],[23,2,3,0],[24,0,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,2,3,0],[29,11,9,30,"getBadgeCountAsync"],[29,29,9,48,"getBadgeCountAsync"],[29,30,9,48],[30,4,9,48],[30,11,9,48,"_getBadgeCountAsync"],[30,30,9,48],[30,31,9,48,"apply"],[30,36,9,48],[30,43,9,48,"arguments"],[30,52,9,48],[31,2,9,48],[32,2,9,48],[32,11,9,48,"_getBadgeCountAsync"],[32,31,9,48],[33,4,9,48,"_getBadgeCountAsync"],[33,23,9,48],[33,30,9,48,"_asyncToGenerator"],[33,47,9,48],[33,48,9,48,"default"],[33,55,9,48],[33,57,9,15],[33,70,9,51],[34,6,10,4],[34,10,10,8],[34,11,10,9,"BadgeModule"],[34,22,10,20],[34,23,10,20,"default"],[34,30,10,20],[34,31,10,21,"getBadgeCountAsync"],[34,49,10,39],[34,51,10,41],[35,8,11,8],[35,14,11,14],[35,18,11,18,"UnavailabilityError"],[35,34,11,37],[35,35,11,37,"UnavailabilityError"],[35,54,11,37],[35,55,11,38],[35,74,11,57],[35,76,11,59],[35,96,11,79],[35,97,11,80],[36,6,12,4],[37,6,13,4],[37,19,13,17,"BadgeModule"],[37,30,13,28],[37,31,13,28,"default"],[37,38,13,28],[37,39,13,29,"getBadgeCountAsync"],[37,57,13,47],[37,58,13,48],[37,59,13,49],[38,4,14,0],[38,5,14,1],[39,4,14,1],[39,11,14,1,"_getBadgeCountAsync"],[39,30,14,1],[39,31,14,1,"apply"],[39,36,14,1],[39,43,14,1,"arguments"],[39,52,14,1],[40,2,14,1],[41,0,14,1],[41,3]],"functionMap":{"names":["<global>","getBadgeCountAsync"],"mappings":"AAA;eCQ;CDK"},"hasCjsExports":false},"type":"js/module"}]}