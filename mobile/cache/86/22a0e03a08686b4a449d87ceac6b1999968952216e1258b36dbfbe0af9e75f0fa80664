{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return setNotificationChannelGroupAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  /**\n   * Assigns the channel group configuration to a channel group of a specified name (creating it if need be).\n   * @param groupId The channel group's identifier.\n   * @param group Object representing the channel group configuration.\n   * @return A `Promise` resolving to the object (of type [`NotificationChannelGroup`](#notificationchannelgroup))\n   * describing the modified channel group or to `null` if the platform does not support notification channels.\n   * @platform android\n   * @header channels\n   */\n  function setNotificationChannelGroupAsync(_x, _x2) {\n    return _setNotificationChannelGroupAsync.apply(this, arguments);\n  }\n  function _setNotificationChannelGroupAsync() {\n    _setNotificationChannelGroupAsync = (0, _asyncToGenerator.default)(function* (groupId, group) {\n      console.debug('Notification channels feature is only supported on Android.');\n      return null;\n    });\n    return _setNotificationChannelGroupAsync.apply(this, arguments);\n  }\n});","lineCount":39,"map":[[20,2,1,0],[21,0,2,0],[22,0,3,0],[23,0,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[29,2,1,0],[29,11,10,30,"setNotificationChannelGroupAsync"],[29,43,10,62,"setNotificationChannelGroupAsync"],[29,44,10,62,"_x"],[29,46,10,62],[29,48,10,62,"_x2"],[29,51,10,62],[30,4,10,62],[30,11,10,62,"_setNotificationChannelGroupAsync"],[30,44,10,62],[30,45,10,62,"apply"],[30,50,10,62],[30,57,10,62,"arguments"],[30,66,10,62],[31,2,10,62],[32,2,10,62],[32,11,10,62,"_setNotificationChannelGroupAsync"],[32,45,10,62],[33,4,10,62,"_setNotificationChannelGroupAsync"],[33,37,10,62],[33,44,10,62,"_asyncToGenerator"],[33,61,10,62],[33,62,10,62,"default"],[33,69,10,62],[33,71,10,15],[33,82,10,63,"groupId"],[33,89,10,70],[33,91,10,72,"group"],[33,96,10,77],[33,98,10,79],[34,6,11,4,"console"],[34,13,11,11],[34,14,11,12,"debug"],[34,19,11,17],[34,20,11,18],[34,81,11,79],[34,82,11,80],[35,6,12,4],[35,13,12,11],[35,17,12,15],[36,4,13,0],[36,5,13,1],[37,4,13,1],[37,11,13,1,"_setNotificationChannelGroupAsync"],[37,44,13,1],[37,45,13,1,"apply"],[37,50,13,1],[37,57,13,1,"arguments"],[37,66,13,1],[38,2,13,1],[39,0,13,1],[39,3]],"functionMap":{"names":["<global>","setNotificationChannelGroupAsync"],"mappings":"AAA;eCS;CDG"},"hasCjsExports":false},"type":"js/module"}]}