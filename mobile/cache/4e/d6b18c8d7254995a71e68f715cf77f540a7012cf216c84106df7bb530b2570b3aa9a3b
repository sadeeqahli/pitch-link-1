{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./BadgeModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":40,"index":107}}],"key":"r7fk+7ZxSOstJNjSYSB8oukiur0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return setBadgeCountAsync;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _BadgeModule = require(_dependencyMap[2], \"./BadgeModule\");\n  var BadgeModule = _interopDefault(_BadgeModule);\n  /**\n   * Sets the badge of the app's icon to the specified number. Setting it to `0` clears the badge. On iOS, this method requires that you have requested\n   * the user's permission for `allowBadge` via [`requestPermissionsAsync`](#requestpermissionsasyncpermissions),\n   * otherwise it will automatically return `false`.\n   * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will resolve to `false`.\n   * @param badgeCount The count which should appear on the badge. A value of `0` will clear the badge.\n   * @param options An object of options configuring behavior applied.\n   * @return It returns a Promise resolving to a boolean representing whether the setting of the badge succeeded.\n   * @header badge\n   */\n  function setBadgeCountAsync(_x, _x2) {\n    return _setBadgeCountAsync.apply(this, arguments);\n  }\n  function _setBadgeCountAsync() {\n    _setBadgeCountAsync = (0, _asyncToGenerator.default)(function* (badgeCount, options) {\n      if (!BadgeModule.default.setBadgeCountAsync) {\n        throw new _expoModulesCore.UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n      }\n      var platformOptions = options?.[_expoModulesCore.Platform.OS];\n      return yield BadgeModule.default.setBadgeCountAsync(badgeCount, platformOptions);\n    });\n    return _setBadgeCountAsync.apply(this, arguments);\n  }\n});","lineCount":46,"map":[[20,2,1,0],[20,6,1,0,"_expoModulesCore"],[20,22,1,0],[20,25,1,0,"require"],[20,32,1,0],[20,33,1,0,"_dependencyMap"],[20,47,1,0],[21,2,2,0],[21,6,2,0,"_BadgeModule"],[21,18,2,0],[21,21,2,0,"require"],[21,28,2,0],[21,29,2,0,"_dependencyMap"],[21,43,2,0],[22,2,2,0],[22,6,2,0,"BadgeModule"],[22,17,2,0],[22,20,2,0,"_interopDefault"],[22,35,2,0],[22,36,2,0,"_BadgeModule"],[22,48,2,0],[23,2,3,0],[24,0,4,0],[25,0,5,0],[26,0,6,0],[27,0,7,0],[28,0,8,0],[29,0,9,0],[30,0,10,0],[31,0,11,0],[32,0,12,0],[33,2,3,0],[33,11,13,30,"setBadgeCountAsync"],[33,29,13,48,"setBadgeCountAsync"],[33,30,13,48,"_x"],[33,32,13,48],[33,34,13,48,"_x2"],[33,37,13,48],[34,4,13,48],[34,11,13,48,"_setBadgeCountAsync"],[34,30,13,48],[34,31,13,48,"apply"],[34,36,13,48],[34,43,13,48,"arguments"],[34,52,13,48],[35,2,13,48],[36,2,13,48],[36,11,13,48,"_setBadgeCountAsync"],[36,31,13,48],[37,4,13,48,"_setBadgeCountAsync"],[37,23,13,48],[37,30,13,48,"_asyncToGenerator"],[37,47,13,48],[37,48,13,48,"default"],[37,55,13,48],[37,57,13,15],[37,68,13,49,"badgeCount"],[37,78,13,59],[37,80,13,61,"options"],[37,87,13,68],[37,89,13,70],[38,6,14,4],[38,10,14,8],[38,11,14,9,"BadgeModule"],[38,22,14,20],[38,23,14,20,"default"],[38,30,14,20],[38,31,14,21,"setBadgeCountAsync"],[38,49,14,39],[38,51,14,41],[39,8,15,8],[39,14,15,14],[39,18,15,18,"UnavailabilityError"],[39,34,15,37],[39,35,15,37,"UnavailabilityError"],[39,54,15,37],[39,55,15,38],[39,74,15,57],[39,76,15,59],[39,96,15,79],[39,97,15,80],[40,6,16,4],[41,6,17,4],[41,10,17,10,"platformOptions"],[41,25,17,25],[41,28,17,28,"options"],[41,35,17,35],[41,38,17,38,"Platform"],[41,54,17,46],[41,55,17,46,"Platform"],[41,63,17,46],[41,64,17,47,"OS"],[41,66,17,49],[41,67,17,50],[42,6,18,4],[42,19,18,17,"BadgeModule"],[42,30,18,28],[42,31,18,28,"default"],[42,38,18,28],[42,39,18,29,"setBadgeCountAsync"],[42,57,18,47],[42,58,18,48,"badgeCount"],[42,68,18,58],[42,70,18,60,"platformOptions"],[42,85,18,75],[42,86,18,76],[43,4,19,0],[43,5,19,1],[44,4,19,1],[44,11,19,1,"_setBadgeCountAsync"],[44,30,19,1],[44,31,19,1,"apply"],[44,36,19,1],[44,43,19,1,"arguments"],[44,52,19,1],[45,2,19,1],[46,0,19,1],[46,3]],"functionMap":{"names":["<global>","setBadgeCountAsync"],"mappings":"AAA;eCY;CDM"},"hasCjsExports":false},"type":"js/module"}]}